{"version":3,"sources":["../node_modules/ethjs-unit/lib/index.js","../node_modules/utf8/utf8.js","../node_modules/ethjs-unit/node_modules/bn.js/lib/bn.js","../node_modules/number-to-bn/node_modules/bn.js/lib/bn.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/wrapNativeSuper.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/isNativeFunction.js","../node_modules/querystring-es3/index.js","../node_modules/querystring-es3/decode.js","../node_modules/querystring-es3/encode.js","../node_modules/number-to-bn/src/index.js"],"names":["BN","require","numberToBN","zero","negative1","unitMap","getValueOfUnit","unitInput","unit","toLowerCase","unitValue","Error","JSON","stringify","numberToString","arg","match","String","toString","toTwos","dividedToIntegerBy","toPrecision","module","exports","fromWei","weiInput","optionsInput","wei","negative","lt","base","baseLength","length","options","mul","fraction","mod","pad","whole","div","commify","replace","value","toWei","etherInput","ether","substring","comps","split","add","root","byteArray","byteCount","byteIndex","stringFromCharCode","fromCharCode","ucs2decode","string","extra","output","counter","charCodeAt","push","checkScalarValue","codePoint","toUpperCase","createByte","shift","encodeCodePoint","symbol","readContinuationByte","continuationByte","decodeSymbol","byte1","version","encode","codePoints","index","byteString","decode","tmp","array","ucs2encode","assert","val","msg","inherits","ctor","superCtor","super_","TempCtor","prototype","constructor","number","endian","isBN","this","words","red","_init","Buffer","wordSize","e","parseHex","str","start","end","r","len","Math","min","i","c","parseBase","num","Array","isArray","max","left","right","cmp","_initNumber","_initArray","_parseHex","_parseBase","strip","toArray","ceil","j","w","off","limbLen","limbPow","total","word","imuln","_iaddn","pow","copy","dest","clone","_expand","size","_normSign","inspect","zeros","groupSizes","groupBases","smallMulTo","self","out","a","b","lo","carry","k","ncarry","rword","maxJ","padding","groupSize","groupBase","isZero","modn","idivn","toNumber","ret","toJSON","toBuffer","toArrayLike","ArrayType","byteLength","reqLength","littleEndian","res","q","andln","iushrn","clz32","_countBits","t","_zeroBits","bitLength","hi","zeroBits","width","abs","inotn","iaddn","fromTwos","testn","notn","ineg","isNeg","neg","iuor","ior","or","uor","iuand","iand","and","uand","iuxor","ixor","xor","uxor","bytesNeeded","bitsLeft","setn","bit","wbit","iadd","isub","sub","comb10MulTo","mid","o","a0","al0","ah0","a1","al1","ah1","a2","al2","ah2","a3","al3","ah3","a4","al4","ah4","a5","al5","ah5","a6","al6","ah6","a7","al7","ah7","a8","al8","ah8","a9","al9","ah9","b0","bl0","bh0","b1","bl1","bh1","b2","bl2","bh2","b3","bl3","bh3","b4","bl4","bh4","b5","bl5","bh5","b6","bl6","bh6","b7","bl7","bh7","b8","bl8","bh8","b9","bl9","bh9","w0","imul","w1","w2","w3","w4","w5","w6","w7","w8","w9","w10","w11","w12","w13","w14","w15","w16","w17","w18","jumboMulTo","FFTM","mulp","x","y","mulTo","hncarry","bigMulTo","makeRBT","N","l","revBin","rb","permute","rbt","rws","iws","rtws","itws","transform","s","rtwdf","cos","PI","itwdf","sin","p","rtwdf_","itwdf_","re","ie","ro","io","rx","guessLen13b","n","m","odd","conjugate","normalize13b","ws","round","convert13b","stub","ph","_","rwst","iwst","nrws","nrwst","niwst","rmws","mulf","muln","sqr","isqr","toBitArray","iushln","bits","carryMask","newCarry","ishln","hint","extended","h","mask","maskedWords","ishrn","shln","ushln","shrn","ushrn","imaskn","maskn","isubn","addn","subn","iabs","_ishlnsubmul","_wordDiv","mode","bhi","diff","qj","divmod","positive","divn","umod","divRound","dm","half","r2","acc","egcd","A","B","C","D","g","isEven","yp","xp","im","isOdd","jm","gcd","_invmp","x1","x2","delta","cmpn","invm","bincn","ucmp","gtn","gt","gten","gte","ltn","lten","lte","eqn","eq","Red","toRed","ctx","convertTo","_forceRed","fromRed","convertFrom","forceRed","redAdd","redIAdd","redSub","redISub","redShl","shl","redMul","_verify2","redIMul","redSqr","_verify1","redISqr","redSqrt","sqrt","redInvm","redNeg","redPow","primes","k256","p224","p192","p25519","MPrime","name","_tmp","K256","call","P224","P192","P25519","prime","_prime","Mont","imod","rinv","minv","ireduce","rlen","imulK","input","outLen","prev","next","mod3","one","nOne","lpow","z","inv","wnd","current","currentLen","mont","u","getPrototypeOf","setPrototypeOf","isNativeFunction","construct","_wrapNativeSuper","Class","_cache","Map","undefined","TypeError","has","get","set","Wrapper","arguments","Object","create","enumerable","writable","configurable","fn","Function","indexOf","parse","hasOwnProperty","obj","prop","qs","sep","regexp","maxKeys","kstr","vstr","v","idx","substr","decodeURIComponent","xs","stringifyPrimitive","isFinite","map","objectKeys","ks","encodeURIComponent","join","f","keys","key","stripHexPrefix","multiplier","formattedString","trim","isHexPrefixed","stringArg","slice","pop"],"mappings":"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","file":"static/js/16.7f3b4e26.chunk.js","sourcesContent":["'use strict';\n\nvar BN = require('bn.js');\nvar numberToBN = require('number-to-bn');\n\nvar zero = new BN(0);\nvar negative1 = new BN(-1);\n\n// complete ethereum unit map\nvar unitMap = {\n  'noether': '0', // eslint-disable-line\n  'wei': '1', // eslint-disable-line\n  'kwei': '1000', // eslint-disable-line\n  'Kwei': '1000', // eslint-disable-line\n  'babbage': '1000', // eslint-disable-line\n  'femtoether': '1000', // eslint-disable-line\n  'mwei': '1000000', // eslint-disable-line\n  'Mwei': '1000000', // eslint-disable-line\n  'lovelace': '1000000', // eslint-disable-line\n  'picoether': '1000000', // eslint-disable-line\n  'gwei': '1000000000', // eslint-disable-line\n  'Gwei': '1000000000', // eslint-disable-line\n  'shannon': '1000000000', // eslint-disable-line\n  'nanoether': '1000000000', // eslint-disable-line\n  'nano': '1000000000', // eslint-disable-line\n  'szabo': '1000000000000', // eslint-disable-line\n  'microether': '1000000000000', // eslint-disable-line\n  'micro': '1000000000000', // eslint-disable-line\n  'finney': '1000000000000000', // eslint-disable-line\n  'milliether': '1000000000000000', // eslint-disable-line\n  'milli': '1000000000000000', // eslint-disable-line\n  'ether': '1000000000000000000', // eslint-disable-line\n  'kether': '1000000000000000000000', // eslint-disable-line\n  'grand': '1000000000000000000000', // eslint-disable-line\n  'mether': '1000000000000000000000000', // eslint-disable-line\n  'gether': '1000000000000000000000000000', // eslint-disable-line\n  'tether': '1000000000000000000000000000000' };\n\n/**\n * Returns value of unit in Wei\n *\n * @method getValueOfUnit\n * @param {String} unit the unit to convert to, default ether\n * @returns {BigNumber} value of the unit (in Wei)\n * @throws error if the unit is not correct:w\n */\nfunction getValueOfUnit(unitInput) {\n  var unit = unitInput ? unitInput.toLowerCase() : 'ether';\n  var unitValue = unitMap[unit]; // eslint-disable-line\n\n  if (typeof unitValue !== 'string') {\n    throw new Error('[ethjs-unit] the unit provided ' + unitInput + ' doesn\\'t exists, please use the one of the following units ' + JSON.stringify(unitMap, null, 2));\n  }\n\n  return new BN(unitValue, 10);\n}\n\nfunction numberToString(arg) {\n  if (typeof arg === 'string') {\n    if (!arg.match(/^-?[0-9.]+$/)) {\n      throw new Error('while converting number to string, invalid number value \\'' + arg + '\\', should be a number matching (^-?[0-9.]+).');\n    }\n    return arg;\n  } else if (typeof arg === 'number') {\n    return String(arg);\n  } else if (typeof arg === 'object' && arg.toString && (arg.toTwos || arg.dividedToIntegerBy)) {\n    if (arg.toPrecision) {\n      return String(arg.toPrecision());\n    } else {\n      // eslint-disable-line\n      return arg.toString(10);\n    }\n  }\n  throw new Error('while converting number to string, invalid number value \\'' + arg + '\\' type ' + typeof arg + '.');\n}\n\nfunction fromWei(weiInput, unit, optionsInput) {\n  var wei = numberToBN(weiInput); // eslint-disable-line\n  var negative = wei.lt(zero); // eslint-disable-line\n  var base = getValueOfUnit(unit);\n  var baseLength = unitMap[unit].length - 1 || 1;\n  var options = optionsInput || {};\n\n  if (negative) {\n    wei = wei.mul(negative1);\n  }\n\n  var fraction = wei.mod(base).toString(10); // eslint-disable-line\n\n  while (fraction.length < baseLength) {\n    fraction = '0' + fraction;\n  }\n\n  if (!options.pad) {\n    fraction = fraction.match(/^([0-9]*[1-9]|0)(0*)/)[1];\n  }\n\n  var whole = wei.div(base).toString(10); // eslint-disable-line\n\n  if (options.commify) {\n    whole = whole.replace(/\\B(?=(\\d{3})+(?!\\d))/g, ',');\n  }\n\n  var value = '' + whole + (fraction == '0' ? '' : '.' + fraction); // eslint-disable-line\n\n  if (negative) {\n    value = '-' + value;\n  }\n\n  return value;\n}\n\nfunction toWei(etherInput, unit) {\n  var ether = numberToString(etherInput); // eslint-disable-line\n  var base = getValueOfUnit(unit);\n  var baseLength = unitMap[unit].length - 1 || 1;\n\n  // Is it negative?\n  var negative = ether.substring(0, 1) === '-'; // eslint-disable-line\n  if (negative) {\n    ether = ether.substring(1);\n  }\n\n  if (ether === '.') {\n    throw new Error('[ethjs-unit] while converting number ' + etherInput + ' to wei, invalid value');\n  }\n\n  // Split it into a whole and fractional part\n  var comps = ether.split('.'); // eslint-disable-line\n  if (comps.length > 2) {\n    throw new Error('[ethjs-unit] while converting number ' + etherInput + ' to wei,  too many decimal points');\n  }\n\n  var whole = comps[0],\n      fraction = comps[1]; // eslint-disable-line\n\n  if (!whole) {\n    whole = '0';\n  }\n  if (!fraction) {\n    fraction = '0';\n  }\n  if (fraction.length > baseLength) {\n    throw new Error('[ethjs-unit] while converting number ' + etherInput + ' to wei, too many decimal places');\n  }\n\n  while (fraction.length < baseLength) {\n    fraction += '0';\n  }\n\n  whole = new BN(whole);\n  fraction = new BN(fraction);\n  var wei = whole.mul(base).add(fraction); // eslint-disable-line\n\n  if (negative) {\n    wei = wei.mul(negative1);\n  }\n\n  return new BN(wei.toString(10), 10);\n}\n\nmodule.exports = {\n  unitMap: unitMap,\n  numberToString: numberToString,\n  getValueOfUnit: getValueOfUnit,\n  fromWei: fromWei,\n  toWei: toWei\n};","/*! https://mths.be/utf8js v3.0.0 by @mathias */\n;(function(root) {\n\n\tvar stringFromCharCode = String.fromCharCode;\n\n\t// Taken from https://mths.be/punycode\n\tfunction ucs2decode(string) {\n\t\tvar output = [];\n\t\tvar counter = 0;\n\t\tvar length = string.length;\n\t\tvar value;\n\t\tvar extra;\n\t\twhile (counter < length) {\n\t\t\tvalue = string.charCodeAt(counter++);\n\t\t\tif (value >= 0xD800 && value <= 0xDBFF && counter < length) {\n\t\t\t\t// high surrogate, and there is a next character\n\t\t\t\textra = string.charCodeAt(counter++);\n\t\t\t\tif ((extra & 0xFC00) == 0xDC00) { // low surrogate\n\t\t\t\t\toutput.push(((value & 0x3FF) << 10) + (extra & 0x3FF) + 0x10000);\n\t\t\t\t} else {\n\t\t\t\t\t// unmatched surrogate; only append this code unit, in case the next\n\t\t\t\t\t// code unit is the high surrogate of a surrogate pair\n\t\t\t\t\toutput.push(value);\n\t\t\t\t\tcounter--;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\toutput.push(value);\n\t\t\t}\n\t\t}\n\t\treturn output;\n\t}\n\n\t// Taken from https://mths.be/punycode\n\tfunction ucs2encode(array) {\n\t\tvar length = array.length;\n\t\tvar index = -1;\n\t\tvar value;\n\t\tvar output = '';\n\t\twhile (++index < length) {\n\t\t\tvalue = array[index];\n\t\t\tif (value > 0xFFFF) {\n\t\t\t\tvalue -= 0x10000;\n\t\t\t\toutput += stringFromCharCode(value >>> 10 & 0x3FF | 0xD800);\n\t\t\t\tvalue = 0xDC00 | value & 0x3FF;\n\t\t\t}\n\t\t\toutput += stringFromCharCode(value);\n\t\t}\n\t\treturn output;\n\t}\n\n\tfunction checkScalarValue(codePoint) {\n\t\tif (codePoint >= 0xD800 && codePoint <= 0xDFFF) {\n\t\t\tthrow Error(\n\t\t\t\t'Lone surrogate U+' + codePoint.toString(16).toUpperCase() +\n\t\t\t\t' is not a scalar value'\n\t\t\t);\n\t\t}\n\t}\n\t/*--------------------------------------------------------------------------*/\n\n\tfunction createByte(codePoint, shift) {\n\t\treturn stringFromCharCode(((codePoint >> shift) & 0x3F) | 0x80);\n\t}\n\n\tfunction encodeCodePoint(codePoint) {\n\t\tif ((codePoint & 0xFFFFFF80) == 0) { // 1-byte sequence\n\t\t\treturn stringFromCharCode(codePoint);\n\t\t}\n\t\tvar symbol = '';\n\t\tif ((codePoint & 0xFFFFF800) == 0) { // 2-byte sequence\n\t\t\tsymbol = stringFromCharCode(((codePoint >> 6) & 0x1F) | 0xC0);\n\t\t}\n\t\telse if ((codePoint & 0xFFFF0000) == 0) { // 3-byte sequence\n\t\t\tcheckScalarValue(codePoint);\n\t\t\tsymbol = stringFromCharCode(((codePoint >> 12) & 0x0F) | 0xE0);\n\t\t\tsymbol += createByte(codePoint, 6);\n\t\t}\n\t\telse if ((codePoint & 0xFFE00000) == 0) { // 4-byte sequence\n\t\t\tsymbol = stringFromCharCode(((codePoint >> 18) & 0x07) | 0xF0);\n\t\t\tsymbol += createByte(codePoint, 12);\n\t\t\tsymbol += createByte(codePoint, 6);\n\t\t}\n\t\tsymbol += stringFromCharCode((codePoint & 0x3F) | 0x80);\n\t\treturn symbol;\n\t}\n\n\tfunction utf8encode(string) {\n\t\tvar codePoints = ucs2decode(string);\n\t\tvar length = codePoints.length;\n\t\tvar index = -1;\n\t\tvar codePoint;\n\t\tvar byteString = '';\n\t\twhile (++index < length) {\n\t\t\tcodePoint = codePoints[index];\n\t\t\tbyteString += encodeCodePoint(codePoint);\n\t\t}\n\t\treturn byteString;\n\t}\n\n\t/*--------------------------------------------------------------------------*/\n\n\tfunction readContinuationByte() {\n\t\tif (byteIndex >= byteCount) {\n\t\t\tthrow Error('Invalid byte index');\n\t\t}\n\n\t\tvar continuationByte = byteArray[byteIndex] & 0xFF;\n\t\tbyteIndex++;\n\n\t\tif ((continuationByte & 0xC0) == 0x80) {\n\t\t\treturn continuationByte & 0x3F;\n\t\t}\n\n\t\t// If we end up here, it’s not a continuation byte\n\t\tthrow Error('Invalid continuation byte');\n\t}\n\n\tfunction decodeSymbol() {\n\t\tvar byte1;\n\t\tvar byte2;\n\t\tvar byte3;\n\t\tvar byte4;\n\t\tvar codePoint;\n\n\t\tif (byteIndex > byteCount) {\n\t\t\tthrow Error('Invalid byte index');\n\t\t}\n\n\t\tif (byteIndex == byteCount) {\n\t\t\treturn false;\n\t\t}\n\n\t\t// Read first byte\n\t\tbyte1 = byteArray[byteIndex] & 0xFF;\n\t\tbyteIndex++;\n\n\t\t// 1-byte sequence (no continuation bytes)\n\t\tif ((byte1 & 0x80) == 0) {\n\t\t\treturn byte1;\n\t\t}\n\n\t\t// 2-byte sequence\n\t\tif ((byte1 & 0xE0) == 0xC0) {\n\t\t\tbyte2 = readContinuationByte();\n\t\t\tcodePoint = ((byte1 & 0x1F) << 6) | byte2;\n\t\t\tif (codePoint >= 0x80) {\n\t\t\t\treturn codePoint;\n\t\t\t} else {\n\t\t\t\tthrow Error('Invalid continuation byte');\n\t\t\t}\n\t\t}\n\n\t\t// 3-byte sequence (may include unpaired surrogates)\n\t\tif ((byte1 & 0xF0) == 0xE0) {\n\t\t\tbyte2 = readContinuationByte();\n\t\t\tbyte3 = readContinuationByte();\n\t\t\tcodePoint = ((byte1 & 0x0F) << 12) | (byte2 << 6) | byte3;\n\t\t\tif (codePoint >= 0x0800) {\n\t\t\t\tcheckScalarValue(codePoint);\n\t\t\t\treturn codePoint;\n\t\t\t} else {\n\t\t\t\tthrow Error('Invalid continuation byte');\n\t\t\t}\n\t\t}\n\n\t\t// 4-byte sequence\n\t\tif ((byte1 & 0xF8) == 0xF0) {\n\t\t\tbyte2 = readContinuationByte();\n\t\t\tbyte3 = readContinuationByte();\n\t\t\tbyte4 = readContinuationByte();\n\t\t\tcodePoint = ((byte1 & 0x07) << 0x12) | (byte2 << 0x0C) |\n\t\t\t\t(byte3 << 0x06) | byte4;\n\t\t\tif (codePoint >= 0x010000 && codePoint <= 0x10FFFF) {\n\t\t\t\treturn codePoint;\n\t\t\t}\n\t\t}\n\n\t\tthrow Error('Invalid UTF-8 detected');\n\t}\n\n\tvar byteArray;\n\tvar byteCount;\n\tvar byteIndex;\n\tfunction utf8decode(byteString) {\n\t\tbyteArray = ucs2decode(byteString);\n\t\tbyteCount = byteArray.length;\n\t\tbyteIndex = 0;\n\t\tvar codePoints = [];\n\t\tvar tmp;\n\t\twhile ((tmp = decodeSymbol()) !== false) {\n\t\t\tcodePoints.push(tmp);\n\t\t}\n\t\treturn ucs2encode(codePoints);\n\t}\n\n\t/*--------------------------------------------------------------------------*/\n\n\troot.version = '3.0.0';\n\troot.encode = utf8encode;\n\troot.decode = utf8decode;\n\n}(typeof exports === 'undefined' ? this.utf8 = {} : exports));\n","(function (module, exports) {\n  'use strict';\n\n  // Utils\n  function assert (val, msg) {\n    if (!val) throw new Error(msg || 'Assertion failed');\n  }\n\n  // Could use `inherits` module, but don't want to move from single file\n  // architecture yet.\n  function inherits (ctor, superCtor) {\n    ctor.super_ = superCtor;\n    var TempCtor = function () {};\n    TempCtor.prototype = superCtor.prototype;\n    ctor.prototype = new TempCtor();\n    ctor.prototype.constructor = ctor;\n  }\n\n  // BN\n\n  function BN (number, base, endian) {\n    if (BN.isBN(number)) {\n      return number;\n    }\n\n    this.negative = 0;\n    this.words = null;\n    this.length = 0;\n\n    // Reduction context\n    this.red = null;\n\n    if (number !== null) {\n      if (base === 'le' || base === 'be') {\n        endian = base;\n        base = 10;\n      }\n\n      this._init(number || 0, base || 10, endian || 'be');\n    }\n  }\n  if (typeof module === 'object') {\n    module.exports = BN;\n  } else {\n    exports.BN = BN;\n  }\n\n  BN.BN = BN;\n  BN.wordSize = 26;\n\n  var Buffer;\n  try {\n    Buffer = require('buf' + 'fer').Buffer;\n  } catch (e) {\n  }\n\n  BN.isBN = function isBN (num) {\n    if (num instanceof BN) {\n      return true;\n    }\n\n    return num !== null && typeof num === 'object' &&\n      num.constructor.wordSize === BN.wordSize && Array.isArray(num.words);\n  };\n\n  BN.max = function max (left, right) {\n    if (left.cmp(right) > 0) return left;\n    return right;\n  };\n\n  BN.min = function min (left, right) {\n    if (left.cmp(right) < 0) return left;\n    return right;\n  };\n\n  BN.prototype._init = function init (number, base, endian) {\n    if (typeof number === 'number') {\n      return this._initNumber(number, base, endian);\n    }\n\n    if (typeof number === 'object') {\n      return this._initArray(number, base, endian);\n    }\n\n    if (base === 'hex') {\n      base = 16;\n    }\n    assert(base === (base | 0) && base >= 2 && base <= 36);\n\n    number = number.toString().replace(/\\s+/g, '');\n    var start = 0;\n    if (number[0] === '-') {\n      start++;\n    }\n\n    if (base === 16) {\n      this._parseHex(number, start);\n    } else {\n      this._parseBase(number, base, start);\n    }\n\n    if (number[0] === '-') {\n      this.negative = 1;\n    }\n\n    this.strip();\n\n    if (endian !== 'le') return;\n\n    this._initArray(this.toArray(), base, endian);\n  };\n\n  BN.prototype._initNumber = function _initNumber (number, base, endian) {\n    if (number < 0) {\n      this.negative = 1;\n      number = -number;\n    }\n    if (number < 0x4000000) {\n      this.words = [ number & 0x3ffffff ];\n      this.length = 1;\n    } else if (number < 0x10000000000000) {\n      this.words = [\n        number & 0x3ffffff,\n        (number / 0x4000000) & 0x3ffffff\n      ];\n      this.length = 2;\n    } else {\n      assert(number < 0x20000000000000); // 2 ^ 53 (unsafe)\n      this.words = [\n        number & 0x3ffffff,\n        (number / 0x4000000) & 0x3ffffff,\n        1\n      ];\n      this.length = 3;\n    }\n\n    if (endian !== 'le') return;\n\n    // Reverse the bytes\n    this._initArray(this.toArray(), base, endian);\n  };\n\n  BN.prototype._initArray = function _initArray (number, base, endian) {\n    // Perhaps a Uint8Array\n    assert(typeof number.length === 'number');\n    if (number.length <= 0) {\n      this.words = [ 0 ];\n      this.length = 1;\n      return this;\n    }\n\n    this.length = Math.ceil(number.length / 3);\n    this.words = new Array(this.length);\n    for (var i = 0; i < this.length; i++) {\n      this.words[i] = 0;\n    }\n\n    var j, w;\n    var off = 0;\n    if (endian === 'be') {\n      for (i = number.length - 1, j = 0; i >= 0; i -= 3) {\n        w = number[i] | (number[i - 1] << 8) | (number[i - 2] << 16);\n        this.words[j] |= (w << off) & 0x3ffffff;\n        this.words[j + 1] = (w >>> (26 - off)) & 0x3ffffff;\n        off += 24;\n        if (off >= 26) {\n          off -= 26;\n          j++;\n        }\n      }\n    } else if (endian === 'le') {\n      for (i = 0, j = 0; i < number.length; i += 3) {\n        w = number[i] | (number[i + 1] << 8) | (number[i + 2] << 16);\n        this.words[j] |= (w << off) & 0x3ffffff;\n        this.words[j + 1] = (w >>> (26 - off)) & 0x3ffffff;\n        off += 24;\n        if (off >= 26) {\n          off -= 26;\n          j++;\n        }\n      }\n    }\n    return this.strip();\n  };\n\n  function parseHex (str, start, end) {\n    var r = 0;\n    var len = Math.min(str.length, end);\n    for (var i = start; i < len; i++) {\n      var c = str.charCodeAt(i) - 48;\n\n      r <<= 4;\n\n      // 'a' - 'f'\n      if (c >= 49 && c <= 54) {\n        r |= c - 49 + 0xa;\n\n      // 'A' - 'F'\n      } else if (c >= 17 && c <= 22) {\n        r |= c - 17 + 0xa;\n\n      // '0' - '9'\n      } else {\n        r |= c & 0xf;\n      }\n    }\n    return r;\n  }\n\n  BN.prototype._parseHex = function _parseHex (number, start) {\n    // Create possibly bigger array to ensure that it fits the number\n    this.length = Math.ceil((number.length - start) / 6);\n    this.words = new Array(this.length);\n    for (var i = 0; i < this.length; i++) {\n      this.words[i] = 0;\n    }\n\n    var j, w;\n    // Scan 24-bit chunks and add them to the number\n    var off = 0;\n    for (i = number.length - 6, j = 0; i >= start; i -= 6) {\n      w = parseHex(number, i, i + 6);\n      this.words[j] |= (w << off) & 0x3ffffff;\n      // NOTE: `0x3fffff` is intentional here, 26bits max shift + 24bit hex limb\n      this.words[j + 1] |= w >>> (26 - off) & 0x3fffff;\n      off += 24;\n      if (off >= 26) {\n        off -= 26;\n        j++;\n      }\n    }\n    if (i + 6 !== start) {\n      w = parseHex(number, start, i + 6);\n      this.words[j] |= (w << off) & 0x3ffffff;\n      this.words[j + 1] |= w >>> (26 - off) & 0x3fffff;\n    }\n    this.strip();\n  };\n\n  function parseBase (str, start, end, mul) {\n    var r = 0;\n    var len = Math.min(str.length, end);\n    for (var i = start; i < len; i++) {\n      var c = str.charCodeAt(i) - 48;\n\n      r *= mul;\n\n      // 'a'\n      if (c >= 49) {\n        r += c - 49 + 0xa;\n\n      // 'A'\n      } else if (c >= 17) {\n        r += c - 17 + 0xa;\n\n      // '0' - '9'\n      } else {\n        r += c;\n      }\n    }\n    return r;\n  }\n\n  BN.prototype._parseBase = function _parseBase (number, base, start) {\n    // Initialize as zero\n    this.words = [ 0 ];\n    this.length = 1;\n\n    // Find length of limb in base\n    for (var limbLen = 0, limbPow = 1; limbPow <= 0x3ffffff; limbPow *= base) {\n      limbLen++;\n    }\n    limbLen--;\n    limbPow = (limbPow / base) | 0;\n\n    var total = number.length - start;\n    var mod = total % limbLen;\n    var end = Math.min(total, total - mod) + start;\n\n    var word = 0;\n    for (var i = start; i < end; i += limbLen) {\n      word = parseBase(number, i, i + limbLen, base);\n\n      this.imuln(limbPow);\n      if (this.words[0] + word < 0x4000000) {\n        this.words[0] += word;\n      } else {\n        this._iaddn(word);\n      }\n    }\n\n    if (mod !== 0) {\n      var pow = 1;\n      word = parseBase(number, i, number.length, base);\n\n      for (i = 0; i < mod; i++) {\n        pow *= base;\n      }\n\n      this.imuln(pow);\n      if (this.words[0] + word < 0x4000000) {\n        this.words[0] += word;\n      } else {\n        this._iaddn(word);\n      }\n    }\n  };\n\n  BN.prototype.copy = function copy (dest) {\n    dest.words = new Array(this.length);\n    for (var i = 0; i < this.length; i++) {\n      dest.words[i] = this.words[i];\n    }\n    dest.length = this.length;\n    dest.negative = this.negative;\n    dest.red = this.red;\n  };\n\n  BN.prototype.clone = function clone () {\n    var r = new BN(null);\n    this.copy(r);\n    return r;\n  };\n\n  BN.prototype._expand = function _expand (size) {\n    while (this.length < size) {\n      this.words[this.length++] = 0;\n    }\n    return this;\n  };\n\n  // Remove leading `0` from `this`\n  BN.prototype.strip = function strip () {\n    while (this.length > 1 && this.words[this.length - 1] === 0) {\n      this.length--;\n    }\n    return this._normSign();\n  };\n\n  BN.prototype._normSign = function _normSign () {\n    // -0 = 0\n    if (this.length === 1 && this.words[0] === 0) {\n      this.negative = 0;\n    }\n    return this;\n  };\n\n  BN.prototype.inspect = function inspect () {\n    return (this.red ? '<BN-R: ' : '<BN: ') + this.toString(16) + '>';\n  };\n\n  /*\n\n  var zeros = [];\n  var groupSizes = [];\n  var groupBases = [];\n\n  var s = '';\n  var i = -1;\n  while (++i < BN.wordSize) {\n    zeros[i] = s;\n    s += '0';\n  }\n  groupSizes[0] = 0;\n  groupSizes[1] = 0;\n  groupBases[0] = 0;\n  groupBases[1] = 0;\n  var base = 2 - 1;\n  while (++base < 36 + 1) {\n    var groupSize = 0;\n    var groupBase = 1;\n    while (groupBase < (1 << BN.wordSize) / base) {\n      groupBase *= base;\n      groupSize += 1;\n    }\n    groupSizes[base] = groupSize;\n    groupBases[base] = groupBase;\n  }\n\n  */\n\n  var zeros = [\n    '',\n    '0',\n    '00',\n    '000',\n    '0000',\n    '00000',\n    '000000',\n    '0000000',\n    '00000000',\n    '000000000',\n    '0000000000',\n    '00000000000',\n    '000000000000',\n    '0000000000000',\n    '00000000000000',\n    '000000000000000',\n    '0000000000000000',\n    '00000000000000000',\n    '000000000000000000',\n    '0000000000000000000',\n    '00000000000000000000',\n    '000000000000000000000',\n    '0000000000000000000000',\n    '00000000000000000000000',\n    '000000000000000000000000',\n    '0000000000000000000000000'\n  ];\n\n  var groupSizes = [\n    0, 0,\n    25, 16, 12, 11, 10, 9, 8,\n    8, 7, 7, 7, 7, 6, 6,\n    6, 6, 6, 6, 6, 5, 5,\n    5, 5, 5, 5, 5, 5, 5,\n    5, 5, 5, 5, 5, 5, 5\n  ];\n\n  var groupBases = [\n    0, 0,\n    33554432, 43046721, 16777216, 48828125, 60466176, 40353607, 16777216,\n    43046721, 10000000, 19487171, 35831808, 62748517, 7529536, 11390625,\n    16777216, 24137569, 34012224, 47045881, 64000000, 4084101, 5153632,\n    6436343, 7962624, 9765625, 11881376, 14348907, 17210368, 20511149,\n    24300000, 28629151, 33554432, 39135393, 45435424, 52521875, 60466176\n  ];\n\n  BN.prototype.toString = function toString (base, padding) {\n    base = base || 10;\n    padding = padding | 0 || 1;\n\n    var out;\n    if (base === 16 || base === 'hex') {\n      out = '';\n      var off = 0;\n      var carry = 0;\n      for (var i = 0; i < this.length; i++) {\n        var w = this.words[i];\n        var word = (((w << off) | carry) & 0xffffff).toString(16);\n        carry = (w >>> (24 - off)) & 0xffffff;\n        if (carry !== 0 || i !== this.length - 1) {\n          out = zeros[6 - word.length] + word + out;\n        } else {\n          out = word + out;\n        }\n        off += 2;\n        if (off >= 26) {\n          off -= 26;\n          i--;\n        }\n      }\n      if (carry !== 0) {\n        out = carry.toString(16) + out;\n      }\n      while (out.length % padding !== 0) {\n        out = '0' + out;\n      }\n      if (this.negative !== 0) {\n        out = '-' + out;\n      }\n      return out;\n    }\n\n    if (base === (base | 0) && base >= 2 && base <= 36) {\n      // var groupSize = Math.floor(BN.wordSize * Math.LN2 / Math.log(base));\n      var groupSize = groupSizes[base];\n      // var groupBase = Math.pow(base, groupSize);\n      var groupBase = groupBases[base];\n      out = '';\n      var c = this.clone();\n      c.negative = 0;\n      while (!c.isZero()) {\n        var r = c.modn(groupBase).toString(base);\n        c = c.idivn(groupBase);\n\n        if (!c.isZero()) {\n          out = zeros[groupSize - r.length] + r + out;\n        } else {\n          out = r + out;\n        }\n      }\n      if (this.isZero()) {\n        out = '0' + out;\n      }\n      while (out.length % padding !== 0) {\n        out = '0' + out;\n      }\n      if (this.negative !== 0) {\n        out = '-' + out;\n      }\n      return out;\n    }\n\n    assert(false, 'Base should be between 2 and 36');\n  };\n\n  BN.prototype.toNumber = function toNumber () {\n    var ret = this.words[0];\n    if (this.length === 2) {\n      ret += this.words[1] * 0x4000000;\n    } else if (this.length === 3 && this.words[2] === 0x01) {\n      // NOTE: at this stage it is known that the top bit is set\n      ret += 0x10000000000000 + (this.words[1] * 0x4000000);\n    } else if (this.length > 2) {\n      assert(false, 'Number can only safely store up to 53 bits');\n    }\n    return (this.negative !== 0) ? -ret : ret;\n  };\n\n  BN.prototype.toJSON = function toJSON () {\n    return this.toString(16);\n  };\n\n  BN.prototype.toBuffer = function toBuffer (endian, length) {\n    assert(typeof Buffer !== 'undefined');\n    return this.toArrayLike(Buffer, endian, length);\n  };\n\n  BN.prototype.toArray = function toArray (endian, length) {\n    return this.toArrayLike(Array, endian, length);\n  };\n\n  BN.prototype.toArrayLike = function toArrayLike (ArrayType, endian, length) {\n    var byteLength = this.byteLength();\n    var reqLength = length || Math.max(1, byteLength);\n    assert(byteLength <= reqLength, 'byte array longer than desired length');\n    assert(reqLength > 0, 'Requested array length <= 0');\n\n    this.strip();\n    var littleEndian = endian === 'le';\n    var res = new ArrayType(reqLength);\n\n    var b, i;\n    var q = this.clone();\n    if (!littleEndian) {\n      // Assume big-endian\n      for (i = 0; i < reqLength - byteLength; i++) {\n        res[i] = 0;\n      }\n\n      for (i = 0; !q.isZero(); i++) {\n        b = q.andln(0xff);\n        q.iushrn(8);\n\n        res[reqLength - i - 1] = b;\n      }\n    } else {\n      for (i = 0; !q.isZero(); i++) {\n        b = q.andln(0xff);\n        q.iushrn(8);\n\n        res[i] = b;\n      }\n\n      for (; i < reqLength; i++) {\n        res[i] = 0;\n      }\n    }\n\n    return res;\n  };\n\n  if (Math.clz32) {\n    BN.prototype._countBits = function _countBits (w) {\n      return 32 - Math.clz32(w);\n    };\n  } else {\n    BN.prototype._countBits = function _countBits (w) {\n      var t = w;\n      var r = 0;\n      if (t >= 0x1000) {\n        r += 13;\n        t >>>= 13;\n      }\n      if (t >= 0x40) {\n        r += 7;\n        t >>>= 7;\n      }\n      if (t >= 0x8) {\n        r += 4;\n        t >>>= 4;\n      }\n      if (t >= 0x02) {\n        r += 2;\n        t >>>= 2;\n      }\n      return r + t;\n    };\n  }\n\n  BN.prototype._zeroBits = function _zeroBits (w) {\n    // Short-cut\n    if (w === 0) return 26;\n\n    var t = w;\n    var r = 0;\n    if ((t & 0x1fff) === 0) {\n      r += 13;\n      t >>>= 13;\n    }\n    if ((t & 0x7f) === 0) {\n      r += 7;\n      t >>>= 7;\n    }\n    if ((t & 0xf) === 0) {\n      r += 4;\n      t >>>= 4;\n    }\n    if ((t & 0x3) === 0) {\n      r += 2;\n      t >>>= 2;\n    }\n    if ((t & 0x1) === 0) {\n      r++;\n    }\n    return r;\n  };\n\n  // Return number of used bits in a BN\n  BN.prototype.bitLength = function bitLength () {\n    var w = this.words[this.length - 1];\n    var hi = this._countBits(w);\n    return (this.length - 1) * 26 + hi;\n  };\n\n  function toBitArray (num) {\n    var w = new Array(num.bitLength());\n\n    for (var bit = 0; bit < w.length; bit++) {\n      var off = (bit / 26) | 0;\n      var wbit = bit % 26;\n\n      w[bit] = (num.words[off] & (1 << wbit)) >>> wbit;\n    }\n\n    return w;\n  }\n\n  // Number of trailing zero bits\n  BN.prototype.zeroBits = function zeroBits () {\n    if (this.isZero()) return 0;\n\n    var r = 0;\n    for (var i = 0; i < this.length; i++) {\n      var b = this._zeroBits(this.words[i]);\n      r += b;\n      if (b !== 26) break;\n    }\n    return r;\n  };\n\n  BN.prototype.byteLength = function byteLength () {\n    return Math.ceil(this.bitLength() / 8);\n  };\n\n  BN.prototype.toTwos = function toTwos (width) {\n    if (this.negative !== 0) {\n      return this.abs().inotn(width).iaddn(1);\n    }\n    return this.clone();\n  };\n\n  BN.prototype.fromTwos = function fromTwos (width) {\n    if (this.testn(width - 1)) {\n      return this.notn(width).iaddn(1).ineg();\n    }\n    return this.clone();\n  };\n\n  BN.prototype.isNeg = function isNeg () {\n    return this.negative !== 0;\n  };\n\n  // Return negative clone of `this`\n  BN.prototype.neg = function neg () {\n    return this.clone().ineg();\n  };\n\n  BN.prototype.ineg = function ineg () {\n    if (!this.isZero()) {\n      this.negative ^= 1;\n    }\n\n    return this;\n  };\n\n  // Or `num` with `this` in-place\n  BN.prototype.iuor = function iuor (num) {\n    while (this.length < num.length) {\n      this.words[this.length++] = 0;\n    }\n\n    for (var i = 0; i < num.length; i++) {\n      this.words[i] = this.words[i] | num.words[i];\n    }\n\n    return this.strip();\n  };\n\n  BN.prototype.ior = function ior (num) {\n    assert((this.negative | num.negative) === 0);\n    return this.iuor(num);\n  };\n\n  // Or `num` with `this`\n  BN.prototype.or = function or (num) {\n    if (this.length > num.length) return this.clone().ior(num);\n    return num.clone().ior(this);\n  };\n\n  BN.prototype.uor = function uor (num) {\n    if (this.length > num.length) return this.clone().iuor(num);\n    return num.clone().iuor(this);\n  };\n\n  // And `num` with `this` in-place\n  BN.prototype.iuand = function iuand (num) {\n    // b = min-length(num, this)\n    var b;\n    if (this.length > num.length) {\n      b = num;\n    } else {\n      b = this;\n    }\n\n    for (var i = 0; i < b.length; i++) {\n      this.words[i] = this.words[i] & num.words[i];\n    }\n\n    this.length = b.length;\n\n    return this.strip();\n  };\n\n  BN.prototype.iand = function iand (num) {\n    assert((this.negative | num.negative) === 0);\n    return this.iuand(num);\n  };\n\n  // And `num` with `this`\n  BN.prototype.and = function and (num) {\n    if (this.length > num.length) return this.clone().iand(num);\n    return num.clone().iand(this);\n  };\n\n  BN.prototype.uand = function uand (num) {\n    if (this.length > num.length) return this.clone().iuand(num);\n    return num.clone().iuand(this);\n  };\n\n  // Xor `num` with `this` in-place\n  BN.prototype.iuxor = function iuxor (num) {\n    // a.length > b.length\n    var a;\n    var b;\n    if (this.length > num.length) {\n      a = this;\n      b = num;\n    } else {\n      a = num;\n      b = this;\n    }\n\n    for (var i = 0; i < b.length; i++) {\n      this.words[i] = a.words[i] ^ b.words[i];\n    }\n\n    if (this !== a) {\n      for (; i < a.length; i++) {\n        this.words[i] = a.words[i];\n      }\n    }\n\n    this.length = a.length;\n\n    return this.strip();\n  };\n\n  BN.prototype.ixor = function ixor (num) {\n    assert((this.negative | num.negative) === 0);\n    return this.iuxor(num);\n  };\n\n  // Xor `num` with `this`\n  BN.prototype.xor = function xor (num) {\n    if (this.length > num.length) return this.clone().ixor(num);\n    return num.clone().ixor(this);\n  };\n\n  BN.prototype.uxor = function uxor (num) {\n    if (this.length > num.length) return this.clone().iuxor(num);\n    return num.clone().iuxor(this);\n  };\n\n  // Not ``this`` with ``width`` bitwidth\n  BN.prototype.inotn = function inotn (width) {\n    assert(typeof width === 'number' && width >= 0);\n\n    var bytesNeeded = Math.ceil(width / 26) | 0;\n    var bitsLeft = width % 26;\n\n    // Extend the buffer with leading zeroes\n    this._expand(bytesNeeded);\n\n    if (bitsLeft > 0) {\n      bytesNeeded--;\n    }\n\n    // Handle complete words\n    for (var i = 0; i < bytesNeeded; i++) {\n      this.words[i] = ~this.words[i] & 0x3ffffff;\n    }\n\n    // Handle the residue\n    if (bitsLeft > 0) {\n      this.words[i] = ~this.words[i] & (0x3ffffff >> (26 - bitsLeft));\n    }\n\n    // And remove leading zeroes\n    return this.strip();\n  };\n\n  BN.prototype.notn = function notn (width) {\n    return this.clone().inotn(width);\n  };\n\n  // Set `bit` of `this`\n  BN.prototype.setn = function setn (bit, val) {\n    assert(typeof bit === 'number' && bit >= 0);\n\n    var off = (bit / 26) | 0;\n    var wbit = bit % 26;\n\n    this._expand(off + 1);\n\n    if (val) {\n      this.words[off] = this.words[off] | (1 << wbit);\n    } else {\n      this.words[off] = this.words[off] & ~(1 << wbit);\n    }\n\n    return this.strip();\n  };\n\n  // Add `num` to `this` in-place\n  BN.prototype.iadd = function iadd (num) {\n    var r;\n\n    // negative + positive\n    if (this.negative !== 0 && num.negative === 0) {\n      this.negative = 0;\n      r = this.isub(num);\n      this.negative ^= 1;\n      return this._normSign();\n\n    // positive + negative\n    } else if (this.negative === 0 && num.negative !== 0) {\n      num.negative = 0;\n      r = this.isub(num);\n      num.negative = 1;\n      return r._normSign();\n    }\n\n    // a.length > b.length\n    var a, b;\n    if (this.length > num.length) {\n      a = this;\n      b = num;\n    } else {\n      a = num;\n      b = this;\n    }\n\n    var carry = 0;\n    for (var i = 0; i < b.length; i++) {\n      r = (a.words[i] | 0) + (b.words[i] | 0) + carry;\n      this.words[i] = r & 0x3ffffff;\n      carry = r >>> 26;\n    }\n    for (; carry !== 0 && i < a.length; i++) {\n      r = (a.words[i] | 0) + carry;\n      this.words[i] = r & 0x3ffffff;\n      carry = r >>> 26;\n    }\n\n    this.length = a.length;\n    if (carry !== 0) {\n      this.words[this.length] = carry;\n      this.length++;\n    // Copy the rest of the words\n    } else if (a !== this) {\n      for (; i < a.length; i++) {\n        this.words[i] = a.words[i];\n      }\n    }\n\n    return this;\n  };\n\n  // Add `num` to `this`\n  BN.prototype.add = function add (num) {\n    var res;\n    if (num.negative !== 0 && this.negative === 0) {\n      num.negative = 0;\n      res = this.sub(num);\n      num.negative ^= 1;\n      return res;\n    } else if (num.negative === 0 && this.negative !== 0) {\n      this.negative = 0;\n      res = num.sub(this);\n      this.negative = 1;\n      return res;\n    }\n\n    if (this.length > num.length) return this.clone().iadd(num);\n\n    return num.clone().iadd(this);\n  };\n\n  // Subtract `num` from `this` in-place\n  BN.prototype.isub = function isub (num) {\n    // this - (-num) = this + num\n    if (num.negative !== 0) {\n      num.negative = 0;\n      var r = this.iadd(num);\n      num.negative = 1;\n      return r._normSign();\n\n    // -this - num = -(this + num)\n    } else if (this.negative !== 0) {\n      this.negative = 0;\n      this.iadd(num);\n      this.negative = 1;\n      return this._normSign();\n    }\n\n    // At this point both numbers are positive\n    var cmp = this.cmp(num);\n\n    // Optimization - zeroify\n    if (cmp === 0) {\n      this.negative = 0;\n      this.length = 1;\n      this.words[0] = 0;\n      return this;\n    }\n\n    // a > b\n    var a, b;\n    if (cmp > 0) {\n      a = this;\n      b = num;\n    } else {\n      a = num;\n      b = this;\n    }\n\n    var carry = 0;\n    for (var i = 0; i < b.length; i++) {\n      r = (a.words[i] | 0) - (b.words[i] | 0) + carry;\n      carry = r >> 26;\n      this.words[i] = r & 0x3ffffff;\n    }\n    for (; carry !== 0 && i < a.length; i++) {\n      r = (a.words[i] | 0) + carry;\n      carry = r >> 26;\n      this.words[i] = r & 0x3ffffff;\n    }\n\n    // Copy rest of the words\n    if (carry === 0 && i < a.length && a !== this) {\n      for (; i < a.length; i++) {\n        this.words[i] = a.words[i];\n      }\n    }\n\n    this.length = Math.max(this.length, i);\n\n    if (a !== this) {\n      this.negative = 1;\n    }\n\n    return this.strip();\n  };\n\n  // Subtract `num` from `this`\n  BN.prototype.sub = function sub (num) {\n    return this.clone().isub(num);\n  };\n\n  function smallMulTo (self, num, out) {\n    out.negative = num.negative ^ self.negative;\n    var len = (self.length + num.length) | 0;\n    out.length = len;\n    len = (len - 1) | 0;\n\n    // Peel one iteration (compiler can't do it, because of code complexity)\n    var a = self.words[0] | 0;\n    var b = num.words[0] | 0;\n    var r = a * b;\n\n    var lo = r & 0x3ffffff;\n    var carry = (r / 0x4000000) | 0;\n    out.words[0] = lo;\n\n    for (var k = 1; k < len; k++) {\n      // Sum all words with the same `i + j = k` and accumulate `ncarry`,\n      // note that ncarry could be >= 0x3ffffff\n      var ncarry = carry >>> 26;\n      var rword = carry & 0x3ffffff;\n      var maxJ = Math.min(k, num.length - 1);\n      for (var j = Math.max(0, k - self.length + 1); j <= maxJ; j++) {\n        var i = (k - j) | 0;\n        a = self.words[i] | 0;\n        b = num.words[j] | 0;\n        r = a * b + rword;\n        ncarry += (r / 0x4000000) | 0;\n        rword = r & 0x3ffffff;\n      }\n      out.words[k] = rword | 0;\n      carry = ncarry | 0;\n    }\n    if (carry !== 0) {\n      out.words[k] = carry | 0;\n    } else {\n      out.length--;\n    }\n\n    return out.strip();\n  }\n\n  // TODO(indutny): it may be reasonable to omit it for users who don't need\n  // to work with 256-bit numbers, otherwise it gives 20% improvement for 256-bit\n  // multiplication (like elliptic secp256k1).\n  var comb10MulTo = function comb10MulTo (self, num, out) {\n    var a = self.words;\n    var b = num.words;\n    var o = out.words;\n    var c = 0;\n    var lo;\n    var mid;\n    var hi;\n    var a0 = a[0] | 0;\n    var al0 = a0 & 0x1fff;\n    var ah0 = a0 >>> 13;\n    var a1 = a[1] | 0;\n    var al1 = a1 & 0x1fff;\n    var ah1 = a1 >>> 13;\n    var a2 = a[2] | 0;\n    var al2 = a2 & 0x1fff;\n    var ah2 = a2 >>> 13;\n    var a3 = a[3] | 0;\n    var al3 = a3 & 0x1fff;\n    var ah3 = a3 >>> 13;\n    var a4 = a[4] | 0;\n    var al4 = a4 & 0x1fff;\n    var ah4 = a4 >>> 13;\n    var a5 = a[5] | 0;\n    var al5 = a5 & 0x1fff;\n    var ah5 = a5 >>> 13;\n    var a6 = a[6] | 0;\n    var al6 = a6 & 0x1fff;\n    var ah6 = a6 >>> 13;\n    var a7 = a[7] | 0;\n    var al7 = a7 & 0x1fff;\n    var ah7 = a7 >>> 13;\n    var a8 = a[8] | 0;\n    var al8 = a8 & 0x1fff;\n    var ah8 = a8 >>> 13;\n    var a9 = a[9] | 0;\n    var al9 = a9 & 0x1fff;\n    var ah9 = a9 >>> 13;\n    var b0 = b[0] | 0;\n    var bl0 = b0 & 0x1fff;\n    var bh0 = b0 >>> 13;\n    var b1 = b[1] | 0;\n    var bl1 = b1 & 0x1fff;\n    var bh1 = b1 >>> 13;\n    var b2 = b[2] | 0;\n    var bl2 = b2 & 0x1fff;\n    var bh2 = b2 >>> 13;\n    var b3 = b[3] | 0;\n    var bl3 = b3 & 0x1fff;\n    var bh3 = b3 >>> 13;\n    var b4 = b[4] | 0;\n    var bl4 = b4 & 0x1fff;\n    var bh4 = b4 >>> 13;\n    var b5 = b[5] | 0;\n    var bl5 = b5 & 0x1fff;\n    var bh5 = b5 >>> 13;\n    var b6 = b[6] | 0;\n    var bl6 = b6 & 0x1fff;\n    var bh6 = b6 >>> 13;\n    var b7 = b[7] | 0;\n    var bl7 = b7 & 0x1fff;\n    var bh7 = b7 >>> 13;\n    var b8 = b[8] | 0;\n    var bl8 = b8 & 0x1fff;\n    var bh8 = b8 >>> 13;\n    var b9 = b[9] | 0;\n    var bl9 = b9 & 0x1fff;\n    var bh9 = b9 >>> 13;\n\n    out.negative = self.negative ^ num.negative;\n    out.length = 19;\n    /* k = 0 */\n    lo = Math.imul(al0, bl0);\n    mid = Math.imul(al0, bh0);\n    mid = (mid + Math.imul(ah0, bl0)) | 0;\n    hi = Math.imul(ah0, bh0);\n    var w0 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w0 >>> 26)) | 0;\n    w0 &= 0x3ffffff;\n    /* k = 1 */\n    lo = Math.imul(al1, bl0);\n    mid = Math.imul(al1, bh0);\n    mid = (mid + Math.imul(ah1, bl0)) | 0;\n    hi = Math.imul(ah1, bh0);\n    lo = (lo + Math.imul(al0, bl1)) | 0;\n    mid = (mid + Math.imul(al0, bh1)) | 0;\n    mid = (mid + Math.imul(ah0, bl1)) | 0;\n    hi = (hi + Math.imul(ah0, bh1)) | 0;\n    var w1 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w1 >>> 26)) | 0;\n    w1 &= 0x3ffffff;\n    /* k = 2 */\n    lo = Math.imul(al2, bl0);\n    mid = Math.imul(al2, bh0);\n    mid = (mid + Math.imul(ah2, bl0)) | 0;\n    hi = Math.imul(ah2, bh0);\n    lo = (lo + Math.imul(al1, bl1)) | 0;\n    mid = (mid + Math.imul(al1, bh1)) | 0;\n    mid = (mid + Math.imul(ah1, bl1)) | 0;\n    hi = (hi + Math.imul(ah1, bh1)) | 0;\n    lo = (lo + Math.imul(al0, bl2)) | 0;\n    mid = (mid + Math.imul(al0, bh2)) | 0;\n    mid = (mid + Math.imul(ah0, bl2)) | 0;\n    hi = (hi + Math.imul(ah0, bh2)) | 0;\n    var w2 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w2 >>> 26)) | 0;\n    w2 &= 0x3ffffff;\n    /* k = 3 */\n    lo = Math.imul(al3, bl0);\n    mid = Math.imul(al3, bh0);\n    mid = (mid + Math.imul(ah3, bl0)) | 0;\n    hi = Math.imul(ah3, bh0);\n    lo = (lo + Math.imul(al2, bl1)) | 0;\n    mid = (mid + Math.imul(al2, bh1)) | 0;\n    mid = (mid + Math.imul(ah2, bl1)) | 0;\n    hi = (hi + Math.imul(ah2, bh1)) | 0;\n    lo = (lo + Math.imul(al1, bl2)) | 0;\n    mid = (mid + Math.imul(al1, bh2)) | 0;\n    mid = (mid + Math.imul(ah1, bl2)) | 0;\n    hi = (hi + Math.imul(ah1, bh2)) | 0;\n    lo = (lo + Math.imul(al0, bl3)) | 0;\n    mid = (mid + Math.imul(al0, bh3)) | 0;\n    mid = (mid + Math.imul(ah0, bl3)) | 0;\n    hi = (hi + Math.imul(ah0, bh3)) | 0;\n    var w3 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w3 >>> 26)) | 0;\n    w3 &= 0x3ffffff;\n    /* k = 4 */\n    lo = Math.imul(al4, bl0);\n    mid = Math.imul(al4, bh0);\n    mid = (mid + Math.imul(ah4, bl0)) | 0;\n    hi = Math.imul(ah4, bh0);\n    lo = (lo + Math.imul(al3, bl1)) | 0;\n    mid = (mid + Math.imul(al3, bh1)) | 0;\n    mid = (mid + Math.imul(ah3, bl1)) | 0;\n    hi = (hi + Math.imul(ah3, bh1)) | 0;\n    lo = (lo + Math.imul(al2, bl2)) | 0;\n    mid = (mid + Math.imul(al2, bh2)) | 0;\n    mid = (mid + Math.imul(ah2, bl2)) | 0;\n    hi = (hi + Math.imul(ah2, bh2)) | 0;\n    lo = (lo + Math.imul(al1, bl3)) | 0;\n    mid = (mid + Math.imul(al1, bh3)) | 0;\n    mid = (mid + Math.imul(ah1, bl3)) | 0;\n    hi = (hi + Math.imul(ah1, bh3)) | 0;\n    lo = (lo + Math.imul(al0, bl4)) | 0;\n    mid = (mid + Math.imul(al0, bh4)) | 0;\n    mid = (mid + Math.imul(ah0, bl4)) | 0;\n    hi = (hi + Math.imul(ah0, bh4)) | 0;\n    var w4 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w4 >>> 26)) | 0;\n    w4 &= 0x3ffffff;\n    /* k = 5 */\n    lo = Math.imul(al5, bl0);\n    mid = Math.imul(al5, bh0);\n    mid = (mid + Math.imul(ah5, bl0)) | 0;\n    hi = Math.imul(ah5, bh0);\n    lo = (lo + Math.imul(al4, bl1)) | 0;\n    mid = (mid + Math.imul(al4, bh1)) | 0;\n    mid = (mid + Math.imul(ah4, bl1)) | 0;\n    hi = (hi + Math.imul(ah4, bh1)) | 0;\n    lo = (lo + Math.imul(al3, bl2)) | 0;\n    mid = (mid + Math.imul(al3, bh2)) | 0;\n    mid = (mid + Math.imul(ah3, bl2)) | 0;\n    hi = (hi + Math.imul(ah3, bh2)) | 0;\n    lo = (lo + Math.imul(al2, bl3)) | 0;\n    mid = (mid + Math.imul(al2, bh3)) | 0;\n    mid = (mid + Math.imul(ah2, bl3)) | 0;\n    hi = (hi + Math.imul(ah2, bh3)) | 0;\n    lo = (lo + Math.imul(al1, bl4)) | 0;\n    mid = (mid + Math.imul(al1, bh4)) | 0;\n    mid = (mid + Math.imul(ah1, bl4)) | 0;\n    hi = (hi + Math.imul(ah1, bh4)) | 0;\n    lo = (lo + Math.imul(al0, bl5)) | 0;\n    mid = (mid + Math.imul(al0, bh5)) | 0;\n    mid = (mid + Math.imul(ah0, bl5)) | 0;\n    hi = (hi + Math.imul(ah0, bh5)) | 0;\n    var w5 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w5 >>> 26)) | 0;\n    w5 &= 0x3ffffff;\n    /* k = 6 */\n    lo = Math.imul(al6, bl0);\n    mid = Math.imul(al6, bh0);\n    mid = (mid + Math.imul(ah6, bl0)) | 0;\n    hi = Math.imul(ah6, bh0);\n    lo = (lo + Math.imul(al5, bl1)) | 0;\n    mid = (mid + Math.imul(al5, bh1)) | 0;\n    mid = (mid + Math.imul(ah5, bl1)) | 0;\n    hi = (hi + Math.imul(ah5, bh1)) | 0;\n    lo = (lo + Math.imul(al4, bl2)) | 0;\n    mid = (mid + Math.imul(al4, bh2)) | 0;\n    mid = (mid + Math.imul(ah4, bl2)) | 0;\n    hi = (hi + Math.imul(ah4, bh2)) | 0;\n    lo = (lo + Math.imul(al3, bl3)) | 0;\n    mid = (mid + Math.imul(al3, bh3)) | 0;\n    mid = (mid + Math.imul(ah3, bl3)) | 0;\n    hi = (hi + Math.imul(ah3, bh3)) | 0;\n    lo = (lo + Math.imul(al2, bl4)) | 0;\n    mid = (mid + Math.imul(al2, bh4)) | 0;\n    mid = (mid + Math.imul(ah2, bl4)) | 0;\n    hi = (hi + Math.imul(ah2, bh4)) | 0;\n    lo = (lo + Math.imul(al1, bl5)) | 0;\n    mid = (mid + Math.imul(al1, bh5)) | 0;\n    mid = (mid + Math.imul(ah1, bl5)) | 0;\n    hi = (hi + Math.imul(ah1, bh5)) | 0;\n    lo = (lo + Math.imul(al0, bl6)) | 0;\n    mid = (mid + Math.imul(al0, bh6)) | 0;\n    mid = (mid + Math.imul(ah0, bl6)) | 0;\n    hi = (hi + Math.imul(ah0, bh6)) | 0;\n    var w6 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w6 >>> 26)) | 0;\n    w6 &= 0x3ffffff;\n    /* k = 7 */\n    lo = Math.imul(al7, bl0);\n    mid = Math.imul(al7, bh0);\n    mid = (mid + Math.imul(ah7, bl0)) | 0;\n    hi = Math.imul(ah7, bh0);\n    lo = (lo + Math.imul(al6, bl1)) | 0;\n    mid = (mid + Math.imul(al6, bh1)) | 0;\n    mid = (mid + Math.imul(ah6, bl1)) | 0;\n    hi = (hi + Math.imul(ah6, bh1)) | 0;\n    lo = (lo + Math.imul(al5, bl2)) | 0;\n    mid = (mid + Math.imul(al5, bh2)) | 0;\n    mid = (mid + Math.imul(ah5, bl2)) | 0;\n    hi = (hi + Math.imul(ah5, bh2)) | 0;\n    lo = (lo + Math.imul(al4, bl3)) | 0;\n    mid = (mid + Math.imul(al4, bh3)) | 0;\n    mid = (mid + Math.imul(ah4, bl3)) | 0;\n    hi = (hi + Math.imul(ah4, bh3)) | 0;\n    lo = (lo + Math.imul(al3, bl4)) | 0;\n    mid = (mid + Math.imul(al3, bh4)) | 0;\n    mid = (mid + Math.imul(ah3, bl4)) | 0;\n    hi = (hi + Math.imul(ah3, bh4)) | 0;\n    lo = (lo + Math.imul(al2, bl5)) | 0;\n    mid = (mid + Math.imul(al2, bh5)) | 0;\n    mid = (mid + Math.imul(ah2, bl5)) | 0;\n    hi = (hi + Math.imul(ah2, bh5)) | 0;\n    lo = (lo + Math.imul(al1, bl6)) | 0;\n    mid = (mid + Math.imul(al1, bh6)) | 0;\n    mid = (mid + Math.imul(ah1, bl6)) | 0;\n    hi = (hi + Math.imul(ah1, bh6)) | 0;\n    lo = (lo + Math.imul(al0, bl7)) | 0;\n    mid = (mid + Math.imul(al0, bh7)) | 0;\n    mid = (mid + Math.imul(ah0, bl7)) | 0;\n    hi = (hi + Math.imul(ah0, bh7)) | 0;\n    var w7 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w7 >>> 26)) | 0;\n    w7 &= 0x3ffffff;\n    /* k = 8 */\n    lo = Math.imul(al8, bl0);\n    mid = Math.imul(al8, bh0);\n    mid = (mid + Math.imul(ah8, bl0)) | 0;\n    hi = Math.imul(ah8, bh0);\n    lo = (lo + Math.imul(al7, bl1)) | 0;\n    mid = (mid + Math.imul(al7, bh1)) | 0;\n    mid = (mid + Math.imul(ah7, bl1)) | 0;\n    hi = (hi + Math.imul(ah7, bh1)) | 0;\n    lo = (lo + Math.imul(al6, bl2)) | 0;\n    mid = (mid + Math.imul(al6, bh2)) | 0;\n    mid = (mid + Math.imul(ah6, bl2)) | 0;\n    hi = (hi + Math.imul(ah6, bh2)) | 0;\n    lo = (lo + Math.imul(al5, bl3)) | 0;\n    mid = (mid + Math.imul(al5, bh3)) | 0;\n    mid = (mid + Math.imul(ah5, bl3)) | 0;\n    hi = (hi + Math.imul(ah5, bh3)) | 0;\n    lo = (lo + Math.imul(al4, bl4)) | 0;\n    mid = (mid + Math.imul(al4, bh4)) | 0;\n    mid = (mid + Math.imul(ah4, bl4)) | 0;\n    hi = (hi + Math.imul(ah4, bh4)) | 0;\n    lo = (lo + Math.imul(al3, bl5)) | 0;\n    mid = (mid + Math.imul(al3, bh5)) | 0;\n    mid = (mid + Math.imul(ah3, bl5)) | 0;\n    hi = (hi + Math.imul(ah3, bh5)) | 0;\n    lo = (lo + Math.imul(al2, bl6)) | 0;\n    mid = (mid + Math.imul(al2, bh6)) | 0;\n    mid = (mid + Math.imul(ah2, bl6)) | 0;\n    hi = (hi + Math.imul(ah2, bh6)) | 0;\n    lo = (lo + Math.imul(al1, bl7)) | 0;\n    mid = (mid + Math.imul(al1, bh7)) | 0;\n    mid = (mid + Math.imul(ah1, bl7)) | 0;\n    hi = (hi + Math.imul(ah1, bh7)) | 0;\n    lo = (lo + Math.imul(al0, bl8)) | 0;\n    mid = (mid + Math.imul(al0, bh8)) | 0;\n    mid = (mid + Math.imul(ah0, bl8)) | 0;\n    hi = (hi + Math.imul(ah0, bh8)) | 0;\n    var w8 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w8 >>> 26)) | 0;\n    w8 &= 0x3ffffff;\n    /* k = 9 */\n    lo = Math.imul(al9, bl0);\n    mid = Math.imul(al9, bh0);\n    mid = (mid + Math.imul(ah9, bl0)) | 0;\n    hi = Math.imul(ah9, bh0);\n    lo = (lo + Math.imul(al8, bl1)) | 0;\n    mid = (mid + Math.imul(al8, bh1)) | 0;\n    mid = (mid + Math.imul(ah8, bl1)) | 0;\n    hi = (hi + Math.imul(ah8, bh1)) | 0;\n    lo = (lo + Math.imul(al7, bl2)) | 0;\n    mid = (mid + Math.imul(al7, bh2)) | 0;\n    mid = (mid + Math.imul(ah7, bl2)) | 0;\n    hi = (hi + Math.imul(ah7, bh2)) | 0;\n    lo = (lo + Math.imul(al6, bl3)) | 0;\n    mid = (mid + Math.imul(al6, bh3)) | 0;\n    mid = (mid + Math.imul(ah6, bl3)) | 0;\n    hi = (hi + Math.imul(ah6, bh3)) | 0;\n    lo = (lo + Math.imul(al5, bl4)) | 0;\n    mid = (mid + Math.imul(al5, bh4)) | 0;\n    mid = (mid + Math.imul(ah5, bl4)) | 0;\n    hi = (hi + Math.imul(ah5, bh4)) | 0;\n    lo = (lo + Math.imul(al4, bl5)) | 0;\n    mid = (mid + Math.imul(al4, bh5)) | 0;\n    mid = (mid + Math.imul(ah4, bl5)) | 0;\n    hi = (hi + Math.imul(ah4, bh5)) | 0;\n    lo = (lo + Math.imul(al3, bl6)) | 0;\n    mid = (mid + Math.imul(al3, bh6)) | 0;\n    mid = (mid + Math.imul(ah3, bl6)) | 0;\n    hi = (hi + Math.imul(ah3, bh6)) | 0;\n    lo = (lo + Math.imul(al2, bl7)) | 0;\n    mid = (mid + Math.imul(al2, bh7)) | 0;\n    mid = (mid + Math.imul(ah2, bl7)) | 0;\n    hi = (hi + Math.imul(ah2, bh7)) | 0;\n    lo = (lo + Math.imul(al1, bl8)) | 0;\n    mid = (mid + Math.imul(al1, bh8)) | 0;\n    mid = (mid + Math.imul(ah1, bl8)) | 0;\n    hi = (hi + Math.imul(ah1, bh8)) | 0;\n    lo = (lo + Math.imul(al0, bl9)) | 0;\n    mid = (mid + Math.imul(al0, bh9)) | 0;\n    mid = (mid + Math.imul(ah0, bl9)) | 0;\n    hi = (hi + Math.imul(ah0, bh9)) | 0;\n    var w9 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w9 >>> 26)) | 0;\n    w9 &= 0x3ffffff;\n    /* k = 10 */\n    lo = Math.imul(al9, bl1);\n    mid = Math.imul(al9, bh1);\n    mid = (mid + Math.imul(ah9, bl1)) | 0;\n    hi = Math.imul(ah9, bh1);\n    lo = (lo + Math.imul(al8, bl2)) | 0;\n    mid = (mid + Math.imul(al8, bh2)) | 0;\n    mid = (mid + Math.imul(ah8, bl2)) | 0;\n    hi = (hi + Math.imul(ah8, bh2)) | 0;\n    lo = (lo + Math.imul(al7, bl3)) | 0;\n    mid = (mid + Math.imul(al7, bh3)) | 0;\n    mid = (mid + Math.imul(ah7, bl3)) | 0;\n    hi = (hi + Math.imul(ah7, bh3)) | 0;\n    lo = (lo + Math.imul(al6, bl4)) | 0;\n    mid = (mid + Math.imul(al6, bh4)) | 0;\n    mid = (mid + Math.imul(ah6, bl4)) | 0;\n    hi = (hi + Math.imul(ah6, bh4)) | 0;\n    lo = (lo + Math.imul(al5, bl5)) | 0;\n    mid = (mid + Math.imul(al5, bh5)) | 0;\n    mid = (mid + Math.imul(ah5, bl5)) | 0;\n    hi = (hi + Math.imul(ah5, bh5)) | 0;\n    lo = (lo + Math.imul(al4, bl6)) | 0;\n    mid = (mid + Math.imul(al4, bh6)) | 0;\n    mid = (mid + Math.imul(ah4, bl6)) | 0;\n    hi = (hi + Math.imul(ah4, bh6)) | 0;\n    lo = (lo + Math.imul(al3, bl7)) | 0;\n    mid = (mid + Math.imul(al3, bh7)) | 0;\n    mid = (mid + Math.imul(ah3, bl7)) | 0;\n    hi = (hi + Math.imul(ah3, bh7)) | 0;\n    lo = (lo + Math.imul(al2, bl8)) | 0;\n    mid = (mid + Math.imul(al2, bh8)) | 0;\n    mid = (mid + Math.imul(ah2, bl8)) | 0;\n    hi = (hi + Math.imul(ah2, bh8)) | 0;\n    lo = (lo + Math.imul(al1, bl9)) | 0;\n    mid = (mid + Math.imul(al1, bh9)) | 0;\n    mid = (mid + Math.imul(ah1, bl9)) | 0;\n    hi = (hi + Math.imul(ah1, bh9)) | 0;\n    var w10 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w10 >>> 26)) | 0;\n    w10 &= 0x3ffffff;\n    /* k = 11 */\n    lo = Math.imul(al9, bl2);\n    mid = Math.imul(al9, bh2);\n    mid = (mid + Math.imul(ah9, bl2)) | 0;\n    hi = Math.imul(ah9, bh2);\n    lo = (lo + Math.imul(al8, bl3)) | 0;\n    mid = (mid + Math.imul(al8, bh3)) | 0;\n    mid = (mid + Math.imul(ah8, bl3)) | 0;\n    hi = (hi + Math.imul(ah8, bh3)) | 0;\n    lo = (lo + Math.imul(al7, bl4)) | 0;\n    mid = (mid + Math.imul(al7, bh4)) | 0;\n    mid = (mid + Math.imul(ah7, bl4)) | 0;\n    hi = (hi + Math.imul(ah7, bh4)) | 0;\n    lo = (lo + Math.imul(al6, bl5)) | 0;\n    mid = (mid + Math.imul(al6, bh5)) | 0;\n    mid = (mid + Math.imul(ah6, bl5)) | 0;\n    hi = (hi + Math.imul(ah6, bh5)) | 0;\n    lo = (lo + Math.imul(al5, bl6)) | 0;\n    mid = (mid + Math.imul(al5, bh6)) | 0;\n    mid = (mid + Math.imul(ah5, bl6)) | 0;\n    hi = (hi + Math.imul(ah5, bh6)) | 0;\n    lo = (lo + Math.imul(al4, bl7)) | 0;\n    mid = (mid + Math.imul(al4, bh7)) | 0;\n    mid = (mid + Math.imul(ah4, bl7)) | 0;\n    hi = (hi + Math.imul(ah4, bh7)) | 0;\n    lo = (lo + Math.imul(al3, bl8)) | 0;\n    mid = (mid + Math.imul(al3, bh8)) | 0;\n    mid = (mid + Math.imul(ah3, bl8)) | 0;\n    hi = (hi + Math.imul(ah3, bh8)) | 0;\n    lo = (lo + Math.imul(al2, bl9)) | 0;\n    mid = (mid + Math.imul(al2, bh9)) | 0;\n    mid = (mid + Math.imul(ah2, bl9)) | 0;\n    hi = (hi + Math.imul(ah2, bh9)) | 0;\n    var w11 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w11 >>> 26)) | 0;\n    w11 &= 0x3ffffff;\n    /* k = 12 */\n    lo = Math.imul(al9, bl3);\n    mid = Math.imul(al9, bh3);\n    mid = (mid + Math.imul(ah9, bl3)) | 0;\n    hi = Math.imul(ah9, bh3);\n    lo = (lo + Math.imul(al8, bl4)) | 0;\n    mid = (mid + Math.imul(al8, bh4)) | 0;\n    mid = (mid + Math.imul(ah8, bl4)) | 0;\n    hi = (hi + Math.imul(ah8, bh4)) | 0;\n    lo = (lo + Math.imul(al7, bl5)) | 0;\n    mid = (mid + Math.imul(al7, bh5)) | 0;\n    mid = (mid + Math.imul(ah7, bl5)) | 0;\n    hi = (hi + Math.imul(ah7, bh5)) | 0;\n    lo = (lo + Math.imul(al6, bl6)) | 0;\n    mid = (mid + Math.imul(al6, bh6)) | 0;\n    mid = (mid + Math.imul(ah6, bl6)) | 0;\n    hi = (hi + Math.imul(ah6, bh6)) | 0;\n    lo = (lo + Math.imul(al5, bl7)) | 0;\n    mid = (mid + Math.imul(al5, bh7)) | 0;\n    mid = (mid + Math.imul(ah5, bl7)) | 0;\n    hi = (hi + Math.imul(ah5, bh7)) | 0;\n    lo = (lo + Math.imul(al4, bl8)) | 0;\n    mid = (mid + Math.imul(al4, bh8)) | 0;\n    mid = (mid + Math.imul(ah4, bl8)) | 0;\n    hi = (hi + Math.imul(ah4, bh8)) | 0;\n    lo = (lo + Math.imul(al3, bl9)) | 0;\n    mid = (mid + Math.imul(al3, bh9)) | 0;\n    mid = (mid + Math.imul(ah3, bl9)) | 0;\n    hi = (hi + Math.imul(ah3, bh9)) | 0;\n    var w12 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w12 >>> 26)) | 0;\n    w12 &= 0x3ffffff;\n    /* k = 13 */\n    lo = Math.imul(al9, bl4);\n    mid = Math.imul(al9, bh4);\n    mid = (mid + Math.imul(ah9, bl4)) | 0;\n    hi = Math.imul(ah9, bh4);\n    lo = (lo + Math.imul(al8, bl5)) | 0;\n    mid = (mid + Math.imul(al8, bh5)) | 0;\n    mid = (mid + Math.imul(ah8, bl5)) | 0;\n    hi = (hi + Math.imul(ah8, bh5)) | 0;\n    lo = (lo + Math.imul(al7, bl6)) | 0;\n    mid = (mid + Math.imul(al7, bh6)) | 0;\n    mid = (mid + Math.imul(ah7, bl6)) | 0;\n    hi = (hi + Math.imul(ah7, bh6)) | 0;\n    lo = (lo + Math.imul(al6, bl7)) | 0;\n    mid = (mid + Math.imul(al6, bh7)) | 0;\n    mid = (mid + Math.imul(ah6, bl7)) | 0;\n    hi = (hi + Math.imul(ah6, bh7)) | 0;\n    lo = (lo + Math.imul(al5, bl8)) | 0;\n    mid = (mid + Math.imul(al5, bh8)) | 0;\n    mid = (mid + Math.imul(ah5, bl8)) | 0;\n    hi = (hi + Math.imul(ah5, bh8)) | 0;\n    lo = (lo + Math.imul(al4, bl9)) | 0;\n    mid = (mid + Math.imul(al4, bh9)) | 0;\n    mid = (mid + Math.imul(ah4, bl9)) | 0;\n    hi = (hi + Math.imul(ah4, bh9)) | 0;\n    var w13 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w13 >>> 26)) | 0;\n    w13 &= 0x3ffffff;\n    /* k = 14 */\n    lo = Math.imul(al9, bl5);\n    mid = Math.imul(al9, bh5);\n    mid = (mid + Math.imul(ah9, bl5)) | 0;\n    hi = Math.imul(ah9, bh5);\n    lo = (lo + Math.imul(al8, bl6)) | 0;\n    mid = (mid + Math.imul(al8, bh6)) | 0;\n    mid = (mid + Math.imul(ah8, bl6)) | 0;\n    hi = (hi + Math.imul(ah8, bh6)) | 0;\n    lo = (lo + Math.imul(al7, bl7)) | 0;\n    mid = (mid + Math.imul(al7, bh7)) | 0;\n    mid = (mid + Math.imul(ah7, bl7)) | 0;\n    hi = (hi + Math.imul(ah7, bh7)) | 0;\n    lo = (lo + Math.imul(al6, bl8)) | 0;\n    mid = (mid + Math.imul(al6, bh8)) | 0;\n    mid = (mid + Math.imul(ah6, bl8)) | 0;\n    hi = (hi + Math.imul(ah6, bh8)) | 0;\n    lo = (lo + Math.imul(al5, bl9)) | 0;\n    mid = (mid + Math.imul(al5, bh9)) | 0;\n    mid = (mid + Math.imul(ah5, bl9)) | 0;\n    hi = (hi + Math.imul(ah5, bh9)) | 0;\n    var w14 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w14 >>> 26)) | 0;\n    w14 &= 0x3ffffff;\n    /* k = 15 */\n    lo = Math.imul(al9, bl6);\n    mid = Math.imul(al9, bh6);\n    mid = (mid + Math.imul(ah9, bl6)) | 0;\n    hi = Math.imul(ah9, bh6);\n    lo = (lo + Math.imul(al8, bl7)) | 0;\n    mid = (mid + Math.imul(al8, bh7)) | 0;\n    mid = (mid + Math.imul(ah8, bl7)) | 0;\n    hi = (hi + Math.imul(ah8, bh7)) | 0;\n    lo = (lo + Math.imul(al7, bl8)) | 0;\n    mid = (mid + Math.imul(al7, bh8)) | 0;\n    mid = (mid + Math.imul(ah7, bl8)) | 0;\n    hi = (hi + Math.imul(ah7, bh8)) | 0;\n    lo = (lo + Math.imul(al6, bl9)) | 0;\n    mid = (mid + Math.imul(al6, bh9)) | 0;\n    mid = (mid + Math.imul(ah6, bl9)) | 0;\n    hi = (hi + Math.imul(ah6, bh9)) | 0;\n    var w15 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w15 >>> 26)) | 0;\n    w15 &= 0x3ffffff;\n    /* k = 16 */\n    lo = Math.imul(al9, bl7);\n    mid = Math.imul(al9, bh7);\n    mid = (mid + Math.imul(ah9, bl7)) | 0;\n    hi = Math.imul(ah9, bh7);\n    lo = (lo + Math.imul(al8, bl8)) | 0;\n    mid = (mid + Math.imul(al8, bh8)) | 0;\n    mid = (mid + Math.imul(ah8, bl8)) | 0;\n    hi = (hi + Math.imul(ah8, bh8)) | 0;\n    lo = (lo + Math.imul(al7, bl9)) | 0;\n    mid = (mid + Math.imul(al7, bh9)) | 0;\n    mid = (mid + Math.imul(ah7, bl9)) | 0;\n    hi = (hi + Math.imul(ah7, bh9)) | 0;\n    var w16 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w16 >>> 26)) | 0;\n    w16 &= 0x3ffffff;\n    /* k = 17 */\n    lo = Math.imul(al9, bl8);\n    mid = Math.imul(al9, bh8);\n    mid = (mid + Math.imul(ah9, bl8)) | 0;\n    hi = Math.imul(ah9, bh8);\n    lo = (lo + Math.imul(al8, bl9)) | 0;\n    mid = (mid + Math.imul(al8, bh9)) | 0;\n    mid = (mid + Math.imul(ah8, bl9)) | 0;\n    hi = (hi + Math.imul(ah8, bh9)) | 0;\n    var w17 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w17 >>> 26)) | 0;\n    w17 &= 0x3ffffff;\n    /* k = 18 */\n    lo = Math.imul(al9, bl9);\n    mid = Math.imul(al9, bh9);\n    mid = (mid + Math.imul(ah9, bl9)) | 0;\n    hi = Math.imul(ah9, bh9);\n    var w18 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w18 >>> 26)) | 0;\n    w18 &= 0x3ffffff;\n    o[0] = w0;\n    o[1] = w1;\n    o[2] = w2;\n    o[3] = w3;\n    o[4] = w4;\n    o[5] = w5;\n    o[6] = w6;\n    o[7] = w7;\n    o[8] = w8;\n    o[9] = w9;\n    o[10] = w10;\n    o[11] = w11;\n    o[12] = w12;\n    o[13] = w13;\n    o[14] = w14;\n    o[15] = w15;\n    o[16] = w16;\n    o[17] = w17;\n    o[18] = w18;\n    if (c !== 0) {\n      o[19] = c;\n      out.length++;\n    }\n    return out;\n  };\n\n  // Polyfill comb\n  if (!Math.imul) {\n    comb10MulTo = smallMulTo;\n  }\n\n  function bigMulTo (self, num, out) {\n    out.negative = num.negative ^ self.negative;\n    out.length = self.length + num.length;\n\n    var carry = 0;\n    var hncarry = 0;\n    for (var k = 0; k < out.length - 1; k++) {\n      // Sum all words with the same `i + j = k` and accumulate `ncarry`,\n      // note that ncarry could be >= 0x3ffffff\n      var ncarry = hncarry;\n      hncarry = 0;\n      var rword = carry & 0x3ffffff;\n      var maxJ = Math.min(k, num.length - 1);\n      for (var j = Math.max(0, k - self.length + 1); j <= maxJ; j++) {\n        var i = k - j;\n        var a = self.words[i] | 0;\n        var b = num.words[j] | 0;\n        var r = a * b;\n\n        var lo = r & 0x3ffffff;\n        ncarry = (ncarry + ((r / 0x4000000) | 0)) | 0;\n        lo = (lo + rword) | 0;\n        rword = lo & 0x3ffffff;\n        ncarry = (ncarry + (lo >>> 26)) | 0;\n\n        hncarry += ncarry >>> 26;\n        ncarry &= 0x3ffffff;\n      }\n      out.words[k] = rword;\n      carry = ncarry;\n      ncarry = hncarry;\n    }\n    if (carry !== 0) {\n      out.words[k] = carry;\n    } else {\n      out.length--;\n    }\n\n    return out.strip();\n  }\n\n  function jumboMulTo (self, num, out) {\n    var fftm = new FFTM();\n    return fftm.mulp(self, num, out);\n  }\n\n  BN.prototype.mulTo = function mulTo (num, out) {\n    var res;\n    var len = this.length + num.length;\n    if (this.length === 10 && num.length === 10) {\n      res = comb10MulTo(this, num, out);\n    } else if (len < 63) {\n      res = smallMulTo(this, num, out);\n    } else if (len < 1024) {\n      res = bigMulTo(this, num, out);\n    } else {\n      res = jumboMulTo(this, num, out);\n    }\n\n    return res;\n  };\n\n  // Cooley-Tukey algorithm for FFT\n  // slightly revisited to rely on looping instead of recursion\n\n  function FFTM (x, y) {\n    this.x = x;\n    this.y = y;\n  }\n\n  FFTM.prototype.makeRBT = function makeRBT (N) {\n    var t = new Array(N);\n    var l = BN.prototype._countBits(N) - 1;\n    for (var i = 0; i < N; i++) {\n      t[i] = this.revBin(i, l, N);\n    }\n\n    return t;\n  };\n\n  // Returns binary-reversed representation of `x`\n  FFTM.prototype.revBin = function revBin (x, l, N) {\n    if (x === 0 || x === N - 1) return x;\n\n    var rb = 0;\n    for (var i = 0; i < l; i++) {\n      rb |= (x & 1) << (l - i - 1);\n      x >>= 1;\n    }\n\n    return rb;\n  };\n\n  // Performs \"tweedling\" phase, therefore 'emulating'\n  // behaviour of the recursive algorithm\n  FFTM.prototype.permute = function permute (rbt, rws, iws, rtws, itws, N) {\n    for (var i = 0; i < N; i++) {\n      rtws[i] = rws[rbt[i]];\n      itws[i] = iws[rbt[i]];\n    }\n  };\n\n  FFTM.prototype.transform = function transform (rws, iws, rtws, itws, N, rbt) {\n    this.permute(rbt, rws, iws, rtws, itws, N);\n\n    for (var s = 1; s < N; s <<= 1) {\n      var l = s << 1;\n\n      var rtwdf = Math.cos(2 * Math.PI / l);\n      var itwdf = Math.sin(2 * Math.PI / l);\n\n      for (var p = 0; p < N; p += l) {\n        var rtwdf_ = rtwdf;\n        var itwdf_ = itwdf;\n\n        for (var j = 0; j < s; j++) {\n          var re = rtws[p + j];\n          var ie = itws[p + j];\n\n          var ro = rtws[p + j + s];\n          var io = itws[p + j + s];\n\n          var rx = rtwdf_ * ro - itwdf_ * io;\n\n          io = rtwdf_ * io + itwdf_ * ro;\n          ro = rx;\n\n          rtws[p + j] = re + ro;\n          itws[p + j] = ie + io;\n\n          rtws[p + j + s] = re - ro;\n          itws[p + j + s] = ie - io;\n\n          /* jshint maxdepth : false */\n          if (j !== l) {\n            rx = rtwdf * rtwdf_ - itwdf * itwdf_;\n\n            itwdf_ = rtwdf * itwdf_ + itwdf * rtwdf_;\n            rtwdf_ = rx;\n          }\n        }\n      }\n    }\n  };\n\n  FFTM.prototype.guessLen13b = function guessLen13b (n, m) {\n    var N = Math.max(m, n) | 1;\n    var odd = N & 1;\n    var i = 0;\n    for (N = N / 2 | 0; N; N = N >>> 1) {\n      i++;\n    }\n\n    return 1 << i + 1 + odd;\n  };\n\n  FFTM.prototype.conjugate = function conjugate (rws, iws, N) {\n    if (N <= 1) return;\n\n    for (var i = 0; i < N / 2; i++) {\n      var t = rws[i];\n\n      rws[i] = rws[N - i - 1];\n      rws[N - i - 1] = t;\n\n      t = iws[i];\n\n      iws[i] = -iws[N - i - 1];\n      iws[N - i - 1] = -t;\n    }\n  };\n\n  FFTM.prototype.normalize13b = function normalize13b (ws, N) {\n    var carry = 0;\n    for (var i = 0; i < N / 2; i++) {\n      var w = Math.round(ws[2 * i + 1] / N) * 0x2000 +\n        Math.round(ws[2 * i] / N) +\n        carry;\n\n      ws[i] = w & 0x3ffffff;\n\n      if (w < 0x4000000) {\n        carry = 0;\n      } else {\n        carry = w / 0x4000000 | 0;\n      }\n    }\n\n    return ws;\n  };\n\n  FFTM.prototype.convert13b = function convert13b (ws, len, rws, N) {\n    var carry = 0;\n    for (var i = 0; i < len; i++) {\n      carry = carry + (ws[i] | 0);\n\n      rws[2 * i] = carry & 0x1fff; carry = carry >>> 13;\n      rws[2 * i + 1] = carry & 0x1fff; carry = carry >>> 13;\n    }\n\n    // Pad with zeroes\n    for (i = 2 * len; i < N; ++i) {\n      rws[i] = 0;\n    }\n\n    assert(carry === 0);\n    assert((carry & ~0x1fff) === 0);\n  };\n\n  FFTM.prototype.stub = function stub (N) {\n    var ph = new Array(N);\n    for (var i = 0; i < N; i++) {\n      ph[i] = 0;\n    }\n\n    return ph;\n  };\n\n  FFTM.prototype.mulp = function mulp (x, y, out) {\n    var N = 2 * this.guessLen13b(x.length, y.length);\n\n    var rbt = this.makeRBT(N);\n\n    var _ = this.stub(N);\n\n    var rws = new Array(N);\n    var rwst = new Array(N);\n    var iwst = new Array(N);\n\n    var nrws = new Array(N);\n    var nrwst = new Array(N);\n    var niwst = new Array(N);\n\n    var rmws = out.words;\n    rmws.length = N;\n\n    this.convert13b(x.words, x.length, rws, N);\n    this.convert13b(y.words, y.length, nrws, N);\n\n    this.transform(rws, _, rwst, iwst, N, rbt);\n    this.transform(nrws, _, nrwst, niwst, N, rbt);\n\n    for (var i = 0; i < N; i++) {\n      var rx = rwst[i] * nrwst[i] - iwst[i] * niwst[i];\n      iwst[i] = rwst[i] * niwst[i] + iwst[i] * nrwst[i];\n      rwst[i] = rx;\n    }\n\n    this.conjugate(rwst, iwst, N);\n    this.transform(rwst, iwst, rmws, _, N, rbt);\n    this.conjugate(rmws, _, N);\n    this.normalize13b(rmws, N);\n\n    out.negative = x.negative ^ y.negative;\n    out.length = x.length + y.length;\n    return out.strip();\n  };\n\n  // Multiply `this` by `num`\n  BN.prototype.mul = function mul (num) {\n    var out = new BN(null);\n    out.words = new Array(this.length + num.length);\n    return this.mulTo(num, out);\n  };\n\n  // Multiply employing FFT\n  BN.prototype.mulf = function mulf (num) {\n    var out = new BN(null);\n    out.words = new Array(this.length + num.length);\n    return jumboMulTo(this, num, out);\n  };\n\n  // In-place Multiplication\n  BN.prototype.imul = function imul (num) {\n    return this.clone().mulTo(num, this);\n  };\n\n  BN.prototype.imuln = function imuln (num) {\n    assert(typeof num === 'number');\n    assert(num < 0x4000000);\n\n    // Carry\n    var carry = 0;\n    for (var i = 0; i < this.length; i++) {\n      var w = (this.words[i] | 0) * num;\n      var lo = (w & 0x3ffffff) + (carry & 0x3ffffff);\n      carry >>= 26;\n      carry += (w / 0x4000000) | 0;\n      // NOTE: lo is 27bit maximum\n      carry += lo >>> 26;\n      this.words[i] = lo & 0x3ffffff;\n    }\n\n    if (carry !== 0) {\n      this.words[i] = carry;\n      this.length++;\n    }\n\n    return this;\n  };\n\n  BN.prototype.muln = function muln (num) {\n    return this.clone().imuln(num);\n  };\n\n  // `this` * `this`\n  BN.prototype.sqr = function sqr () {\n    return this.mul(this);\n  };\n\n  // `this` * `this` in-place\n  BN.prototype.isqr = function isqr () {\n    return this.imul(this.clone());\n  };\n\n  // Math.pow(`this`, `num`)\n  BN.prototype.pow = function pow (num) {\n    var w = toBitArray(num);\n    if (w.length === 0) return new BN(1);\n\n    // Skip leading zeroes\n    var res = this;\n    for (var i = 0; i < w.length; i++, res = res.sqr()) {\n      if (w[i] !== 0) break;\n    }\n\n    if (++i < w.length) {\n      for (var q = res.sqr(); i < w.length; i++, q = q.sqr()) {\n        if (w[i] === 0) continue;\n\n        res = res.mul(q);\n      }\n    }\n\n    return res;\n  };\n\n  // Shift-left in-place\n  BN.prototype.iushln = function iushln (bits) {\n    assert(typeof bits === 'number' && bits >= 0);\n    var r = bits % 26;\n    var s = (bits - r) / 26;\n    var carryMask = (0x3ffffff >>> (26 - r)) << (26 - r);\n    var i;\n\n    if (r !== 0) {\n      var carry = 0;\n\n      for (i = 0; i < this.length; i++) {\n        var newCarry = this.words[i] & carryMask;\n        var c = ((this.words[i] | 0) - newCarry) << r;\n        this.words[i] = c | carry;\n        carry = newCarry >>> (26 - r);\n      }\n\n      if (carry) {\n        this.words[i] = carry;\n        this.length++;\n      }\n    }\n\n    if (s !== 0) {\n      for (i = this.length - 1; i >= 0; i--) {\n        this.words[i + s] = this.words[i];\n      }\n\n      for (i = 0; i < s; i++) {\n        this.words[i] = 0;\n      }\n\n      this.length += s;\n    }\n\n    return this.strip();\n  };\n\n  BN.prototype.ishln = function ishln (bits) {\n    // TODO(indutny): implement me\n    assert(this.negative === 0);\n    return this.iushln(bits);\n  };\n\n  // Shift-right in-place\n  // NOTE: `hint` is a lowest bit before trailing zeroes\n  // NOTE: if `extended` is present - it will be filled with destroyed bits\n  BN.prototype.iushrn = function iushrn (bits, hint, extended) {\n    assert(typeof bits === 'number' && bits >= 0);\n    var h;\n    if (hint) {\n      h = (hint - (hint % 26)) / 26;\n    } else {\n      h = 0;\n    }\n\n    var r = bits % 26;\n    var s = Math.min((bits - r) / 26, this.length);\n    var mask = 0x3ffffff ^ ((0x3ffffff >>> r) << r);\n    var maskedWords = extended;\n\n    h -= s;\n    h = Math.max(0, h);\n\n    // Extended mode, copy masked part\n    if (maskedWords) {\n      for (var i = 0; i < s; i++) {\n        maskedWords.words[i] = this.words[i];\n      }\n      maskedWords.length = s;\n    }\n\n    if (s === 0) {\n      // No-op, we should not move anything at all\n    } else if (this.length > s) {\n      this.length -= s;\n      for (i = 0; i < this.length; i++) {\n        this.words[i] = this.words[i + s];\n      }\n    } else {\n      this.words[0] = 0;\n      this.length = 1;\n    }\n\n    var carry = 0;\n    for (i = this.length - 1; i >= 0 && (carry !== 0 || i >= h); i--) {\n      var word = this.words[i] | 0;\n      this.words[i] = (carry << (26 - r)) | (word >>> r);\n      carry = word & mask;\n    }\n\n    // Push carried bits as a mask\n    if (maskedWords && carry !== 0) {\n      maskedWords.words[maskedWords.length++] = carry;\n    }\n\n    if (this.length === 0) {\n      this.words[0] = 0;\n      this.length = 1;\n    }\n\n    return this.strip();\n  };\n\n  BN.prototype.ishrn = function ishrn (bits, hint, extended) {\n    // TODO(indutny): implement me\n    assert(this.negative === 0);\n    return this.iushrn(bits, hint, extended);\n  };\n\n  // Shift-left\n  BN.prototype.shln = function shln (bits) {\n    return this.clone().ishln(bits);\n  };\n\n  BN.prototype.ushln = function ushln (bits) {\n    return this.clone().iushln(bits);\n  };\n\n  // Shift-right\n  BN.prototype.shrn = function shrn (bits) {\n    return this.clone().ishrn(bits);\n  };\n\n  BN.prototype.ushrn = function ushrn (bits) {\n    return this.clone().iushrn(bits);\n  };\n\n  // Test if n bit is set\n  BN.prototype.testn = function testn (bit) {\n    assert(typeof bit === 'number' && bit >= 0);\n    var r = bit % 26;\n    var s = (bit - r) / 26;\n    var q = 1 << r;\n\n    // Fast case: bit is much higher than all existing words\n    if (this.length <= s) return false;\n\n    // Check bit and return\n    var w = this.words[s];\n\n    return !!(w & q);\n  };\n\n  // Return only lowers bits of number (in-place)\n  BN.prototype.imaskn = function imaskn (bits) {\n    assert(typeof bits === 'number' && bits >= 0);\n    var r = bits % 26;\n    var s = (bits - r) / 26;\n\n    assert(this.negative === 0, 'imaskn works only with positive numbers');\n\n    if (this.length <= s) {\n      return this;\n    }\n\n    if (r !== 0) {\n      s++;\n    }\n    this.length = Math.min(s, this.length);\n\n    if (r !== 0) {\n      var mask = 0x3ffffff ^ ((0x3ffffff >>> r) << r);\n      this.words[this.length - 1] &= mask;\n    }\n\n    return this.strip();\n  };\n\n  // Return only lowers bits of number\n  BN.prototype.maskn = function maskn (bits) {\n    return this.clone().imaskn(bits);\n  };\n\n  // Add plain number `num` to `this`\n  BN.prototype.iaddn = function iaddn (num) {\n    assert(typeof num === 'number');\n    assert(num < 0x4000000);\n    if (num < 0) return this.isubn(-num);\n\n    // Possible sign change\n    if (this.negative !== 0) {\n      if (this.length === 1 && (this.words[0] | 0) < num) {\n        this.words[0] = num - (this.words[0] | 0);\n        this.negative = 0;\n        return this;\n      }\n\n      this.negative = 0;\n      this.isubn(num);\n      this.negative = 1;\n      return this;\n    }\n\n    // Add without checks\n    return this._iaddn(num);\n  };\n\n  BN.prototype._iaddn = function _iaddn (num) {\n    this.words[0] += num;\n\n    // Carry\n    for (var i = 0; i < this.length && this.words[i] >= 0x4000000; i++) {\n      this.words[i] -= 0x4000000;\n      if (i === this.length - 1) {\n        this.words[i + 1] = 1;\n      } else {\n        this.words[i + 1]++;\n      }\n    }\n    this.length = Math.max(this.length, i + 1);\n\n    return this;\n  };\n\n  // Subtract plain number `num` from `this`\n  BN.prototype.isubn = function isubn (num) {\n    assert(typeof num === 'number');\n    assert(num < 0x4000000);\n    if (num < 0) return this.iaddn(-num);\n\n    if (this.negative !== 0) {\n      this.negative = 0;\n      this.iaddn(num);\n      this.negative = 1;\n      return this;\n    }\n\n    this.words[0] -= num;\n\n    if (this.length === 1 && this.words[0] < 0) {\n      this.words[0] = -this.words[0];\n      this.negative = 1;\n    } else {\n      // Carry\n      for (var i = 0; i < this.length && this.words[i] < 0; i++) {\n        this.words[i] += 0x4000000;\n        this.words[i + 1] -= 1;\n      }\n    }\n\n    return this.strip();\n  };\n\n  BN.prototype.addn = function addn (num) {\n    return this.clone().iaddn(num);\n  };\n\n  BN.prototype.subn = function subn (num) {\n    return this.clone().isubn(num);\n  };\n\n  BN.prototype.iabs = function iabs () {\n    this.negative = 0;\n\n    return this;\n  };\n\n  BN.prototype.abs = function abs () {\n    return this.clone().iabs();\n  };\n\n  BN.prototype._ishlnsubmul = function _ishlnsubmul (num, mul, shift) {\n    var len = num.length + shift;\n    var i;\n\n    this._expand(len);\n\n    var w;\n    var carry = 0;\n    for (i = 0; i < num.length; i++) {\n      w = (this.words[i + shift] | 0) + carry;\n      var right = (num.words[i] | 0) * mul;\n      w -= right & 0x3ffffff;\n      carry = (w >> 26) - ((right / 0x4000000) | 0);\n      this.words[i + shift] = w & 0x3ffffff;\n    }\n    for (; i < this.length - shift; i++) {\n      w = (this.words[i + shift] | 0) + carry;\n      carry = w >> 26;\n      this.words[i + shift] = w & 0x3ffffff;\n    }\n\n    if (carry === 0) return this.strip();\n\n    // Subtraction overflow\n    assert(carry === -1);\n    carry = 0;\n    for (i = 0; i < this.length; i++) {\n      w = -(this.words[i] | 0) + carry;\n      carry = w >> 26;\n      this.words[i] = w & 0x3ffffff;\n    }\n    this.negative = 1;\n\n    return this.strip();\n  };\n\n  BN.prototype._wordDiv = function _wordDiv (num, mode) {\n    var shift = this.length - num.length;\n\n    var a = this.clone();\n    var b = num;\n\n    // Normalize\n    var bhi = b.words[b.length - 1] | 0;\n    var bhiBits = this._countBits(bhi);\n    shift = 26 - bhiBits;\n    if (shift !== 0) {\n      b = b.ushln(shift);\n      a.iushln(shift);\n      bhi = b.words[b.length - 1] | 0;\n    }\n\n    // Initialize quotient\n    var m = a.length - b.length;\n    var q;\n\n    if (mode !== 'mod') {\n      q = new BN(null);\n      q.length = m + 1;\n      q.words = new Array(q.length);\n      for (var i = 0; i < q.length; i++) {\n        q.words[i] = 0;\n      }\n    }\n\n    var diff = a.clone()._ishlnsubmul(b, 1, m);\n    if (diff.negative === 0) {\n      a = diff;\n      if (q) {\n        q.words[m] = 1;\n      }\n    }\n\n    for (var j = m - 1; j >= 0; j--) {\n      var qj = (a.words[b.length + j] | 0) * 0x4000000 +\n        (a.words[b.length + j - 1] | 0);\n\n      // NOTE: (qj / bhi) is (0x3ffffff * 0x4000000 + 0x3ffffff) / 0x2000000 max\n      // (0x7ffffff)\n      qj = Math.min((qj / bhi) | 0, 0x3ffffff);\n\n      a._ishlnsubmul(b, qj, j);\n      while (a.negative !== 0) {\n        qj--;\n        a.negative = 0;\n        a._ishlnsubmul(b, 1, j);\n        if (!a.isZero()) {\n          a.negative ^= 1;\n        }\n      }\n      if (q) {\n        q.words[j] = qj;\n      }\n    }\n    if (q) {\n      q.strip();\n    }\n    a.strip();\n\n    // Denormalize\n    if (mode !== 'div' && shift !== 0) {\n      a.iushrn(shift);\n    }\n\n    return {\n      div: q || null,\n      mod: a\n    };\n  };\n\n  // NOTE: 1) `mode` can be set to `mod` to request mod only,\n  //       to `div` to request div only, or be absent to\n  //       request both div & mod\n  //       2) `positive` is true if unsigned mod is requested\n  BN.prototype.divmod = function divmod (num, mode, positive) {\n    assert(!num.isZero());\n\n    if (this.isZero()) {\n      return {\n        div: new BN(0),\n        mod: new BN(0)\n      };\n    }\n\n    var div, mod, res;\n    if (this.negative !== 0 && num.negative === 0) {\n      res = this.neg().divmod(num, mode);\n\n      if (mode !== 'mod') {\n        div = res.div.neg();\n      }\n\n      if (mode !== 'div') {\n        mod = res.mod.neg();\n        if (positive && mod.negative !== 0) {\n          mod.iadd(num);\n        }\n      }\n\n      return {\n        div: div,\n        mod: mod\n      };\n    }\n\n    if (this.negative === 0 && num.negative !== 0) {\n      res = this.divmod(num.neg(), mode);\n\n      if (mode !== 'mod') {\n        div = res.div.neg();\n      }\n\n      return {\n        div: div,\n        mod: res.mod\n      };\n    }\n\n    if ((this.negative & num.negative) !== 0) {\n      res = this.neg().divmod(num.neg(), mode);\n\n      if (mode !== 'div') {\n        mod = res.mod.neg();\n        if (positive && mod.negative !== 0) {\n          mod.isub(num);\n        }\n      }\n\n      return {\n        div: res.div,\n        mod: mod\n      };\n    }\n\n    // Both numbers are positive at this point\n\n    // Strip both numbers to approximate shift value\n    if (num.length > this.length || this.cmp(num) < 0) {\n      return {\n        div: new BN(0),\n        mod: this\n      };\n    }\n\n    // Very short reduction\n    if (num.length === 1) {\n      if (mode === 'div') {\n        return {\n          div: this.divn(num.words[0]),\n          mod: null\n        };\n      }\n\n      if (mode === 'mod') {\n        return {\n          div: null,\n          mod: new BN(this.modn(num.words[0]))\n        };\n      }\n\n      return {\n        div: this.divn(num.words[0]),\n        mod: new BN(this.modn(num.words[0]))\n      };\n    }\n\n    return this._wordDiv(num, mode);\n  };\n\n  // Find `this` / `num`\n  BN.prototype.div = function div (num) {\n    return this.divmod(num, 'div', false).div;\n  };\n\n  // Find `this` % `num`\n  BN.prototype.mod = function mod (num) {\n    return this.divmod(num, 'mod', false).mod;\n  };\n\n  BN.prototype.umod = function umod (num) {\n    return this.divmod(num, 'mod', true).mod;\n  };\n\n  // Find Round(`this` / `num`)\n  BN.prototype.divRound = function divRound (num) {\n    var dm = this.divmod(num);\n\n    // Fast case - exact division\n    if (dm.mod.isZero()) return dm.div;\n\n    var mod = dm.div.negative !== 0 ? dm.mod.isub(num) : dm.mod;\n\n    var half = num.ushrn(1);\n    var r2 = num.andln(1);\n    var cmp = mod.cmp(half);\n\n    // Round down\n    if (cmp < 0 || r2 === 1 && cmp === 0) return dm.div;\n\n    // Round up\n    return dm.div.negative !== 0 ? dm.div.isubn(1) : dm.div.iaddn(1);\n  };\n\n  BN.prototype.modn = function modn (num) {\n    assert(num <= 0x3ffffff);\n    var p = (1 << 26) % num;\n\n    var acc = 0;\n    for (var i = this.length - 1; i >= 0; i--) {\n      acc = (p * acc + (this.words[i] | 0)) % num;\n    }\n\n    return acc;\n  };\n\n  // In-place division by number\n  BN.prototype.idivn = function idivn (num) {\n    assert(num <= 0x3ffffff);\n\n    var carry = 0;\n    for (var i = this.length - 1; i >= 0; i--) {\n      var w = (this.words[i] | 0) + carry * 0x4000000;\n      this.words[i] = (w / num) | 0;\n      carry = w % num;\n    }\n\n    return this.strip();\n  };\n\n  BN.prototype.divn = function divn (num) {\n    return this.clone().idivn(num);\n  };\n\n  BN.prototype.egcd = function egcd (p) {\n    assert(p.negative === 0);\n    assert(!p.isZero());\n\n    var x = this;\n    var y = p.clone();\n\n    if (x.negative !== 0) {\n      x = x.umod(p);\n    } else {\n      x = x.clone();\n    }\n\n    // A * x + B * y = x\n    var A = new BN(1);\n    var B = new BN(0);\n\n    // C * x + D * y = y\n    var C = new BN(0);\n    var D = new BN(1);\n\n    var g = 0;\n\n    while (x.isEven() && y.isEven()) {\n      x.iushrn(1);\n      y.iushrn(1);\n      ++g;\n    }\n\n    var yp = y.clone();\n    var xp = x.clone();\n\n    while (!x.isZero()) {\n      for (var i = 0, im = 1; (x.words[0] & im) === 0 && i < 26; ++i, im <<= 1);\n      if (i > 0) {\n        x.iushrn(i);\n        while (i-- > 0) {\n          if (A.isOdd() || B.isOdd()) {\n            A.iadd(yp);\n            B.isub(xp);\n          }\n\n          A.iushrn(1);\n          B.iushrn(1);\n        }\n      }\n\n      for (var j = 0, jm = 1; (y.words[0] & jm) === 0 && j < 26; ++j, jm <<= 1);\n      if (j > 0) {\n        y.iushrn(j);\n        while (j-- > 0) {\n          if (C.isOdd() || D.isOdd()) {\n            C.iadd(yp);\n            D.isub(xp);\n          }\n\n          C.iushrn(1);\n          D.iushrn(1);\n        }\n      }\n\n      if (x.cmp(y) >= 0) {\n        x.isub(y);\n        A.isub(C);\n        B.isub(D);\n      } else {\n        y.isub(x);\n        C.isub(A);\n        D.isub(B);\n      }\n    }\n\n    return {\n      a: C,\n      b: D,\n      gcd: y.iushln(g)\n    };\n  };\n\n  // This is reduced incarnation of the binary EEA\n  // above, designated to invert members of the\n  // _prime_ fields F(p) at a maximal speed\n  BN.prototype._invmp = function _invmp (p) {\n    assert(p.negative === 0);\n    assert(!p.isZero());\n\n    var a = this;\n    var b = p.clone();\n\n    if (a.negative !== 0) {\n      a = a.umod(p);\n    } else {\n      a = a.clone();\n    }\n\n    var x1 = new BN(1);\n    var x2 = new BN(0);\n\n    var delta = b.clone();\n\n    while (a.cmpn(1) > 0 && b.cmpn(1) > 0) {\n      for (var i = 0, im = 1; (a.words[0] & im) === 0 && i < 26; ++i, im <<= 1);\n      if (i > 0) {\n        a.iushrn(i);\n        while (i-- > 0) {\n          if (x1.isOdd()) {\n            x1.iadd(delta);\n          }\n\n          x1.iushrn(1);\n        }\n      }\n\n      for (var j = 0, jm = 1; (b.words[0] & jm) === 0 && j < 26; ++j, jm <<= 1);\n      if (j > 0) {\n        b.iushrn(j);\n        while (j-- > 0) {\n          if (x2.isOdd()) {\n            x2.iadd(delta);\n          }\n\n          x2.iushrn(1);\n        }\n      }\n\n      if (a.cmp(b) >= 0) {\n        a.isub(b);\n        x1.isub(x2);\n      } else {\n        b.isub(a);\n        x2.isub(x1);\n      }\n    }\n\n    var res;\n    if (a.cmpn(1) === 0) {\n      res = x1;\n    } else {\n      res = x2;\n    }\n\n    if (res.cmpn(0) < 0) {\n      res.iadd(p);\n    }\n\n    return res;\n  };\n\n  BN.prototype.gcd = function gcd (num) {\n    if (this.isZero()) return num.abs();\n    if (num.isZero()) return this.abs();\n\n    var a = this.clone();\n    var b = num.clone();\n    a.negative = 0;\n    b.negative = 0;\n\n    // Remove common factor of two\n    for (var shift = 0; a.isEven() && b.isEven(); shift++) {\n      a.iushrn(1);\n      b.iushrn(1);\n    }\n\n    do {\n      while (a.isEven()) {\n        a.iushrn(1);\n      }\n      while (b.isEven()) {\n        b.iushrn(1);\n      }\n\n      var r = a.cmp(b);\n      if (r < 0) {\n        // Swap `a` and `b` to make `a` always bigger than `b`\n        var t = a;\n        a = b;\n        b = t;\n      } else if (r === 0 || b.cmpn(1) === 0) {\n        break;\n      }\n\n      a.isub(b);\n    } while (true);\n\n    return b.iushln(shift);\n  };\n\n  // Invert number in the field F(num)\n  BN.prototype.invm = function invm (num) {\n    return this.egcd(num).a.umod(num);\n  };\n\n  BN.prototype.isEven = function isEven () {\n    return (this.words[0] & 1) === 0;\n  };\n\n  BN.prototype.isOdd = function isOdd () {\n    return (this.words[0] & 1) === 1;\n  };\n\n  // And first word and num\n  BN.prototype.andln = function andln (num) {\n    return this.words[0] & num;\n  };\n\n  // Increment at the bit position in-line\n  BN.prototype.bincn = function bincn (bit) {\n    assert(typeof bit === 'number');\n    var r = bit % 26;\n    var s = (bit - r) / 26;\n    var q = 1 << r;\n\n    // Fast case: bit is much higher than all existing words\n    if (this.length <= s) {\n      this._expand(s + 1);\n      this.words[s] |= q;\n      return this;\n    }\n\n    // Add bit and propagate, if needed\n    var carry = q;\n    for (var i = s; carry !== 0 && i < this.length; i++) {\n      var w = this.words[i] | 0;\n      w += carry;\n      carry = w >>> 26;\n      w &= 0x3ffffff;\n      this.words[i] = w;\n    }\n    if (carry !== 0) {\n      this.words[i] = carry;\n      this.length++;\n    }\n    return this;\n  };\n\n  BN.prototype.isZero = function isZero () {\n    return this.length === 1 && this.words[0] === 0;\n  };\n\n  BN.prototype.cmpn = function cmpn (num) {\n    var negative = num < 0;\n\n    if (this.negative !== 0 && !negative) return -1;\n    if (this.negative === 0 && negative) return 1;\n\n    this.strip();\n\n    var res;\n    if (this.length > 1) {\n      res = 1;\n    } else {\n      if (negative) {\n        num = -num;\n      }\n\n      assert(num <= 0x3ffffff, 'Number is too big');\n\n      var w = this.words[0] | 0;\n      res = w === num ? 0 : w < num ? -1 : 1;\n    }\n    if (this.negative !== 0) return -res | 0;\n    return res;\n  };\n\n  // Compare two numbers and return:\n  // 1 - if `this` > `num`\n  // 0 - if `this` == `num`\n  // -1 - if `this` < `num`\n  BN.prototype.cmp = function cmp (num) {\n    if (this.negative !== 0 && num.negative === 0) return -1;\n    if (this.negative === 0 && num.negative !== 0) return 1;\n\n    var res = this.ucmp(num);\n    if (this.negative !== 0) return -res | 0;\n    return res;\n  };\n\n  // Unsigned comparison\n  BN.prototype.ucmp = function ucmp (num) {\n    // At this point both numbers have the same sign\n    if (this.length > num.length) return 1;\n    if (this.length < num.length) return -1;\n\n    var res = 0;\n    for (var i = this.length - 1; i >= 0; i--) {\n      var a = this.words[i] | 0;\n      var b = num.words[i] | 0;\n\n      if (a === b) continue;\n      if (a < b) {\n        res = -1;\n      } else if (a > b) {\n        res = 1;\n      }\n      break;\n    }\n    return res;\n  };\n\n  BN.prototype.gtn = function gtn (num) {\n    return this.cmpn(num) === 1;\n  };\n\n  BN.prototype.gt = function gt (num) {\n    return this.cmp(num) === 1;\n  };\n\n  BN.prototype.gten = function gten (num) {\n    return this.cmpn(num) >= 0;\n  };\n\n  BN.prototype.gte = function gte (num) {\n    return this.cmp(num) >= 0;\n  };\n\n  BN.prototype.ltn = function ltn (num) {\n    return this.cmpn(num) === -1;\n  };\n\n  BN.prototype.lt = function lt (num) {\n    return this.cmp(num) === -1;\n  };\n\n  BN.prototype.lten = function lten (num) {\n    return this.cmpn(num) <= 0;\n  };\n\n  BN.prototype.lte = function lte (num) {\n    return this.cmp(num) <= 0;\n  };\n\n  BN.prototype.eqn = function eqn (num) {\n    return this.cmpn(num) === 0;\n  };\n\n  BN.prototype.eq = function eq (num) {\n    return this.cmp(num) === 0;\n  };\n\n  //\n  // A reduce context, could be using montgomery or something better, depending\n  // on the `m` itself.\n  //\n  BN.red = function red (num) {\n    return new Red(num);\n  };\n\n  BN.prototype.toRed = function toRed (ctx) {\n    assert(!this.red, 'Already a number in reduction context');\n    assert(this.negative === 0, 'red works only with positives');\n    return ctx.convertTo(this)._forceRed(ctx);\n  };\n\n  BN.prototype.fromRed = function fromRed () {\n    assert(this.red, 'fromRed works only with numbers in reduction context');\n    return this.red.convertFrom(this);\n  };\n\n  BN.prototype._forceRed = function _forceRed (ctx) {\n    this.red = ctx;\n    return this;\n  };\n\n  BN.prototype.forceRed = function forceRed (ctx) {\n    assert(!this.red, 'Already a number in reduction context');\n    return this._forceRed(ctx);\n  };\n\n  BN.prototype.redAdd = function redAdd (num) {\n    assert(this.red, 'redAdd works only with red numbers');\n    return this.red.add(this, num);\n  };\n\n  BN.prototype.redIAdd = function redIAdd (num) {\n    assert(this.red, 'redIAdd works only with red numbers');\n    return this.red.iadd(this, num);\n  };\n\n  BN.prototype.redSub = function redSub (num) {\n    assert(this.red, 'redSub works only with red numbers');\n    return this.red.sub(this, num);\n  };\n\n  BN.prototype.redISub = function redISub (num) {\n    assert(this.red, 'redISub works only with red numbers');\n    return this.red.isub(this, num);\n  };\n\n  BN.prototype.redShl = function redShl (num) {\n    assert(this.red, 'redShl works only with red numbers');\n    return this.red.shl(this, num);\n  };\n\n  BN.prototype.redMul = function redMul (num) {\n    assert(this.red, 'redMul works only with red numbers');\n    this.red._verify2(this, num);\n    return this.red.mul(this, num);\n  };\n\n  BN.prototype.redIMul = function redIMul (num) {\n    assert(this.red, 'redMul works only with red numbers');\n    this.red._verify2(this, num);\n    return this.red.imul(this, num);\n  };\n\n  BN.prototype.redSqr = function redSqr () {\n    assert(this.red, 'redSqr works only with red numbers');\n    this.red._verify1(this);\n    return this.red.sqr(this);\n  };\n\n  BN.prototype.redISqr = function redISqr () {\n    assert(this.red, 'redISqr works only with red numbers');\n    this.red._verify1(this);\n    return this.red.isqr(this);\n  };\n\n  // Square root over p\n  BN.prototype.redSqrt = function redSqrt () {\n    assert(this.red, 'redSqrt works only with red numbers');\n    this.red._verify1(this);\n    return this.red.sqrt(this);\n  };\n\n  BN.prototype.redInvm = function redInvm () {\n    assert(this.red, 'redInvm works only with red numbers');\n    this.red._verify1(this);\n    return this.red.invm(this);\n  };\n\n  // Return negative clone of `this` % `red modulo`\n  BN.prototype.redNeg = function redNeg () {\n    assert(this.red, 'redNeg works only with red numbers');\n    this.red._verify1(this);\n    return this.red.neg(this);\n  };\n\n  BN.prototype.redPow = function redPow (num) {\n    assert(this.red && !num.red, 'redPow(normalNum)');\n    this.red._verify1(this);\n    return this.red.pow(this, num);\n  };\n\n  // Prime numbers with efficient reduction\n  var primes = {\n    k256: null,\n    p224: null,\n    p192: null,\n    p25519: null\n  };\n\n  // Pseudo-Mersenne prime\n  function MPrime (name, p) {\n    // P = 2 ^ N - K\n    this.name = name;\n    this.p = new BN(p, 16);\n    this.n = this.p.bitLength();\n    this.k = new BN(1).iushln(this.n).isub(this.p);\n\n    this.tmp = this._tmp();\n  }\n\n  MPrime.prototype._tmp = function _tmp () {\n    var tmp = new BN(null);\n    tmp.words = new Array(Math.ceil(this.n / 13));\n    return tmp;\n  };\n\n  MPrime.prototype.ireduce = function ireduce (num) {\n    // Assumes that `num` is less than `P^2`\n    // num = HI * (2 ^ N - K) + HI * K + LO = HI * K + LO (mod P)\n    var r = num;\n    var rlen;\n\n    do {\n      this.split(r, this.tmp);\n      r = this.imulK(r);\n      r = r.iadd(this.tmp);\n      rlen = r.bitLength();\n    } while (rlen > this.n);\n\n    var cmp = rlen < this.n ? -1 : r.ucmp(this.p);\n    if (cmp === 0) {\n      r.words[0] = 0;\n      r.length = 1;\n    } else if (cmp > 0) {\n      r.isub(this.p);\n    } else {\n      r.strip();\n    }\n\n    return r;\n  };\n\n  MPrime.prototype.split = function split (input, out) {\n    input.iushrn(this.n, 0, out);\n  };\n\n  MPrime.prototype.imulK = function imulK (num) {\n    return num.imul(this.k);\n  };\n\n  function K256 () {\n    MPrime.call(\n      this,\n      'k256',\n      'ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff fffffffe fffffc2f');\n  }\n  inherits(K256, MPrime);\n\n  K256.prototype.split = function split (input, output) {\n    // 256 = 9 * 26 + 22\n    var mask = 0x3fffff;\n\n    var outLen = Math.min(input.length, 9);\n    for (var i = 0; i < outLen; i++) {\n      output.words[i] = input.words[i];\n    }\n    output.length = outLen;\n\n    if (input.length <= 9) {\n      input.words[0] = 0;\n      input.length = 1;\n      return;\n    }\n\n    // Shift by 9 limbs\n    var prev = input.words[9];\n    output.words[output.length++] = prev & mask;\n\n    for (i = 10; i < input.length; i++) {\n      var next = input.words[i] | 0;\n      input.words[i - 10] = ((next & mask) << 4) | (prev >>> 22);\n      prev = next;\n    }\n    prev >>>= 22;\n    input.words[i - 10] = prev;\n    if (prev === 0 && input.length > 10) {\n      input.length -= 10;\n    } else {\n      input.length -= 9;\n    }\n  };\n\n  K256.prototype.imulK = function imulK (num) {\n    // K = 0x1000003d1 = [ 0x40, 0x3d1 ]\n    num.words[num.length] = 0;\n    num.words[num.length + 1] = 0;\n    num.length += 2;\n\n    // bounded at: 0x40 * 0x3ffffff + 0x3d0 = 0x100000390\n    var lo = 0;\n    for (var i = 0; i < num.length; i++) {\n      var w = num.words[i] | 0;\n      lo += w * 0x3d1;\n      num.words[i] = lo & 0x3ffffff;\n      lo = w * 0x40 + ((lo / 0x4000000) | 0);\n    }\n\n    // Fast length reduction\n    if (num.words[num.length - 1] === 0) {\n      num.length--;\n      if (num.words[num.length - 1] === 0) {\n        num.length--;\n      }\n    }\n    return num;\n  };\n\n  function P224 () {\n    MPrime.call(\n      this,\n      'p224',\n      'ffffffff ffffffff ffffffff ffffffff 00000000 00000000 00000001');\n  }\n  inherits(P224, MPrime);\n\n  function P192 () {\n    MPrime.call(\n      this,\n      'p192',\n      'ffffffff ffffffff ffffffff fffffffe ffffffff ffffffff');\n  }\n  inherits(P192, MPrime);\n\n  function P25519 () {\n    // 2 ^ 255 - 19\n    MPrime.call(\n      this,\n      '25519',\n      '7fffffffffffffff ffffffffffffffff ffffffffffffffff ffffffffffffffed');\n  }\n  inherits(P25519, MPrime);\n\n  P25519.prototype.imulK = function imulK (num) {\n    // K = 0x13\n    var carry = 0;\n    for (var i = 0; i < num.length; i++) {\n      var hi = (num.words[i] | 0) * 0x13 + carry;\n      var lo = hi & 0x3ffffff;\n      hi >>>= 26;\n\n      num.words[i] = lo;\n      carry = hi;\n    }\n    if (carry !== 0) {\n      num.words[num.length++] = carry;\n    }\n    return num;\n  };\n\n  // Exported mostly for testing purposes, use plain name instead\n  BN._prime = function prime (name) {\n    // Cached version of prime\n    if (primes[name]) return primes[name];\n\n    var prime;\n    if (name === 'k256') {\n      prime = new K256();\n    } else if (name === 'p224') {\n      prime = new P224();\n    } else if (name === 'p192') {\n      prime = new P192();\n    } else if (name === 'p25519') {\n      prime = new P25519();\n    } else {\n      throw new Error('Unknown prime ' + name);\n    }\n    primes[name] = prime;\n\n    return prime;\n  };\n\n  //\n  // Base reduction engine\n  //\n  function Red (m) {\n    if (typeof m === 'string') {\n      var prime = BN._prime(m);\n      this.m = prime.p;\n      this.prime = prime;\n    } else {\n      assert(m.gtn(1), 'modulus must be greater than 1');\n      this.m = m;\n      this.prime = null;\n    }\n  }\n\n  Red.prototype._verify1 = function _verify1 (a) {\n    assert(a.negative === 0, 'red works only with positives');\n    assert(a.red, 'red works only with red numbers');\n  };\n\n  Red.prototype._verify2 = function _verify2 (a, b) {\n    assert((a.negative | b.negative) === 0, 'red works only with positives');\n    assert(a.red && a.red === b.red,\n      'red works only with red numbers');\n  };\n\n  Red.prototype.imod = function imod (a) {\n    if (this.prime) return this.prime.ireduce(a)._forceRed(this);\n    return a.umod(this.m)._forceRed(this);\n  };\n\n  Red.prototype.neg = function neg (a) {\n    if (a.isZero()) {\n      return a.clone();\n    }\n\n    return this.m.sub(a)._forceRed(this);\n  };\n\n  Red.prototype.add = function add (a, b) {\n    this._verify2(a, b);\n\n    var res = a.add(b);\n    if (res.cmp(this.m) >= 0) {\n      res.isub(this.m);\n    }\n    return res._forceRed(this);\n  };\n\n  Red.prototype.iadd = function iadd (a, b) {\n    this._verify2(a, b);\n\n    var res = a.iadd(b);\n    if (res.cmp(this.m) >= 0) {\n      res.isub(this.m);\n    }\n    return res;\n  };\n\n  Red.prototype.sub = function sub (a, b) {\n    this._verify2(a, b);\n\n    var res = a.sub(b);\n    if (res.cmpn(0) < 0) {\n      res.iadd(this.m);\n    }\n    return res._forceRed(this);\n  };\n\n  Red.prototype.isub = function isub (a, b) {\n    this._verify2(a, b);\n\n    var res = a.isub(b);\n    if (res.cmpn(0) < 0) {\n      res.iadd(this.m);\n    }\n    return res;\n  };\n\n  Red.prototype.shl = function shl (a, num) {\n    this._verify1(a);\n    return this.imod(a.ushln(num));\n  };\n\n  Red.prototype.imul = function imul (a, b) {\n    this._verify2(a, b);\n    return this.imod(a.imul(b));\n  };\n\n  Red.prototype.mul = function mul (a, b) {\n    this._verify2(a, b);\n    return this.imod(a.mul(b));\n  };\n\n  Red.prototype.isqr = function isqr (a) {\n    return this.imul(a, a.clone());\n  };\n\n  Red.prototype.sqr = function sqr (a) {\n    return this.mul(a, a);\n  };\n\n  Red.prototype.sqrt = function sqrt (a) {\n    if (a.isZero()) return a.clone();\n\n    var mod3 = this.m.andln(3);\n    assert(mod3 % 2 === 1);\n\n    // Fast case\n    if (mod3 === 3) {\n      var pow = this.m.add(new BN(1)).iushrn(2);\n      return this.pow(a, pow);\n    }\n\n    // Tonelli-Shanks algorithm (Totally unoptimized and slow)\n    //\n    // Find Q and S, that Q * 2 ^ S = (P - 1)\n    var q = this.m.subn(1);\n    var s = 0;\n    while (!q.isZero() && q.andln(1) === 0) {\n      s++;\n      q.iushrn(1);\n    }\n    assert(!q.isZero());\n\n    var one = new BN(1).toRed(this);\n    var nOne = one.redNeg();\n\n    // Find quadratic non-residue\n    // NOTE: Max is such because of generalized Riemann hypothesis.\n    var lpow = this.m.subn(1).iushrn(1);\n    var z = this.m.bitLength();\n    z = new BN(2 * z * z).toRed(this);\n\n    while (this.pow(z, lpow).cmp(nOne) !== 0) {\n      z.redIAdd(nOne);\n    }\n\n    var c = this.pow(z, q);\n    var r = this.pow(a, q.addn(1).iushrn(1));\n    var t = this.pow(a, q);\n    var m = s;\n    while (t.cmp(one) !== 0) {\n      var tmp = t;\n      for (var i = 0; tmp.cmp(one) !== 0; i++) {\n        tmp = tmp.redSqr();\n      }\n      assert(i < m);\n      var b = this.pow(c, new BN(1).iushln(m - i - 1));\n\n      r = r.redMul(b);\n      c = b.redSqr();\n      t = t.redMul(c);\n      m = i;\n    }\n\n    return r;\n  };\n\n  Red.prototype.invm = function invm (a) {\n    var inv = a._invmp(this.m);\n    if (inv.negative !== 0) {\n      inv.negative = 0;\n      return this.imod(inv).redNeg();\n    } else {\n      return this.imod(inv);\n    }\n  };\n\n  Red.prototype.pow = function pow (a, num) {\n    if (num.isZero()) return new BN(1);\n    if (num.cmpn(1) === 0) return a.clone();\n\n    var windowSize = 4;\n    var wnd = new Array(1 << windowSize);\n    wnd[0] = new BN(1).toRed(this);\n    wnd[1] = a;\n    for (var i = 2; i < wnd.length; i++) {\n      wnd[i] = this.mul(wnd[i - 1], a);\n    }\n\n    var res = wnd[0];\n    var current = 0;\n    var currentLen = 0;\n    var start = num.bitLength() % 26;\n    if (start === 0) {\n      start = 26;\n    }\n\n    for (i = num.length - 1; i >= 0; i--) {\n      var word = num.words[i];\n      for (var j = start - 1; j >= 0; j--) {\n        var bit = (word >> j) & 1;\n        if (res !== wnd[0]) {\n          res = this.sqr(res);\n        }\n\n        if (bit === 0 && current === 0) {\n          currentLen = 0;\n          continue;\n        }\n\n        current <<= 1;\n        current |= bit;\n        currentLen++;\n        if (currentLen !== windowSize && (i !== 0 || j !== 0)) continue;\n\n        res = this.mul(res, wnd[current]);\n        currentLen = 0;\n        current = 0;\n      }\n      start = 26;\n    }\n\n    return res;\n  };\n\n  Red.prototype.convertTo = function convertTo (num) {\n    var r = num.umod(this.m);\n\n    return r === num ? r.clone() : r;\n  };\n\n  Red.prototype.convertFrom = function convertFrom (num) {\n    var res = num.clone();\n    res.red = null;\n    return res;\n  };\n\n  //\n  // Montgomery method engine\n  //\n\n  BN.mont = function mont (num) {\n    return new Mont(num);\n  };\n\n  function Mont (m) {\n    Red.call(this, m);\n\n    this.shift = this.m.bitLength();\n    if (this.shift % 26 !== 0) {\n      this.shift += 26 - (this.shift % 26);\n    }\n\n    this.r = new BN(1).iushln(this.shift);\n    this.r2 = this.imod(this.r.sqr());\n    this.rinv = this.r._invmp(this.m);\n\n    this.minv = this.rinv.mul(this.r).isubn(1).div(this.m);\n    this.minv = this.minv.umod(this.r);\n    this.minv = this.r.sub(this.minv);\n  }\n  inherits(Mont, Red);\n\n  Mont.prototype.convertTo = function convertTo (num) {\n    return this.imod(num.ushln(this.shift));\n  };\n\n  Mont.prototype.convertFrom = function convertFrom (num) {\n    var r = this.imod(num.mul(this.rinv));\n    r.red = null;\n    return r;\n  };\n\n  Mont.prototype.imul = function imul (a, b) {\n    if (a.isZero() || b.isZero()) {\n      a.words[0] = 0;\n      a.length = 1;\n      return a;\n    }\n\n    var t = a.imul(b);\n    var c = t.maskn(this.shift).mul(this.minv).imaskn(this.shift).mul(this.m);\n    var u = t.isub(c).iushrn(this.shift);\n    var res = u;\n\n    if (u.cmp(this.m) >= 0) {\n      res = u.isub(this.m);\n    } else if (u.cmpn(0) < 0) {\n      res = u.iadd(this.m);\n    }\n\n    return res._forceRed(this);\n  };\n\n  Mont.prototype.mul = function mul (a, b) {\n    if (a.isZero() || b.isZero()) return new BN(0)._forceRed(this);\n\n    var t = a.mul(b);\n    var c = t.maskn(this.shift).mul(this.minv).imaskn(this.shift).mul(this.m);\n    var u = t.isub(c).iushrn(this.shift);\n    var res = u;\n    if (u.cmp(this.m) >= 0) {\n      res = u.isub(this.m);\n    } else if (u.cmpn(0) < 0) {\n      res = u.iadd(this.m);\n    }\n\n    return res._forceRed(this);\n  };\n\n  Mont.prototype.invm = function invm (a) {\n    // (AR)^-1 * R^2 = (A^-1 * R^-1) * R^2 = A^-1 * R\n    var res = this.imod(a._invmp(this.m).mul(this.r2));\n    return res._forceRed(this);\n  };\n})(typeof module === 'undefined' || module, this);\n","(function (module, exports) {\n  'use strict';\n\n  // Utils\n  function assert (val, msg) {\n    if (!val) throw new Error(msg || 'Assertion failed');\n  }\n\n  // Could use `inherits` module, but don't want to move from single file\n  // architecture yet.\n  function inherits (ctor, superCtor) {\n    ctor.super_ = superCtor;\n    var TempCtor = function () {};\n    TempCtor.prototype = superCtor.prototype;\n    ctor.prototype = new TempCtor();\n    ctor.prototype.constructor = ctor;\n  }\n\n  // BN\n\n  function BN (number, base, endian) {\n    if (BN.isBN(number)) {\n      return number;\n    }\n\n    this.negative = 0;\n    this.words = null;\n    this.length = 0;\n\n    // Reduction context\n    this.red = null;\n\n    if (number !== null) {\n      if (base === 'le' || base === 'be') {\n        endian = base;\n        base = 10;\n      }\n\n      this._init(number || 0, base || 10, endian || 'be');\n    }\n  }\n  if (typeof module === 'object') {\n    module.exports = BN;\n  } else {\n    exports.BN = BN;\n  }\n\n  BN.BN = BN;\n  BN.wordSize = 26;\n\n  var Buffer;\n  try {\n    Buffer = require('buf' + 'fer').Buffer;\n  } catch (e) {\n  }\n\n  BN.isBN = function isBN (num) {\n    if (num instanceof BN) {\n      return true;\n    }\n\n    return num !== null && typeof num === 'object' &&\n      num.constructor.wordSize === BN.wordSize && Array.isArray(num.words);\n  };\n\n  BN.max = function max (left, right) {\n    if (left.cmp(right) > 0) return left;\n    return right;\n  };\n\n  BN.min = function min (left, right) {\n    if (left.cmp(right) < 0) return left;\n    return right;\n  };\n\n  BN.prototype._init = function init (number, base, endian) {\n    if (typeof number === 'number') {\n      return this._initNumber(number, base, endian);\n    }\n\n    if (typeof number === 'object') {\n      return this._initArray(number, base, endian);\n    }\n\n    if (base === 'hex') {\n      base = 16;\n    }\n    assert(base === (base | 0) && base >= 2 && base <= 36);\n\n    number = number.toString().replace(/\\s+/g, '');\n    var start = 0;\n    if (number[0] === '-') {\n      start++;\n    }\n\n    if (base === 16) {\n      this._parseHex(number, start);\n    } else {\n      this._parseBase(number, base, start);\n    }\n\n    if (number[0] === '-') {\n      this.negative = 1;\n    }\n\n    this.strip();\n\n    if (endian !== 'le') return;\n\n    this._initArray(this.toArray(), base, endian);\n  };\n\n  BN.prototype._initNumber = function _initNumber (number, base, endian) {\n    if (number < 0) {\n      this.negative = 1;\n      number = -number;\n    }\n    if (number < 0x4000000) {\n      this.words = [ number & 0x3ffffff ];\n      this.length = 1;\n    } else if (number < 0x10000000000000) {\n      this.words = [\n        number & 0x3ffffff,\n        (number / 0x4000000) & 0x3ffffff\n      ];\n      this.length = 2;\n    } else {\n      assert(number < 0x20000000000000); // 2 ^ 53 (unsafe)\n      this.words = [\n        number & 0x3ffffff,\n        (number / 0x4000000) & 0x3ffffff,\n        1\n      ];\n      this.length = 3;\n    }\n\n    if (endian !== 'le') return;\n\n    // Reverse the bytes\n    this._initArray(this.toArray(), base, endian);\n  };\n\n  BN.prototype._initArray = function _initArray (number, base, endian) {\n    // Perhaps a Uint8Array\n    assert(typeof number.length === 'number');\n    if (number.length <= 0) {\n      this.words = [ 0 ];\n      this.length = 1;\n      return this;\n    }\n\n    this.length = Math.ceil(number.length / 3);\n    this.words = new Array(this.length);\n    for (var i = 0; i < this.length; i++) {\n      this.words[i] = 0;\n    }\n\n    var j, w;\n    var off = 0;\n    if (endian === 'be') {\n      for (i = number.length - 1, j = 0; i >= 0; i -= 3) {\n        w = number[i] | (number[i - 1] << 8) | (number[i - 2] << 16);\n        this.words[j] |= (w << off) & 0x3ffffff;\n        this.words[j + 1] = (w >>> (26 - off)) & 0x3ffffff;\n        off += 24;\n        if (off >= 26) {\n          off -= 26;\n          j++;\n        }\n      }\n    } else if (endian === 'le') {\n      for (i = 0, j = 0; i < number.length; i += 3) {\n        w = number[i] | (number[i + 1] << 8) | (number[i + 2] << 16);\n        this.words[j] |= (w << off) & 0x3ffffff;\n        this.words[j + 1] = (w >>> (26 - off)) & 0x3ffffff;\n        off += 24;\n        if (off >= 26) {\n          off -= 26;\n          j++;\n        }\n      }\n    }\n    return this.strip();\n  };\n\n  function parseHex (str, start, end) {\n    var r = 0;\n    var len = Math.min(str.length, end);\n    for (var i = start; i < len; i++) {\n      var c = str.charCodeAt(i) - 48;\n\n      r <<= 4;\n\n      // 'a' - 'f'\n      if (c >= 49 && c <= 54) {\n        r |= c - 49 + 0xa;\n\n      // 'A' - 'F'\n      } else if (c >= 17 && c <= 22) {\n        r |= c - 17 + 0xa;\n\n      // '0' - '9'\n      } else {\n        r |= c & 0xf;\n      }\n    }\n    return r;\n  }\n\n  BN.prototype._parseHex = function _parseHex (number, start) {\n    // Create possibly bigger array to ensure that it fits the number\n    this.length = Math.ceil((number.length - start) / 6);\n    this.words = new Array(this.length);\n    for (var i = 0; i < this.length; i++) {\n      this.words[i] = 0;\n    }\n\n    var j, w;\n    // Scan 24-bit chunks and add them to the number\n    var off = 0;\n    for (i = number.length - 6, j = 0; i >= start; i -= 6) {\n      w = parseHex(number, i, i + 6);\n      this.words[j] |= (w << off) & 0x3ffffff;\n      // NOTE: `0x3fffff` is intentional here, 26bits max shift + 24bit hex limb\n      this.words[j + 1] |= w >>> (26 - off) & 0x3fffff;\n      off += 24;\n      if (off >= 26) {\n        off -= 26;\n        j++;\n      }\n    }\n    if (i + 6 !== start) {\n      w = parseHex(number, start, i + 6);\n      this.words[j] |= (w << off) & 0x3ffffff;\n      this.words[j + 1] |= w >>> (26 - off) & 0x3fffff;\n    }\n    this.strip();\n  };\n\n  function parseBase (str, start, end, mul) {\n    var r = 0;\n    var len = Math.min(str.length, end);\n    for (var i = start; i < len; i++) {\n      var c = str.charCodeAt(i) - 48;\n\n      r *= mul;\n\n      // 'a'\n      if (c >= 49) {\n        r += c - 49 + 0xa;\n\n      // 'A'\n      } else if (c >= 17) {\n        r += c - 17 + 0xa;\n\n      // '0' - '9'\n      } else {\n        r += c;\n      }\n    }\n    return r;\n  }\n\n  BN.prototype._parseBase = function _parseBase (number, base, start) {\n    // Initialize as zero\n    this.words = [ 0 ];\n    this.length = 1;\n\n    // Find length of limb in base\n    for (var limbLen = 0, limbPow = 1; limbPow <= 0x3ffffff; limbPow *= base) {\n      limbLen++;\n    }\n    limbLen--;\n    limbPow = (limbPow / base) | 0;\n\n    var total = number.length - start;\n    var mod = total % limbLen;\n    var end = Math.min(total, total - mod) + start;\n\n    var word = 0;\n    for (var i = start; i < end; i += limbLen) {\n      word = parseBase(number, i, i + limbLen, base);\n\n      this.imuln(limbPow);\n      if (this.words[0] + word < 0x4000000) {\n        this.words[0] += word;\n      } else {\n        this._iaddn(word);\n      }\n    }\n\n    if (mod !== 0) {\n      var pow = 1;\n      word = parseBase(number, i, number.length, base);\n\n      for (i = 0; i < mod; i++) {\n        pow *= base;\n      }\n\n      this.imuln(pow);\n      if (this.words[0] + word < 0x4000000) {\n        this.words[0] += word;\n      } else {\n        this._iaddn(word);\n      }\n    }\n  };\n\n  BN.prototype.copy = function copy (dest) {\n    dest.words = new Array(this.length);\n    for (var i = 0; i < this.length; i++) {\n      dest.words[i] = this.words[i];\n    }\n    dest.length = this.length;\n    dest.negative = this.negative;\n    dest.red = this.red;\n  };\n\n  BN.prototype.clone = function clone () {\n    var r = new BN(null);\n    this.copy(r);\n    return r;\n  };\n\n  BN.prototype._expand = function _expand (size) {\n    while (this.length < size) {\n      this.words[this.length++] = 0;\n    }\n    return this;\n  };\n\n  // Remove leading `0` from `this`\n  BN.prototype.strip = function strip () {\n    while (this.length > 1 && this.words[this.length - 1] === 0) {\n      this.length--;\n    }\n    return this._normSign();\n  };\n\n  BN.prototype._normSign = function _normSign () {\n    // -0 = 0\n    if (this.length === 1 && this.words[0] === 0) {\n      this.negative = 0;\n    }\n    return this;\n  };\n\n  BN.prototype.inspect = function inspect () {\n    return (this.red ? '<BN-R: ' : '<BN: ') + this.toString(16) + '>';\n  };\n\n  /*\n\n  var zeros = [];\n  var groupSizes = [];\n  var groupBases = [];\n\n  var s = '';\n  var i = -1;\n  while (++i < BN.wordSize) {\n    zeros[i] = s;\n    s += '0';\n  }\n  groupSizes[0] = 0;\n  groupSizes[1] = 0;\n  groupBases[0] = 0;\n  groupBases[1] = 0;\n  var base = 2 - 1;\n  while (++base < 36 + 1) {\n    var groupSize = 0;\n    var groupBase = 1;\n    while (groupBase < (1 << BN.wordSize) / base) {\n      groupBase *= base;\n      groupSize += 1;\n    }\n    groupSizes[base] = groupSize;\n    groupBases[base] = groupBase;\n  }\n\n  */\n\n  var zeros = [\n    '',\n    '0',\n    '00',\n    '000',\n    '0000',\n    '00000',\n    '000000',\n    '0000000',\n    '00000000',\n    '000000000',\n    '0000000000',\n    '00000000000',\n    '000000000000',\n    '0000000000000',\n    '00000000000000',\n    '000000000000000',\n    '0000000000000000',\n    '00000000000000000',\n    '000000000000000000',\n    '0000000000000000000',\n    '00000000000000000000',\n    '000000000000000000000',\n    '0000000000000000000000',\n    '00000000000000000000000',\n    '000000000000000000000000',\n    '0000000000000000000000000'\n  ];\n\n  var groupSizes = [\n    0, 0,\n    25, 16, 12, 11, 10, 9, 8,\n    8, 7, 7, 7, 7, 6, 6,\n    6, 6, 6, 6, 6, 5, 5,\n    5, 5, 5, 5, 5, 5, 5,\n    5, 5, 5, 5, 5, 5, 5\n  ];\n\n  var groupBases = [\n    0, 0,\n    33554432, 43046721, 16777216, 48828125, 60466176, 40353607, 16777216,\n    43046721, 10000000, 19487171, 35831808, 62748517, 7529536, 11390625,\n    16777216, 24137569, 34012224, 47045881, 64000000, 4084101, 5153632,\n    6436343, 7962624, 9765625, 11881376, 14348907, 17210368, 20511149,\n    24300000, 28629151, 33554432, 39135393, 45435424, 52521875, 60466176\n  ];\n\n  BN.prototype.toString = function toString (base, padding) {\n    base = base || 10;\n    padding = padding | 0 || 1;\n\n    var out;\n    if (base === 16 || base === 'hex') {\n      out = '';\n      var off = 0;\n      var carry = 0;\n      for (var i = 0; i < this.length; i++) {\n        var w = this.words[i];\n        var word = (((w << off) | carry) & 0xffffff).toString(16);\n        carry = (w >>> (24 - off)) & 0xffffff;\n        if (carry !== 0 || i !== this.length - 1) {\n          out = zeros[6 - word.length] + word + out;\n        } else {\n          out = word + out;\n        }\n        off += 2;\n        if (off >= 26) {\n          off -= 26;\n          i--;\n        }\n      }\n      if (carry !== 0) {\n        out = carry.toString(16) + out;\n      }\n      while (out.length % padding !== 0) {\n        out = '0' + out;\n      }\n      if (this.negative !== 0) {\n        out = '-' + out;\n      }\n      return out;\n    }\n\n    if (base === (base | 0) && base >= 2 && base <= 36) {\n      // var groupSize = Math.floor(BN.wordSize * Math.LN2 / Math.log(base));\n      var groupSize = groupSizes[base];\n      // var groupBase = Math.pow(base, groupSize);\n      var groupBase = groupBases[base];\n      out = '';\n      var c = this.clone();\n      c.negative = 0;\n      while (!c.isZero()) {\n        var r = c.modn(groupBase).toString(base);\n        c = c.idivn(groupBase);\n\n        if (!c.isZero()) {\n          out = zeros[groupSize - r.length] + r + out;\n        } else {\n          out = r + out;\n        }\n      }\n      if (this.isZero()) {\n        out = '0' + out;\n      }\n      while (out.length % padding !== 0) {\n        out = '0' + out;\n      }\n      if (this.negative !== 0) {\n        out = '-' + out;\n      }\n      return out;\n    }\n\n    assert(false, 'Base should be between 2 and 36');\n  };\n\n  BN.prototype.toNumber = function toNumber () {\n    var ret = this.words[0];\n    if (this.length === 2) {\n      ret += this.words[1] * 0x4000000;\n    } else if (this.length === 3 && this.words[2] === 0x01) {\n      // NOTE: at this stage it is known that the top bit is set\n      ret += 0x10000000000000 + (this.words[1] * 0x4000000);\n    } else if (this.length > 2) {\n      assert(false, 'Number can only safely store up to 53 bits');\n    }\n    return (this.negative !== 0) ? -ret : ret;\n  };\n\n  BN.prototype.toJSON = function toJSON () {\n    return this.toString(16);\n  };\n\n  BN.prototype.toBuffer = function toBuffer (endian, length) {\n    assert(typeof Buffer !== 'undefined');\n    return this.toArrayLike(Buffer, endian, length);\n  };\n\n  BN.prototype.toArray = function toArray (endian, length) {\n    return this.toArrayLike(Array, endian, length);\n  };\n\n  BN.prototype.toArrayLike = function toArrayLike (ArrayType, endian, length) {\n    var byteLength = this.byteLength();\n    var reqLength = length || Math.max(1, byteLength);\n    assert(byteLength <= reqLength, 'byte array longer than desired length');\n    assert(reqLength > 0, 'Requested array length <= 0');\n\n    this.strip();\n    var littleEndian = endian === 'le';\n    var res = new ArrayType(reqLength);\n\n    var b, i;\n    var q = this.clone();\n    if (!littleEndian) {\n      // Assume big-endian\n      for (i = 0; i < reqLength - byteLength; i++) {\n        res[i] = 0;\n      }\n\n      for (i = 0; !q.isZero(); i++) {\n        b = q.andln(0xff);\n        q.iushrn(8);\n\n        res[reqLength - i - 1] = b;\n      }\n    } else {\n      for (i = 0; !q.isZero(); i++) {\n        b = q.andln(0xff);\n        q.iushrn(8);\n\n        res[i] = b;\n      }\n\n      for (; i < reqLength; i++) {\n        res[i] = 0;\n      }\n    }\n\n    return res;\n  };\n\n  if (Math.clz32) {\n    BN.prototype._countBits = function _countBits (w) {\n      return 32 - Math.clz32(w);\n    };\n  } else {\n    BN.prototype._countBits = function _countBits (w) {\n      var t = w;\n      var r = 0;\n      if (t >= 0x1000) {\n        r += 13;\n        t >>>= 13;\n      }\n      if (t >= 0x40) {\n        r += 7;\n        t >>>= 7;\n      }\n      if (t >= 0x8) {\n        r += 4;\n        t >>>= 4;\n      }\n      if (t >= 0x02) {\n        r += 2;\n        t >>>= 2;\n      }\n      return r + t;\n    };\n  }\n\n  BN.prototype._zeroBits = function _zeroBits (w) {\n    // Short-cut\n    if (w === 0) return 26;\n\n    var t = w;\n    var r = 0;\n    if ((t & 0x1fff) === 0) {\n      r += 13;\n      t >>>= 13;\n    }\n    if ((t & 0x7f) === 0) {\n      r += 7;\n      t >>>= 7;\n    }\n    if ((t & 0xf) === 0) {\n      r += 4;\n      t >>>= 4;\n    }\n    if ((t & 0x3) === 0) {\n      r += 2;\n      t >>>= 2;\n    }\n    if ((t & 0x1) === 0) {\n      r++;\n    }\n    return r;\n  };\n\n  // Return number of used bits in a BN\n  BN.prototype.bitLength = function bitLength () {\n    var w = this.words[this.length - 1];\n    var hi = this._countBits(w);\n    return (this.length - 1) * 26 + hi;\n  };\n\n  function toBitArray (num) {\n    var w = new Array(num.bitLength());\n\n    for (var bit = 0; bit < w.length; bit++) {\n      var off = (bit / 26) | 0;\n      var wbit = bit % 26;\n\n      w[bit] = (num.words[off] & (1 << wbit)) >>> wbit;\n    }\n\n    return w;\n  }\n\n  // Number of trailing zero bits\n  BN.prototype.zeroBits = function zeroBits () {\n    if (this.isZero()) return 0;\n\n    var r = 0;\n    for (var i = 0; i < this.length; i++) {\n      var b = this._zeroBits(this.words[i]);\n      r += b;\n      if (b !== 26) break;\n    }\n    return r;\n  };\n\n  BN.prototype.byteLength = function byteLength () {\n    return Math.ceil(this.bitLength() / 8);\n  };\n\n  BN.prototype.toTwos = function toTwos (width) {\n    if (this.negative !== 0) {\n      return this.abs().inotn(width).iaddn(1);\n    }\n    return this.clone();\n  };\n\n  BN.prototype.fromTwos = function fromTwos (width) {\n    if (this.testn(width - 1)) {\n      return this.notn(width).iaddn(1).ineg();\n    }\n    return this.clone();\n  };\n\n  BN.prototype.isNeg = function isNeg () {\n    return this.negative !== 0;\n  };\n\n  // Return negative clone of `this`\n  BN.prototype.neg = function neg () {\n    return this.clone().ineg();\n  };\n\n  BN.prototype.ineg = function ineg () {\n    if (!this.isZero()) {\n      this.negative ^= 1;\n    }\n\n    return this;\n  };\n\n  // Or `num` with `this` in-place\n  BN.prototype.iuor = function iuor (num) {\n    while (this.length < num.length) {\n      this.words[this.length++] = 0;\n    }\n\n    for (var i = 0; i < num.length; i++) {\n      this.words[i] = this.words[i] | num.words[i];\n    }\n\n    return this.strip();\n  };\n\n  BN.prototype.ior = function ior (num) {\n    assert((this.negative | num.negative) === 0);\n    return this.iuor(num);\n  };\n\n  // Or `num` with `this`\n  BN.prototype.or = function or (num) {\n    if (this.length > num.length) return this.clone().ior(num);\n    return num.clone().ior(this);\n  };\n\n  BN.prototype.uor = function uor (num) {\n    if (this.length > num.length) return this.clone().iuor(num);\n    return num.clone().iuor(this);\n  };\n\n  // And `num` with `this` in-place\n  BN.prototype.iuand = function iuand (num) {\n    // b = min-length(num, this)\n    var b;\n    if (this.length > num.length) {\n      b = num;\n    } else {\n      b = this;\n    }\n\n    for (var i = 0; i < b.length; i++) {\n      this.words[i] = this.words[i] & num.words[i];\n    }\n\n    this.length = b.length;\n\n    return this.strip();\n  };\n\n  BN.prototype.iand = function iand (num) {\n    assert((this.negative | num.negative) === 0);\n    return this.iuand(num);\n  };\n\n  // And `num` with `this`\n  BN.prototype.and = function and (num) {\n    if (this.length > num.length) return this.clone().iand(num);\n    return num.clone().iand(this);\n  };\n\n  BN.prototype.uand = function uand (num) {\n    if (this.length > num.length) return this.clone().iuand(num);\n    return num.clone().iuand(this);\n  };\n\n  // Xor `num` with `this` in-place\n  BN.prototype.iuxor = function iuxor (num) {\n    // a.length > b.length\n    var a;\n    var b;\n    if (this.length > num.length) {\n      a = this;\n      b = num;\n    } else {\n      a = num;\n      b = this;\n    }\n\n    for (var i = 0; i < b.length; i++) {\n      this.words[i] = a.words[i] ^ b.words[i];\n    }\n\n    if (this !== a) {\n      for (; i < a.length; i++) {\n        this.words[i] = a.words[i];\n      }\n    }\n\n    this.length = a.length;\n\n    return this.strip();\n  };\n\n  BN.prototype.ixor = function ixor (num) {\n    assert((this.negative | num.negative) === 0);\n    return this.iuxor(num);\n  };\n\n  // Xor `num` with `this`\n  BN.prototype.xor = function xor (num) {\n    if (this.length > num.length) return this.clone().ixor(num);\n    return num.clone().ixor(this);\n  };\n\n  BN.prototype.uxor = function uxor (num) {\n    if (this.length > num.length) return this.clone().iuxor(num);\n    return num.clone().iuxor(this);\n  };\n\n  // Not ``this`` with ``width`` bitwidth\n  BN.prototype.inotn = function inotn (width) {\n    assert(typeof width === 'number' && width >= 0);\n\n    var bytesNeeded = Math.ceil(width / 26) | 0;\n    var bitsLeft = width % 26;\n\n    // Extend the buffer with leading zeroes\n    this._expand(bytesNeeded);\n\n    if (bitsLeft > 0) {\n      bytesNeeded--;\n    }\n\n    // Handle complete words\n    for (var i = 0; i < bytesNeeded; i++) {\n      this.words[i] = ~this.words[i] & 0x3ffffff;\n    }\n\n    // Handle the residue\n    if (bitsLeft > 0) {\n      this.words[i] = ~this.words[i] & (0x3ffffff >> (26 - bitsLeft));\n    }\n\n    // And remove leading zeroes\n    return this.strip();\n  };\n\n  BN.prototype.notn = function notn (width) {\n    return this.clone().inotn(width);\n  };\n\n  // Set `bit` of `this`\n  BN.prototype.setn = function setn (bit, val) {\n    assert(typeof bit === 'number' && bit >= 0);\n\n    var off = (bit / 26) | 0;\n    var wbit = bit % 26;\n\n    this._expand(off + 1);\n\n    if (val) {\n      this.words[off] = this.words[off] | (1 << wbit);\n    } else {\n      this.words[off] = this.words[off] & ~(1 << wbit);\n    }\n\n    return this.strip();\n  };\n\n  // Add `num` to `this` in-place\n  BN.prototype.iadd = function iadd (num) {\n    var r;\n\n    // negative + positive\n    if (this.negative !== 0 && num.negative === 0) {\n      this.negative = 0;\n      r = this.isub(num);\n      this.negative ^= 1;\n      return this._normSign();\n\n    // positive + negative\n    } else if (this.negative === 0 && num.negative !== 0) {\n      num.negative = 0;\n      r = this.isub(num);\n      num.negative = 1;\n      return r._normSign();\n    }\n\n    // a.length > b.length\n    var a, b;\n    if (this.length > num.length) {\n      a = this;\n      b = num;\n    } else {\n      a = num;\n      b = this;\n    }\n\n    var carry = 0;\n    for (var i = 0; i < b.length; i++) {\n      r = (a.words[i] | 0) + (b.words[i] | 0) + carry;\n      this.words[i] = r & 0x3ffffff;\n      carry = r >>> 26;\n    }\n    for (; carry !== 0 && i < a.length; i++) {\n      r = (a.words[i] | 0) + carry;\n      this.words[i] = r & 0x3ffffff;\n      carry = r >>> 26;\n    }\n\n    this.length = a.length;\n    if (carry !== 0) {\n      this.words[this.length] = carry;\n      this.length++;\n    // Copy the rest of the words\n    } else if (a !== this) {\n      for (; i < a.length; i++) {\n        this.words[i] = a.words[i];\n      }\n    }\n\n    return this;\n  };\n\n  // Add `num` to `this`\n  BN.prototype.add = function add (num) {\n    var res;\n    if (num.negative !== 0 && this.negative === 0) {\n      num.negative = 0;\n      res = this.sub(num);\n      num.negative ^= 1;\n      return res;\n    } else if (num.negative === 0 && this.negative !== 0) {\n      this.negative = 0;\n      res = num.sub(this);\n      this.negative = 1;\n      return res;\n    }\n\n    if (this.length > num.length) return this.clone().iadd(num);\n\n    return num.clone().iadd(this);\n  };\n\n  // Subtract `num` from `this` in-place\n  BN.prototype.isub = function isub (num) {\n    // this - (-num) = this + num\n    if (num.negative !== 0) {\n      num.negative = 0;\n      var r = this.iadd(num);\n      num.negative = 1;\n      return r._normSign();\n\n    // -this - num = -(this + num)\n    } else if (this.negative !== 0) {\n      this.negative = 0;\n      this.iadd(num);\n      this.negative = 1;\n      return this._normSign();\n    }\n\n    // At this point both numbers are positive\n    var cmp = this.cmp(num);\n\n    // Optimization - zeroify\n    if (cmp === 0) {\n      this.negative = 0;\n      this.length = 1;\n      this.words[0] = 0;\n      return this;\n    }\n\n    // a > b\n    var a, b;\n    if (cmp > 0) {\n      a = this;\n      b = num;\n    } else {\n      a = num;\n      b = this;\n    }\n\n    var carry = 0;\n    for (var i = 0; i < b.length; i++) {\n      r = (a.words[i] | 0) - (b.words[i] | 0) + carry;\n      carry = r >> 26;\n      this.words[i] = r & 0x3ffffff;\n    }\n    for (; carry !== 0 && i < a.length; i++) {\n      r = (a.words[i] | 0) + carry;\n      carry = r >> 26;\n      this.words[i] = r & 0x3ffffff;\n    }\n\n    // Copy rest of the words\n    if (carry === 0 && i < a.length && a !== this) {\n      for (; i < a.length; i++) {\n        this.words[i] = a.words[i];\n      }\n    }\n\n    this.length = Math.max(this.length, i);\n\n    if (a !== this) {\n      this.negative = 1;\n    }\n\n    return this.strip();\n  };\n\n  // Subtract `num` from `this`\n  BN.prototype.sub = function sub (num) {\n    return this.clone().isub(num);\n  };\n\n  function smallMulTo (self, num, out) {\n    out.negative = num.negative ^ self.negative;\n    var len = (self.length + num.length) | 0;\n    out.length = len;\n    len = (len - 1) | 0;\n\n    // Peel one iteration (compiler can't do it, because of code complexity)\n    var a = self.words[0] | 0;\n    var b = num.words[0] | 0;\n    var r = a * b;\n\n    var lo = r & 0x3ffffff;\n    var carry = (r / 0x4000000) | 0;\n    out.words[0] = lo;\n\n    for (var k = 1; k < len; k++) {\n      // Sum all words with the same `i + j = k` and accumulate `ncarry`,\n      // note that ncarry could be >= 0x3ffffff\n      var ncarry = carry >>> 26;\n      var rword = carry & 0x3ffffff;\n      var maxJ = Math.min(k, num.length - 1);\n      for (var j = Math.max(0, k - self.length + 1); j <= maxJ; j++) {\n        var i = (k - j) | 0;\n        a = self.words[i] | 0;\n        b = num.words[j] | 0;\n        r = a * b + rword;\n        ncarry += (r / 0x4000000) | 0;\n        rword = r & 0x3ffffff;\n      }\n      out.words[k] = rword | 0;\n      carry = ncarry | 0;\n    }\n    if (carry !== 0) {\n      out.words[k] = carry | 0;\n    } else {\n      out.length--;\n    }\n\n    return out.strip();\n  }\n\n  // TODO(indutny): it may be reasonable to omit it for users who don't need\n  // to work with 256-bit numbers, otherwise it gives 20% improvement for 256-bit\n  // multiplication (like elliptic secp256k1).\n  var comb10MulTo = function comb10MulTo (self, num, out) {\n    var a = self.words;\n    var b = num.words;\n    var o = out.words;\n    var c = 0;\n    var lo;\n    var mid;\n    var hi;\n    var a0 = a[0] | 0;\n    var al0 = a0 & 0x1fff;\n    var ah0 = a0 >>> 13;\n    var a1 = a[1] | 0;\n    var al1 = a1 & 0x1fff;\n    var ah1 = a1 >>> 13;\n    var a2 = a[2] | 0;\n    var al2 = a2 & 0x1fff;\n    var ah2 = a2 >>> 13;\n    var a3 = a[3] | 0;\n    var al3 = a3 & 0x1fff;\n    var ah3 = a3 >>> 13;\n    var a4 = a[4] | 0;\n    var al4 = a4 & 0x1fff;\n    var ah4 = a4 >>> 13;\n    var a5 = a[5] | 0;\n    var al5 = a5 & 0x1fff;\n    var ah5 = a5 >>> 13;\n    var a6 = a[6] | 0;\n    var al6 = a6 & 0x1fff;\n    var ah6 = a6 >>> 13;\n    var a7 = a[7] | 0;\n    var al7 = a7 & 0x1fff;\n    var ah7 = a7 >>> 13;\n    var a8 = a[8] | 0;\n    var al8 = a8 & 0x1fff;\n    var ah8 = a8 >>> 13;\n    var a9 = a[9] | 0;\n    var al9 = a9 & 0x1fff;\n    var ah9 = a9 >>> 13;\n    var b0 = b[0] | 0;\n    var bl0 = b0 & 0x1fff;\n    var bh0 = b0 >>> 13;\n    var b1 = b[1] | 0;\n    var bl1 = b1 & 0x1fff;\n    var bh1 = b1 >>> 13;\n    var b2 = b[2] | 0;\n    var bl2 = b2 & 0x1fff;\n    var bh2 = b2 >>> 13;\n    var b3 = b[3] | 0;\n    var bl3 = b3 & 0x1fff;\n    var bh3 = b3 >>> 13;\n    var b4 = b[4] | 0;\n    var bl4 = b4 & 0x1fff;\n    var bh4 = b4 >>> 13;\n    var b5 = b[5] | 0;\n    var bl5 = b5 & 0x1fff;\n    var bh5 = b5 >>> 13;\n    var b6 = b[6] | 0;\n    var bl6 = b6 & 0x1fff;\n    var bh6 = b6 >>> 13;\n    var b7 = b[7] | 0;\n    var bl7 = b7 & 0x1fff;\n    var bh7 = b7 >>> 13;\n    var b8 = b[8] | 0;\n    var bl8 = b8 & 0x1fff;\n    var bh8 = b8 >>> 13;\n    var b9 = b[9] | 0;\n    var bl9 = b9 & 0x1fff;\n    var bh9 = b9 >>> 13;\n\n    out.negative = self.negative ^ num.negative;\n    out.length = 19;\n    /* k = 0 */\n    lo = Math.imul(al0, bl0);\n    mid = Math.imul(al0, bh0);\n    mid = (mid + Math.imul(ah0, bl0)) | 0;\n    hi = Math.imul(ah0, bh0);\n    var w0 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w0 >>> 26)) | 0;\n    w0 &= 0x3ffffff;\n    /* k = 1 */\n    lo = Math.imul(al1, bl0);\n    mid = Math.imul(al1, bh0);\n    mid = (mid + Math.imul(ah1, bl0)) | 0;\n    hi = Math.imul(ah1, bh0);\n    lo = (lo + Math.imul(al0, bl1)) | 0;\n    mid = (mid + Math.imul(al0, bh1)) | 0;\n    mid = (mid + Math.imul(ah0, bl1)) | 0;\n    hi = (hi + Math.imul(ah0, bh1)) | 0;\n    var w1 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w1 >>> 26)) | 0;\n    w1 &= 0x3ffffff;\n    /* k = 2 */\n    lo = Math.imul(al2, bl0);\n    mid = Math.imul(al2, bh0);\n    mid = (mid + Math.imul(ah2, bl0)) | 0;\n    hi = Math.imul(ah2, bh0);\n    lo = (lo + Math.imul(al1, bl1)) | 0;\n    mid = (mid + Math.imul(al1, bh1)) | 0;\n    mid = (mid + Math.imul(ah1, bl1)) | 0;\n    hi = (hi + Math.imul(ah1, bh1)) | 0;\n    lo = (lo + Math.imul(al0, bl2)) | 0;\n    mid = (mid + Math.imul(al0, bh2)) | 0;\n    mid = (mid + Math.imul(ah0, bl2)) | 0;\n    hi = (hi + Math.imul(ah0, bh2)) | 0;\n    var w2 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w2 >>> 26)) | 0;\n    w2 &= 0x3ffffff;\n    /* k = 3 */\n    lo = Math.imul(al3, bl0);\n    mid = Math.imul(al3, bh0);\n    mid = (mid + Math.imul(ah3, bl0)) | 0;\n    hi = Math.imul(ah3, bh0);\n    lo = (lo + Math.imul(al2, bl1)) | 0;\n    mid = (mid + Math.imul(al2, bh1)) | 0;\n    mid = (mid + Math.imul(ah2, bl1)) | 0;\n    hi = (hi + Math.imul(ah2, bh1)) | 0;\n    lo = (lo + Math.imul(al1, bl2)) | 0;\n    mid = (mid + Math.imul(al1, bh2)) | 0;\n    mid = (mid + Math.imul(ah1, bl2)) | 0;\n    hi = (hi + Math.imul(ah1, bh2)) | 0;\n    lo = (lo + Math.imul(al0, bl3)) | 0;\n    mid = (mid + Math.imul(al0, bh3)) | 0;\n    mid = (mid + Math.imul(ah0, bl3)) | 0;\n    hi = (hi + Math.imul(ah0, bh3)) | 0;\n    var w3 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w3 >>> 26)) | 0;\n    w3 &= 0x3ffffff;\n    /* k = 4 */\n    lo = Math.imul(al4, bl0);\n    mid = Math.imul(al4, bh0);\n    mid = (mid + Math.imul(ah4, bl0)) | 0;\n    hi = Math.imul(ah4, bh0);\n    lo = (lo + Math.imul(al3, bl1)) | 0;\n    mid = (mid + Math.imul(al3, bh1)) | 0;\n    mid = (mid + Math.imul(ah3, bl1)) | 0;\n    hi = (hi + Math.imul(ah3, bh1)) | 0;\n    lo = (lo + Math.imul(al2, bl2)) | 0;\n    mid = (mid + Math.imul(al2, bh2)) | 0;\n    mid = (mid + Math.imul(ah2, bl2)) | 0;\n    hi = (hi + Math.imul(ah2, bh2)) | 0;\n    lo = (lo + Math.imul(al1, bl3)) | 0;\n    mid = (mid + Math.imul(al1, bh3)) | 0;\n    mid = (mid + Math.imul(ah1, bl3)) | 0;\n    hi = (hi + Math.imul(ah1, bh3)) | 0;\n    lo = (lo + Math.imul(al0, bl4)) | 0;\n    mid = (mid + Math.imul(al0, bh4)) | 0;\n    mid = (mid + Math.imul(ah0, bl4)) | 0;\n    hi = (hi + Math.imul(ah0, bh4)) | 0;\n    var w4 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w4 >>> 26)) | 0;\n    w4 &= 0x3ffffff;\n    /* k = 5 */\n    lo = Math.imul(al5, bl0);\n    mid = Math.imul(al5, bh0);\n    mid = (mid + Math.imul(ah5, bl0)) | 0;\n    hi = Math.imul(ah5, bh0);\n    lo = (lo + Math.imul(al4, bl1)) | 0;\n    mid = (mid + Math.imul(al4, bh1)) | 0;\n    mid = (mid + Math.imul(ah4, bl1)) | 0;\n    hi = (hi + Math.imul(ah4, bh1)) | 0;\n    lo = (lo + Math.imul(al3, bl2)) | 0;\n    mid = (mid + Math.imul(al3, bh2)) | 0;\n    mid = (mid + Math.imul(ah3, bl2)) | 0;\n    hi = (hi + Math.imul(ah3, bh2)) | 0;\n    lo = (lo + Math.imul(al2, bl3)) | 0;\n    mid = (mid + Math.imul(al2, bh3)) | 0;\n    mid = (mid + Math.imul(ah2, bl3)) | 0;\n    hi = (hi + Math.imul(ah2, bh3)) | 0;\n    lo = (lo + Math.imul(al1, bl4)) | 0;\n    mid = (mid + Math.imul(al1, bh4)) | 0;\n    mid = (mid + Math.imul(ah1, bl4)) | 0;\n    hi = (hi + Math.imul(ah1, bh4)) | 0;\n    lo = (lo + Math.imul(al0, bl5)) | 0;\n    mid = (mid + Math.imul(al0, bh5)) | 0;\n    mid = (mid + Math.imul(ah0, bl5)) | 0;\n    hi = (hi + Math.imul(ah0, bh5)) | 0;\n    var w5 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w5 >>> 26)) | 0;\n    w5 &= 0x3ffffff;\n    /* k = 6 */\n    lo = Math.imul(al6, bl0);\n    mid = Math.imul(al6, bh0);\n    mid = (mid + Math.imul(ah6, bl0)) | 0;\n    hi = Math.imul(ah6, bh0);\n    lo = (lo + Math.imul(al5, bl1)) | 0;\n    mid = (mid + Math.imul(al5, bh1)) | 0;\n    mid = (mid + Math.imul(ah5, bl1)) | 0;\n    hi = (hi + Math.imul(ah5, bh1)) | 0;\n    lo = (lo + Math.imul(al4, bl2)) | 0;\n    mid = (mid + Math.imul(al4, bh2)) | 0;\n    mid = (mid + Math.imul(ah4, bl2)) | 0;\n    hi = (hi + Math.imul(ah4, bh2)) | 0;\n    lo = (lo + Math.imul(al3, bl3)) | 0;\n    mid = (mid + Math.imul(al3, bh3)) | 0;\n    mid = (mid + Math.imul(ah3, bl3)) | 0;\n    hi = (hi + Math.imul(ah3, bh3)) | 0;\n    lo = (lo + Math.imul(al2, bl4)) | 0;\n    mid = (mid + Math.imul(al2, bh4)) | 0;\n    mid = (mid + Math.imul(ah2, bl4)) | 0;\n    hi = (hi + Math.imul(ah2, bh4)) | 0;\n    lo = (lo + Math.imul(al1, bl5)) | 0;\n    mid = (mid + Math.imul(al1, bh5)) | 0;\n    mid = (mid + Math.imul(ah1, bl5)) | 0;\n    hi = (hi + Math.imul(ah1, bh5)) | 0;\n    lo = (lo + Math.imul(al0, bl6)) | 0;\n    mid = (mid + Math.imul(al0, bh6)) | 0;\n    mid = (mid + Math.imul(ah0, bl6)) | 0;\n    hi = (hi + Math.imul(ah0, bh6)) | 0;\n    var w6 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w6 >>> 26)) | 0;\n    w6 &= 0x3ffffff;\n    /* k = 7 */\n    lo = Math.imul(al7, bl0);\n    mid = Math.imul(al7, bh0);\n    mid = (mid + Math.imul(ah7, bl0)) | 0;\n    hi = Math.imul(ah7, bh0);\n    lo = (lo + Math.imul(al6, bl1)) | 0;\n    mid = (mid + Math.imul(al6, bh1)) | 0;\n    mid = (mid + Math.imul(ah6, bl1)) | 0;\n    hi = (hi + Math.imul(ah6, bh1)) | 0;\n    lo = (lo + Math.imul(al5, bl2)) | 0;\n    mid = (mid + Math.imul(al5, bh2)) | 0;\n    mid = (mid + Math.imul(ah5, bl2)) | 0;\n    hi = (hi + Math.imul(ah5, bh2)) | 0;\n    lo = (lo + Math.imul(al4, bl3)) | 0;\n    mid = (mid + Math.imul(al4, bh3)) | 0;\n    mid = (mid + Math.imul(ah4, bl3)) | 0;\n    hi = (hi + Math.imul(ah4, bh3)) | 0;\n    lo = (lo + Math.imul(al3, bl4)) | 0;\n    mid = (mid + Math.imul(al3, bh4)) | 0;\n    mid = (mid + Math.imul(ah3, bl4)) | 0;\n    hi = (hi + Math.imul(ah3, bh4)) | 0;\n    lo = (lo + Math.imul(al2, bl5)) | 0;\n    mid = (mid + Math.imul(al2, bh5)) | 0;\n    mid = (mid + Math.imul(ah2, bl5)) | 0;\n    hi = (hi + Math.imul(ah2, bh5)) | 0;\n    lo = (lo + Math.imul(al1, bl6)) | 0;\n    mid = (mid + Math.imul(al1, bh6)) | 0;\n    mid = (mid + Math.imul(ah1, bl6)) | 0;\n    hi = (hi + Math.imul(ah1, bh6)) | 0;\n    lo = (lo + Math.imul(al0, bl7)) | 0;\n    mid = (mid + Math.imul(al0, bh7)) | 0;\n    mid = (mid + Math.imul(ah0, bl7)) | 0;\n    hi = (hi + Math.imul(ah0, bh7)) | 0;\n    var w7 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w7 >>> 26)) | 0;\n    w7 &= 0x3ffffff;\n    /* k = 8 */\n    lo = Math.imul(al8, bl0);\n    mid = Math.imul(al8, bh0);\n    mid = (mid + Math.imul(ah8, bl0)) | 0;\n    hi = Math.imul(ah8, bh0);\n    lo = (lo + Math.imul(al7, bl1)) | 0;\n    mid = (mid + Math.imul(al7, bh1)) | 0;\n    mid = (mid + Math.imul(ah7, bl1)) | 0;\n    hi = (hi + Math.imul(ah7, bh1)) | 0;\n    lo = (lo + Math.imul(al6, bl2)) | 0;\n    mid = (mid + Math.imul(al6, bh2)) | 0;\n    mid = (mid + Math.imul(ah6, bl2)) | 0;\n    hi = (hi + Math.imul(ah6, bh2)) | 0;\n    lo = (lo + Math.imul(al5, bl3)) | 0;\n    mid = (mid + Math.imul(al5, bh3)) | 0;\n    mid = (mid + Math.imul(ah5, bl3)) | 0;\n    hi = (hi + Math.imul(ah5, bh3)) | 0;\n    lo = (lo + Math.imul(al4, bl4)) | 0;\n    mid = (mid + Math.imul(al4, bh4)) | 0;\n    mid = (mid + Math.imul(ah4, bl4)) | 0;\n    hi = (hi + Math.imul(ah4, bh4)) | 0;\n    lo = (lo + Math.imul(al3, bl5)) | 0;\n    mid = (mid + Math.imul(al3, bh5)) | 0;\n    mid = (mid + Math.imul(ah3, bl5)) | 0;\n    hi = (hi + Math.imul(ah3, bh5)) | 0;\n    lo = (lo + Math.imul(al2, bl6)) | 0;\n    mid = (mid + Math.imul(al2, bh6)) | 0;\n    mid = (mid + Math.imul(ah2, bl6)) | 0;\n    hi = (hi + Math.imul(ah2, bh6)) | 0;\n    lo = (lo + Math.imul(al1, bl7)) | 0;\n    mid = (mid + Math.imul(al1, bh7)) | 0;\n    mid = (mid + Math.imul(ah1, bl7)) | 0;\n    hi = (hi + Math.imul(ah1, bh7)) | 0;\n    lo = (lo + Math.imul(al0, bl8)) | 0;\n    mid = (mid + Math.imul(al0, bh8)) | 0;\n    mid = (mid + Math.imul(ah0, bl8)) | 0;\n    hi = (hi + Math.imul(ah0, bh8)) | 0;\n    var w8 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w8 >>> 26)) | 0;\n    w8 &= 0x3ffffff;\n    /* k = 9 */\n    lo = Math.imul(al9, bl0);\n    mid = Math.imul(al9, bh0);\n    mid = (mid + Math.imul(ah9, bl0)) | 0;\n    hi = Math.imul(ah9, bh0);\n    lo = (lo + Math.imul(al8, bl1)) | 0;\n    mid = (mid + Math.imul(al8, bh1)) | 0;\n    mid = (mid + Math.imul(ah8, bl1)) | 0;\n    hi = (hi + Math.imul(ah8, bh1)) | 0;\n    lo = (lo + Math.imul(al7, bl2)) | 0;\n    mid = (mid + Math.imul(al7, bh2)) | 0;\n    mid = (mid + Math.imul(ah7, bl2)) | 0;\n    hi = (hi + Math.imul(ah7, bh2)) | 0;\n    lo = (lo + Math.imul(al6, bl3)) | 0;\n    mid = (mid + Math.imul(al6, bh3)) | 0;\n    mid = (mid + Math.imul(ah6, bl3)) | 0;\n    hi = (hi + Math.imul(ah6, bh3)) | 0;\n    lo = (lo + Math.imul(al5, bl4)) | 0;\n    mid = (mid + Math.imul(al5, bh4)) | 0;\n    mid = (mid + Math.imul(ah5, bl4)) | 0;\n    hi = (hi + Math.imul(ah5, bh4)) | 0;\n    lo = (lo + Math.imul(al4, bl5)) | 0;\n    mid = (mid + Math.imul(al4, bh5)) | 0;\n    mid = (mid + Math.imul(ah4, bl5)) | 0;\n    hi = (hi + Math.imul(ah4, bh5)) | 0;\n    lo = (lo + Math.imul(al3, bl6)) | 0;\n    mid = (mid + Math.imul(al3, bh6)) | 0;\n    mid = (mid + Math.imul(ah3, bl6)) | 0;\n    hi = (hi + Math.imul(ah3, bh6)) | 0;\n    lo = (lo + Math.imul(al2, bl7)) | 0;\n    mid = (mid + Math.imul(al2, bh7)) | 0;\n    mid = (mid + Math.imul(ah2, bl7)) | 0;\n    hi = (hi + Math.imul(ah2, bh7)) | 0;\n    lo = (lo + Math.imul(al1, bl8)) | 0;\n    mid = (mid + Math.imul(al1, bh8)) | 0;\n    mid = (mid + Math.imul(ah1, bl8)) | 0;\n    hi = (hi + Math.imul(ah1, bh8)) | 0;\n    lo = (lo + Math.imul(al0, bl9)) | 0;\n    mid = (mid + Math.imul(al0, bh9)) | 0;\n    mid = (mid + Math.imul(ah0, bl9)) | 0;\n    hi = (hi + Math.imul(ah0, bh9)) | 0;\n    var w9 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w9 >>> 26)) | 0;\n    w9 &= 0x3ffffff;\n    /* k = 10 */\n    lo = Math.imul(al9, bl1);\n    mid = Math.imul(al9, bh1);\n    mid = (mid + Math.imul(ah9, bl1)) | 0;\n    hi = Math.imul(ah9, bh1);\n    lo = (lo + Math.imul(al8, bl2)) | 0;\n    mid = (mid + Math.imul(al8, bh2)) | 0;\n    mid = (mid + Math.imul(ah8, bl2)) | 0;\n    hi = (hi + Math.imul(ah8, bh2)) | 0;\n    lo = (lo + Math.imul(al7, bl3)) | 0;\n    mid = (mid + Math.imul(al7, bh3)) | 0;\n    mid = (mid + Math.imul(ah7, bl3)) | 0;\n    hi = (hi + Math.imul(ah7, bh3)) | 0;\n    lo = (lo + Math.imul(al6, bl4)) | 0;\n    mid = (mid + Math.imul(al6, bh4)) | 0;\n    mid = (mid + Math.imul(ah6, bl4)) | 0;\n    hi = (hi + Math.imul(ah6, bh4)) | 0;\n    lo = (lo + Math.imul(al5, bl5)) | 0;\n    mid = (mid + Math.imul(al5, bh5)) | 0;\n    mid = (mid + Math.imul(ah5, bl5)) | 0;\n    hi = (hi + Math.imul(ah5, bh5)) | 0;\n    lo = (lo + Math.imul(al4, bl6)) | 0;\n    mid = (mid + Math.imul(al4, bh6)) | 0;\n    mid = (mid + Math.imul(ah4, bl6)) | 0;\n    hi = (hi + Math.imul(ah4, bh6)) | 0;\n    lo = (lo + Math.imul(al3, bl7)) | 0;\n    mid = (mid + Math.imul(al3, bh7)) | 0;\n    mid = (mid + Math.imul(ah3, bl7)) | 0;\n    hi = (hi + Math.imul(ah3, bh7)) | 0;\n    lo = (lo + Math.imul(al2, bl8)) | 0;\n    mid = (mid + Math.imul(al2, bh8)) | 0;\n    mid = (mid + Math.imul(ah2, bl8)) | 0;\n    hi = (hi + Math.imul(ah2, bh8)) | 0;\n    lo = (lo + Math.imul(al1, bl9)) | 0;\n    mid = (mid + Math.imul(al1, bh9)) | 0;\n    mid = (mid + Math.imul(ah1, bl9)) | 0;\n    hi = (hi + Math.imul(ah1, bh9)) | 0;\n    var w10 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w10 >>> 26)) | 0;\n    w10 &= 0x3ffffff;\n    /* k = 11 */\n    lo = Math.imul(al9, bl2);\n    mid = Math.imul(al9, bh2);\n    mid = (mid + Math.imul(ah9, bl2)) | 0;\n    hi = Math.imul(ah9, bh2);\n    lo = (lo + Math.imul(al8, bl3)) | 0;\n    mid = (mid + Math.imul(al8, bh3)) | 0;\n    mid = (mid + Math.imul(ah8, bl3)) | 0;\n    hi = (hi + Math.imul(ah8, bh3)) | 0;\n    lo = (lo + Math.imul(al7, bl4)) | 0;\n    mid = (mid + Math.imul(al7, bh4)) | 0;\n    mid = (mid + Math.imul(ah7, bl4)) | 0;\n    hi = (hi + Math.imul(ah7, bh4)) | 0;\n    lo = (lo + Math.imul(al6, bl5)) | 0;\n    mid = (mid + Math.imul(al6, bh5)) | 0;\n    mid = (mid + Math.imul(ah6, bl5)) | 0;\n    hi = (hi + Math.imul(ah6, bh5)) | 0;\n    lo = (lo + Math.imul(al5, bl6)) | 0;\n    mid = (mid + Math.imul(al5, bh6)) | 0;\n    mid = (mid + Math.imul(ah5, bl6)) | 0;\n    hi = (hi + Math.imul(ah5, bh6)) | 0;\n    lo = (lo + Math.imul(al4, bl7)) | 0;\n    mid = (mid + Math.imul(al4, bh7)) | 0;\n    mid = (mid + Math.imul(ah4, bl7)) | 0;\n    hi = (hi + Math.imul(ah4, bh7)) | 0;\n    lo = (lo + Math.imul(al3, bl8)) | 0;\n    mid = (mid + Math.imul(al3, bh8)) | 0;\n    mid = (mid + Math.imul(ah3, bl8)) | 0;\n    hi = (hi + Math.imul(ah3, bh8)) | 0;\n    lo = (lo + Math.imul(al2, bl9)) | 0;\n    mid = (mid + Math.imul(al2, bh9)) | 0;\n    mid = (mid + Math.imul(ah2, bl9)) | 0;\n    hi = (hi + Math.imul(ah2, bh9)) | 0;\n    var w11 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w11 >>> 26)) | 0;\n    w11 &= 0x3ffffff;\n    /* k = 12 */\n    lo = Math.imul(al9, bl3);\n    mid = Math.imul(al9, bh3);\n    mid = (mid + Math.imul(ah9, bl3)) | 0;\n    hi = Math.imul(ah9, bh3);\n    lo = (lo + Math.imul(al8, bl4)) | 0;\n    mid = (mid + Math.imul(al8, bh4)) | 0;\n    mid = (mid + Math.imul(ah8, bl4)) | 0;\n    hi = (hi + Math.imul(ah8, bh4)) | 0;\n    lo = (lo + Math.imul(al7, bl5)) | 0;\n    mid = (mid + Math.imul(al7, bh5)) | 0;\n    mid = (mid + Math.imul(ah7, bl5)) | 0;\n    hi = (hi + Math.imul(ah7, bh5)) | 0;\n    lo = (lo + Math.imul(al6, bl6)) | 0;\n    mid = (mid + Math.imul(al6, bh6)) | 0;\n    mid = (mid + Math.imul(ah6, bl6)) | 0;\n    hi = (hi + Math.imul(ah6, bh6)) | 0;\n    lo = (lo + Math.imul(al5, bl7)) | 0;\n    mid = (mid + Math.imul(al5, bh7)) | 0;\n    mid = (mid + Math.imul(ah5, bl7)) | 0;\n    hi = (hi + Math.imul(ah5, bh7)) | 0;\n    lo = (lo + Math.imul(al4, bl8)) | 0;\n    mid = (mid + Math.imul(al4, bh8)) | 0;\n    mid = (mid + Math.imul(ah4, bl8)) | 0;\n    hi = (hi + Math.imul(ah4, bh8)) | 0;\n    lo = (lo + Math.imul(al3, bl9)) | 0;\n    mid = (mid + Math.imul(al3, bh9)) | 0;\n    mid = (mid + Math.imul(ah3, bl9)) | 0;\n    hi = (hi + Math.imul(ah3, bh9)) | 0;\n    var w12 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w12 >>> 26)) | 0;\n    w12 &= 0x3ffffff;\n    /* k = 13 */\n    lo = Math.imul(al9, bl4);\n    mid = Math.imul(al9, bh4);\n    mid = (mid + Math.imul(ah9, bl4)) | 0;\n    hi = Math.imul(ah9, bh4);\n    lo = (lo + Math.imul(al8, bl5)) | 0;\n    mid = (mid + Math.imul(al8, bh5)) | 0;\n    mid = (mid + Math.imul(ah8, bl5)) | 0;\n    hi = (hi + Math.imul(ah8, bh5)) | 0;\n    lo = (lo + Math.imul(al7, bl6)) | 0;\n    mid = (mid + Math.imul(al7, bh6)) | 0;\n    mid = (mid + Math.imul(ah7, bl6)) | 0;\n    hi = (hi + Math.imul(ah7, bh6)) | 0;\n    lo = (lo + Math.imul(al6, bl7)) | 0;\n    mid = (mid + Math.imul(al6, bh7)) | 0;\n    mid = (mid + Math.imul(ah6, bl7)) | 0;\n    hi = (hi + Math.imul(ah6, bh7)) | 0;\n    lo = (lo + Math.imul(al5, bl8)) | 0;\n    mid = (mid + Math.imul(al5, bh8)) | 0;\n    mid = (mid + Math.imul(ah5, bl8)) | 0;\n    hi = (hi + Math.imul(ah5, bh8)) | 0;\n    lo = (lo + Math.imul(al4, bl9)) | 0;\n    mid = (mid + Math.imul(al4, bh9)) | 0;\n    mid = (mid + Math.imul(ah4, bl9)) | 0;\n    hi = (hi + Math.imul(ah4, bh9)) | 0;\n    var w13 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w13 >>> 26)) | 0;\n    w13 &= 0x3ffffff;\n    /* k = 14 */\n    lo = Math.imul(al9, bl5);\n    mid = Math.imul(al9, bh5);\n    mid = (mid + Math.imul(ah9, bl5)) | 0;\n    hi = Math.imul(ah9, bh5);\n    lo = (lo + Math.imul(al8, bl6)) | 0;\n    mid = (mid + Math.imul(al8, bh6)) | 0;\n    mid = (mid + Math.imul(ah8, bl6)) | 0;\n    hi = (hi + Math.imul(ah8, bh6)) | 0;\n    lo = (lo + Math.imul(al7, bl7)) | 0;\n    mid = (mid + Math.imul(al7, bh7)) | 0;\n    mid = (mid + Math.imul(ah7, bl7)) | 0;\n    hi = (hi + Math.imul(ah7, bh7)) | 0;\n    lo = (lo + Math.imul(al6, bl8)) | 0;\n    mid = (mid + Math.imul(al6, bh8)) | 0;\n    mid = (mid + Math.imul(ah6, bl8)) | 0;\n    hi = (hi + Math.imul(ah6, bh8)) | 0;\n    lo = (lo + Math.imul(al5, bl9)) | 0;\n    mid = (mid + Math.imul(al5, bh9)) | 0;\n    mid = (mid + Math.imul(ah5, bl9)) | 0;\n    hi = (hi + Math.imul(ah5, bh9)) | 0;\n    var w14 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w14 >>> 26)) | 0;\n    w14 &= 0x3ffffff;\n    /* k = 15 */\n    lo = Math.imul(al9, bl6);\n    mid = Math.imul(al9, bh6);\n    mid = (mid + Math.imul(ah9, bl6)) | 0;\n    hi = Math.imul(ah9, bh6);\n    lo = (lo + Math.imul(al8, bl7)) | 0;\n    mid = (mid + Math.imul(al8, bh7)) | 0;\n    mid = (mid + Math.imul(ah8, bl7)) | 0;\n    hi = (hi + Math.imul(ah8, bh7)) | 0;\n    lo = (lo + Math.imul(al7, bl8)) | 0;\n    mid = (mid + Math.imul(al7, bh8)) | 0;\n    mid = (mid + Math.imul(ah7, bl8)) | 0;\n    hi = (hi + Math.imul(ah7, bh8)) | 0;\n    lo = (lo + Math.imul(al6, bl9)) | 0;\n    mid = (mid + Math.imul(al6, bh9)) | 0;\n    mid = (mid + Math.imul(ah6, bl9)) | 0;\n    hi = (hi + Math.imul(ah6, bh9)) | 0;\n    var w15 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w15 >>> 26)) | 0;\n    w15 &= 0x3ffffff;\n    /* k = 16 */\n    lo = Math.imul(al9, bl7);\n    mid = Math.imul(al9, bh7);\n    mid = (mid + Math.imul(ah9, bl7)) | 0;\n    hi = Math.imul(ah9, bh7);\n    lo = (lo + Math.imul(al8, bl8)) | 0;\n    mid = (mid + Math.imul(al8, bh8)) | 0;\n    mid = (mid + Math.imul(ah8, bl8)) | 0;\n    hi = (hi + Math.imul(ah8, bh8)) | 0;\n    lo = (lo + Math.imul(al7, bl9)) | 0;\n    mid = (mid + Math.imul(al7, bh9)) | 0;\n    mid = (mid + Math.imul(ah7, bl9)) | 0;\n    hi = (hi + Math.imul(ah7, bh9)) | 0;\n    var w16 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w16 >>> 26)) | 0;\n    w16 &= 0x3ffffff;\n    /* k = 17 */\n    lo = Math.imul(al9, bl8);\n    mid = Math.imul(al9, bh8);\n    mid = (mid + Math.imul(ah9, bl8)) | 0;\n    hi = Math.imul(ah9, bh8);\n    lo = (lo + Math.imul(al8, bl9)) | 0;\n    mid = (mid + Math.imul(al8, bh9)) | 0;\n    mid = (mid + Math.imul(ah8, bl9)) | 0;\n    hi = (hi + Math.imul(ah8, bh9)) | 0;\n    var w17 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w17 >>> 26)) | 0;\n    w17 &= 0x3ffffff;\n    /* k = 18 */\n    lo = Math.imul(al9, bl9);\n    mid = Math.imul(al9, bh9);\n    mid = (mid + Math.imul(ah9, bl9)) | 0;\n    hi = Math.imul(ah9, bh9);\n    var w18 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w18 >>> 26)) | 0;\n    w18 &= 0x3ffffff;\n    o[0] = w0;\n    o[1] = w1;\n    o[2] = w2;\n    o[3] = w3;\n    o[4] = w4;\n    o[5] = w5;\n    o[6] = w6;\n    o[7] = w7;\n    o[8] = w8;\n    o[9] = w9;\n    o[10] = w10;\n    o[11] = w11;\n    o[12] = w12;\n    o[13] = w13;\n    o[14] = w14;\n    o[15] = w15;\n    o[16] = w16;\n    o[17] = w17;\n    o[18] = w18;\n    if (c !== 0) {\n      o[19] = c;\n      out.length++;\n    }\n    return out;\n  };\n\n  // Polyfill comb\n  if (!Math.imul) {\n    comb10MulTo = smallMulTo;\n  }\n\n  function bigMulTo (self, num, out) {\n    out.negative = num.negative ^ self.negative;\n    out.length = self.length + num.length;\n\n    var carry = 0;\n    var hncarry = 0;\n    for (var k = 0; k < out.length - 1; k++) {\n      // Sum all words with the same `i + j = k` and accumulate `ncarry`,\n      // note that ncarry could be >= 0x3ffffff\n      var ncarry = hncarry;\n      hncarry = 0;\n      var rword = carry & 0x3ffffff;\n      var maxJ = Math.min(k, num.length - 1);\n      for (var j = Math.max(0, k - self.length + 1); j <= maxJ; j++) {\n        var i = k - j;\n        var a = self.words[i] | 0;\n        var b = num.words[j] | 0;\n        var r = a * b;\n\n        var lo = r & 0x3ffffff;\n        ncarry = (ncarry + ((r / 0x4000000) | 0)) | 0;\n        lo = (lo + rword) | 0;\n        rword = lo & 0x3ffffff;\n        ncarry = (ncarry + (lo >>> 26)) | 0;\n\n        hncarry += ncarry >>> 26;\n        ncarry &= 0x3ffffff;\n      }\n      out.words[k] = rword;\n      carry = ncarry;\n      ncarry = hncarry;\n    }\n    if (carry !== 0) {\n      out.words[k] = carry;\n    } else {\n      out.length--;\n    }\n\n    return out.strip();\n  }\n\n  function jumboMulTo (self, num, out) {\n    var fftm = new FFTM();\n    return fftm.mulp(self, num, out);\n  }\n\n  BN.prototype.mulTo = function mulTo (num, out) {\n    var res;\n    var len = this.length + num.length;\n    if (this.length === 10 && num.length === 10) {\n      res = comb10MulTo(this, num, out);\n    } else if (len < 63) {\n      res = smallMulTo(this, num, out);\n    } else if (len < 1024) {\n      res = bigMulTo(this, num, out);\n    } else {\n      res = jumboMulTo(this, num, out);\n    }\n\n    return res;\n  };\n\n  // Cooley-Tukey algorithm for FFT\n  // slightly revisited to rely on looping instead of recursion\n\n  function FFTM (x, y) {\n    this.x = x;\n    this.y = y;\n  }\n\n  FFTM.prototype.makeRBT = function makeRBT (N) {\n    var t = new Array(N);\n    var l = BN.prototype._countBits(N) - 1;\n    for (var i = 0; i < N; i++) {\n      t[i] = this.revBin(i, l, N);\n    }\n\n    return t;\n  };\n\n  // Returns binary-reversed representation of `x`\n  FFTM.prototype.revBin = function revBin (x, l, N) {\n    if (x === 0 || x === N - 1) return x;\n\n    var rb = 0;\n    for (var i = 0; i < l; i++) {\n      rb |= (x & 1) << (l - i - 1);\n      x >>= 1;\n    }\n\n    return rb;\n  };\n\n  // Performs \"tweedling\" phase, therefore 'emulating'\n  // behaviour of the recursive algorithm\n  FFTM.prototype.permute = function permute (rbt, rws, iws, rtws, itws, N) {\n    for (var i = 0; i < N; i++) {\n      rtws[i] = rws[rbt[i]];\n      itws[i] = iws[rbt[i]];\n    }\n  };\n\n  FFTM.prototype.transform = function transform (rws, iws, rtws, itws, N, rbt) {\n    this.permute(rbt, rws, iws, rtws, itws, N);\n\n    for (var s = 1; s < N; s <<= 1) {\n      var l = s << 1;\n\n      var rtwdf = Math.cos(2 * Math.PI / l);\n      var itwdf = Math.sin(2 * Math.PI / l);\n\n      for (var p = 0; p < N; p += l) {\n        var rtwdf_ = rtwdf;\n        var itwdf_ = itwdf;\n\n        for (var j = 0; j < s; j++) {\n          var re = rtws[p + j];\n          var ie = itws[p + j];\n\n          var ro = rtws[p + j + s];\n          var io = itws[p + j + s];\n\n          var rx = rtwdf_ * ro - itwdf_ * io;\n\n          io = rtwdf_ * io + itwdf_ * ro;\n          ro = rx;\n\n          rtws[p + j] = re + ro;\n          itws[p + j] = ie + io;\n\n          rtws[p + j + s] = re - ro;\n          itws[p + j + s] = ie - io;\n\n          /* jshint maxdepth : false */\n          if (j !== l) {\n            rx = rtwdf * rtwdf_ - itwdf * itwdf_;\n\n            itwdf_ = rtwdf * itwdf_ + itwdf * rtwdf_;\n            rtwdf_ = rx;\n          }\n        }\n      }\n    }\n  };\n\n  FFTM.prototype.guessLen13b = function guessLen13b (n, m) {\n    var N = Math.max(m, n) | 1;\n    var odd = N & 1;\n    var i = 0;\n    for (N = N / 2 | 0; N; N = N >>> 1) {\n      i++;\n    }\n\n    return 1 << i + 1 + odd;\n  };\n\n  FFTM.prototype.conjugate = function conjugate (rws, iws, N) {\n    if (N <= 1) return;\n\n    for (var i = 0; i < N / 2; i++) {\n      var t = rws[i];\n\n      rws[i] = rws[N - i - 1];\n      rws[N - i - 1] = t;\n\n      t = iws[i];\n\n      iws[i] = -iws[N - i - 1];\n      iws[N - i - 1] = -t;\n    }\n  };\n\n  FFTM.prototype.normalize13b = function normalize13b (ws, N) {\n    var carry = 0;\n    for (var i = 0; i < N / 2; i++) {\n      var w = Math.round(ws[2 * i + 1] / N) * 0x2000 +\n        Math.round(ws[2 * i] / N) +\n        carry;\n\n      ws[i] = w & 0x3ffffff;\n\n      if (w < 0x4000000) {\n        carry = 0;\n      } else {\n        carry = w / 0x4000000 | 0;\n      }\n    }\n\n    return ws;\n  };\n\n  FFTM.prototype.convert13b = function convert13b (ws, len, rws, N) {\n    var carry = 0;\n    for (var i = 0; i < len; i++) {\n      carry = carry + (ws[i] | 0);\n\n      rws[2 * i] = carry & 0x1fff; carry = carry >>> 13;\n      rws[2 * i + 1] = carry & 0x1fff; carry = carry >>> 13;\n    }\n\n    // Pad with zeroes\n    for (i = 2 * len; i < N; ++i) {\n      rws[i] = 0;\n    }\n\n    assert(carry === 0);\n    assert((carry & ~0x1fff) === 0);\n  };\n\n  FFTM.prototype.stub = function stub (N) {\n    var ph = new Array(N);\n    for (var i = 0; i < N; i++) {\n      ph[i] = 0;\n    }\n\n    return ph;\n  };\n\n  FFTM.prototype.mulp = function mulp (x, y, out) {\n    var N = 2 * this.guessLen13b(x.length, y.length);\n\n    var rbt = this.makeRBT(N);\n\n    var _ = this.stub(N);\n\n    var rws = new Array(N);\n    var rwst = new Array(N);\n    var iwst = new Array(N);\n\n    var nrws = new Array(N);\n    var nrwst = new Array(N);\n    var niwst = new Array(N);\n\n    var rmws = out.words;\n    rmws.length = N;\n\n    this.convert13b(x.words, x.length, rws, N);\n    this.convert13b(y.words, y.length, nrws, N);\n\n    this.transform(rws, _, rwst, iwst, N, rbt);\n    this.transform(nrws, _, nrwst, niwst, N, rbt);\n\n    for (var i = 0; i < N; i++) {\n      var rx = rwst[i] * nrwst[i] - iwst[i] * niwst[i];\n      iwst[i] = rwst[i] * niwst[i] + iwst[i] * nrwst[i];\n      rwst[i] = rx;\n    }\n\n    this.conjugate(rwst, iwst, N);\n    this.transform(rwst, iwst, rmws, _, N, rbt);\n    this.conjugate(rmws, _, N);\n    this.normalize13b(rmws, N);\n\n    out.negative = x.negative ^ y.negative;\n    out.length = x.length + y.length;\n    return out.strip();\n  };\n\n  // Multiply `this` by `num`\n  BN.prototype.mul = function mul (num) {\n    var out = new BN(null);\n    out.words = new Array(this.length + num.length);\n    return this.mulTo(num, out);\n  };\n\n  // Multiply employing FFT\n  BN.prototype.mulf = function mulf (num) {\n    var out = new BN(null);\n    out.words = new Array(this.length + num.length);\n    return jumboMulTo(this, num, out);\n  };\n\n  // In-place Multiplication\n  BN.prototype.imul = function imul (num) {\n    return this.clone().mulTo(num, this);\n  };\n\n  BN.prototype.imuln = function imuln (num) {\n    assert(typeof num === 'number');\n    assert(num < 0x4000000);\n\n    // Carry\n    var carry = 0;\n    for (var i = 0; i < this.length; i++) {\n      var w = (this.words[i] | 0) * num;\n      var lo = (w & 0x3ffffff) + (carry & 0x3ffffff);\n      carry >>= 26;\n      carry += (w / 0x4000000) | 0;\n      // NOTE: lo is 27bit maximum\n      carry += lo >>> 26;\n      this.words[i] = lo & 0x3ffffff;\n    }\n\n    if (carry !== 0) {\n      this.words[i] = carry;\n      this.length++;\n    }\n\n    return this;\n  };\n\n  BN.prototype.muln = function muln (num) {\n    return this.clone().imuln(num);\n  };\n\n  // `this` * `this`\n  BN.prototype.sqr = function sqr () {\n    return this.mul(this);\n  };\n\n  // `this` * `this` in-place\n  BN.prototype.isqr = function isqr () {\n    return this.imul(this.clone());\n  };\n\n  // Math.pow(`this`, `num`)\n  BN.prototype.pow = function pow (num) {\n    var w = toBitArray(num);\n    if (w.length === 0) return new BN(1);\n\n    // Skip leading zeroes\n    var res = this;\n    for (var i = 0; i < w.length; i++, res = res.sqr()) {\n      if (w[i] !== 0) break;\n    }\n\n    if (++i < w.length) {\n      for (var q = res.sqr(); i < w.length; i++, q = q.sqr()) {\n        if (w[i] === 0) continue;\n\n        res = res.mul(q);\n      }\n    }\n\n    return res;\n  };\n\n  // Shift-left in-place\n  BN.prototype.iushln = function iushln (bits) {\n    assert(typeof bits === 'number' && bits >= 0);\n    var r = bits % 26;\n    var s = (bits - r) / 26;\n    var carryMask = (0x3ffffff >>> (26 - r)) << (26 - r);\n    var i;\n\n    if (r !== 0) {\n      var carry = 0;\n\n      for (i = 0; i < this.length; i++) {\n        var newCarry = this.words[i] & carryMask;\n        var c = ((this.words[i] | 0) - newCarry) << r;\n        this.words[i] = c | carry;\n        carry = newCarry >>> (26 - r);\n      }\n\n      if (carry) {\n        this.words[i] = carry;\n        this.length++;\n      }\n    }\n\n    if (s !== 0) {\n      for (i = this.length - 1; i >= 0; i--) {\n        this.words[i + s] = this.words[i];\n      }\n\n      for (i = 0; i < s; i++) {\n        this.words[i] = 0;\n      }\n\n      this.length += s;\n    }\n\n    return this.strip();\n  };\n\n  BN.prototype.ishln = function ishln (bits) {\n    // TODO(indutny): implement me\n    assert(this.negative === 0);\n    return this.iushln(bits);\n  };\n\n  // Shift-right in-place\n  // NOTE: `hint` is a lowest bit before trailing zeroes\n  // NOTE: if `extended` is present - it will be filled with destroyed bits\n  BN.prototype.iushrn = function iushrn (bits, hint, extended) {\n    assert(typeof bits === 'number' && bits >= 0);\n    var h;\n    if (hint) {\n      h = (hint - (hint % 26)) / 26;\n    } else {\n      h = 0;\n    }\n\n    var r = bits % 26;\n    var s = Math.min((bits - r) / 26, this.length);\n    var mask = 0x3ffffff ^ ((0x3ffffff >>> r) << r);\n    var maskedWords = extended;\n\n    h -= s;\n    h = Math.max(0, h);\n\n    // Extended mode, copy masked part\n    if (maskedWords) {\n      for (var i = 0; i < s; i++) {\n        maskedWords.words[i] = this.words[i];\n      }\n      maskedWords.length = s;\n    }\n\n    if (s === 0) {\n      // No-op, we should not move anything at all\n    } else if (this.length > s) {\n      this.length -= s;\n      for (i = 0; i < this.length; i++) {\n        this.words[i] = this.words[i + s];\n      }\n    } else {\n      this.words[0] = 0;\n      this.length = 1;\n    }\n\n    var carry = 0;\n    for (i = this.length - 1; i >= 0 && (carry !== 0 || i >= h); i--) {\n      var word = this.words[i] | 0;\n      this.words[i] = (carry << (26 - r)) | (word >>> r);\n      carry = word & mask;\n    }\n\n    // Push carried bits as a mask\n    if (maskedWords && carry !== 0) {\n      maskedWords.words[maskedWords.length++] = carry;\n    }\n\n    if (this.length === 0) {\n      this.words[0] = 0;\n      this.length = 1;\n    }\n\n    return this.strip();\n  };\n\n  BN.prototype.ishrn = function ishrn (bits, hint, extended) {\n    // TODO(indutny): implement me\n    assert(this.negative === 0);\n    return this.iushrn(bits, hint, extended);\n  };\n\n  // Shift-left\n  BN.prototype.shln = function shln (bits) {\n    return this.clone().ishln(bits);\n  };\n\n  BN.prototype.ushln = function ushln (bits) {\n    return this.clone().iushln(bits);\n  };\n\n  // Shift-right\n  BN.prototype.shrn = function shrn (bits) {\n    return this.clone().ishrn(bits);\n  };\n\n  BN.prototype.ushrn = function ushrn (bits) {\n    return this.clone().iushrn(bits);\n  };\n\n  // Test if n bit is set\n  BN.prototype.testn = function testn (bit) {\n    assert(typeof bit === 'number' && bit >= 0);\n    var r = bit % 26;\n    var s = (bit - r) / 26;\n    var q = 1 << r;\n\n    // Fast case: bit is much higher than all existing words\n    if (this.length <= s) return false;\n\n    // Check bit and return\n    var w = this.words[s];\n\n    return !!(w & q);\n  };\n\n  // Return only lowers bits of number (in-place)\n  BN.prototype.imaskn = function imaskn (bits) {\n    assert(typeof bits === 'number' && bits >= 0);\n    var r = bits % 26;\n    var s = (bits - r) / 26;\n\n    assert(this.negative === 0, 'imaskn works only with positive numbers');\n\n    if (this.length <= s) {\n      return this;\n    }\n\n    if (r !== 0) {\n      s++;\n    }\n    this.length = Math.min(s, this.length);\n\n    if (r !== 0) {\n      var mask = 0x3ffffff ^ ((0x3ffffff >>> r) << r);\n      this.words[this.length - 1] &= mask;\n    }\n\n    return this.strip();\n  };\n\n  // Return only lowers bits of number\n  BN.prototype.maskn = function maskn (bits) {\n    return this.clone().imaskn(bits);\n  };\n\n  // Add plain number `num` to `this`\n  BN.prototype.iaddn = function iaddn (num) {\n    assert(typeof num === 'number');\n    assert(num < 0x4000000);\n    if (num < 0) return this.isubn(-num);\n\n    // Possible sign change\n    if (this.negative !== 0) {\n      if (this.length === 1 && (this.words[0] | 0) < num) {\n        this.words[0] = num - (this.words[0] | 0);\n        this.negative = 0;\n        return this;\n      }\n\n      this.negative = 0;\n      this.isubn(num);\n      this.negative = 1;\n      return this;\n    }\n\n    // Add without checks\n    return this._iaddn(num);\n  };\n\n  BN.prototype._iaddn = function _iaddn (num) {\n    this.words[0] += num;\n\n    // Carry\n    for (var i = 0; i < this.length && this.words[i] >= 0x4000000; i++) {\n      this.words[i] -= 0x4000000;\n      if (i === this.length - 1) {\n        this.words[i + 1] = 1;\n      } else {\n        this.words[i + 1]++;\n      }\n    }\n    this.length = Math.max(this.length, i + 1);\n\n    return this;\n  };\n\n  // Subtract plain number `num` from `this`\n  BN.prototype.isubn = function isubn (num) {\n    assert(typeof num === 'number');\n    assert(num < 0x4000000);\n    if (num < 0) return this.iaddn(-num);\n\n    if (this.negative !== 0) {\n      this.negative = 0;\n      this.iaddn(num);\n      this.negative = 1;\n      return this;\n    }\n\n    this.words[0] -= num;\n\n    if (this.length === 1 && this.words[0] < 0) {\n      this.words[0] = -this.words[0];\n      this.negative = 1;\n    } else {\n      // Carry\n      for (var i = 0; i < this.length && this.words[i] < 0; i++) {\n        this.words[i] += 0x4000000;\n        this.words[i + 1] -= 1;\n      }\n    }\n\n    return this.strip();\n  };\n\n  BN.prototype.addn = function addn (num) {\n    return this.clone().iaddn(num);\n  };\n\n  BN.prototype.subn = function subn (num) {\n    return this.clone().isubn(num);\n  };\n\n  BN.prototype.iabs = function iabs () {\n    this.negative = 0;\n\n    return this;\n  };\n\n  BN.prototype.abs = function abs () {\n    return this.clone().iabs();\n  };\n\n  BN.prototype._ishlnsubmul = function _ishlnsubmul (num, mul, shift) {\n    var len = num.length + shift;\n    var i;\n\n    this._expand(len);\n\n    var w;\n    var carry = 0;\n    for (i = 0; i < num.length; i++) {\n      w = (this.words[i + shift] | 0) + carry;\n      var right = (num.words[i] | 0) * mul;\n      w -= right & 0x3ffffff;\n      carry = (w >> 26) - ((right / 0x4000000) | 0);\n      this.words[i + shift] = w & 0x3ffffff;\n    }\n    for (; i < this.length - shift; i++) {\n      w = (this.words[i + shift] | 0) + carry;\n      carry = w >> 26;\n      this.words[i + shift] = w & 0x3ffffff;\n    }\n\n    if (carry === 0) return this.strip();\n\n    // Subtraction overflow\n    assert(carry === -1);\n    carry = 0;\n    for (i = 0; i < this.length; i++) {\n      w = -(this.words[i] | 0) + carry;\n      carry = w >> 26;\n      this.words[i] = w & 0x3ffffff;\n    }\n    this.negative = 1;\n\n    return this.strip();\n  };\n\n  BN.prototype._wordDiv = function _wordDiv (num, mode) {\n    var shift = this.length - num.length;\n\n    var a = this.clone();\n    var b = num;\n\n    // Normalize\n    var bhi = b.words[b.length - 1] | 0;\n    var bhiBits = this._countBits(bhi);\n    shift = 26 - bhiBits;\n    if (shift !== 0) {\n      b = b.ushln(shift);\n      a.iushln(shift);\n      bhi = b.words[b.length - 1] | 0;\n    }\n\n    // Initialize quotient\n    var m = a.length - b.length;\n    var q;\n\n    if (mode !== 'mod') {\n      q = new BN(null);\n      q.length = m + 1;\n      q.words = new Array(q.length);\n      for (var i = 0; i < q.length; i++) {\n        q.words[i] = 0;\n      }\n    }\n\n    var diff = a.clone()._ishlnsubmul(b, 1, m);\n    if (diff.negative === 0) {\n      a = diff;\n      if (q) {\n        q.words[m] = 1;\n      }\n    }\n\n    for (var j = m - 1; j >= 0; j--) {\n      var qj = (a.words[b.length + j] | 0) * 0x4000000 +\n        (a.words[b.length + j - 1] | 0);\n\n      // NOTE: (qj / bhi) is (0x3ffffff * 0x4000000 + 0x3ffffff) / 0x2000000 max\n      // (0x7ffffff)\n      qj = Math.min((qj / bhi) | 0, 0x3ffffff);\n\n      a._ishlnsubmul(b, qj, j);\n      while (a.negative !== 0) {\n        qj--;\n        a.negative = 0;\n        a._ishlnsubmul(b, 1, j);\n        if (!a.isZero()) {\n          a.negative ^= 1;\n        }\n      }\n      if (q) {\n        q.words[j] = qj;\n      }\n    }\n    if (q) {\n      q.strip();\n    }\n    a.strip();\n\n    // Denormalize\n    if (mode !== 'div' && shift !== 0) {\n      a.iushrn(shift);\n    }\n\n    return {\n      div: q || null,\n      mod: a\n    };\n  };\n\n  // NOTE: 1) `mode` can be set to `mod` to request mod only,\n  //       to `div` to request div only, or be absent to\n  //       request both div & mod\n  //       2) `positive` is true if unsigned mod is requested\n  BN.prototype.divmod = function divmod (num, mode, positive) {\n    assert(!num.isZero());\n\n    if (this.isZero()) {\n      return {\n        div: new BN(0),\n        mod: new BN(0)\n      };\n    }\n\n    var div, mod, res;\n    if (this.negative !== 0 && num.negative === 0) {\n      res = this.neg().divmod(num, mode);\n\n      if (mode !== 'mod') {\n        div = res.div.neg();\n      }\n\n      if (mode !== 'div') {\n        mod = res.mod.neg();\n        if (positive && mod.negative !== 0) {\n          mod.iadd(num);\n        }\n      }\n\n      return {\n        div: div,\n        mod: mod\n      };\n    }\n\n    if (this.negative === 0 && num.negative !== 0) {\n      res = this.divmod(num.neg(), mode);\n\n      if (mode !== 'mod') {\n        div = res.div.neg();\n      }\n\n      return {\n        div: div,\n        mod: res.mod\n      };\n    }\n\n    if ((this.negative & num.negative) !== 0) {\n      res = this.neg().divmod(num.neg(), mode);\n\n      if (mode !== 'div') {\n        mod = res.mod.neg();\n        if (positive && mod.negative !== 0) {\n          mod.isub(num);\n        }\n      }\n\n      return {\n        div: res.div,\n        mod: mod\n      };\n    }\n\n    // Both numbers are positive at this point\n\n    // Strip both numbers to approximate shift value\n    if (num.length > this.length || this.cmp(num) < 0) {\n      return {\n        div: new BN(0),\n        mod: this\n      };\n    }\n\n    // Very short reduction\n    if (num.length === 1) {\n      if (mode === 'div') {\n        return {\n          div: this.divn(num.words[0]),\n          mod: null\n        };\n      }\n\n      if (mode === 'mod') {\n        return {\n          div: null,\n          mod: new BN(this.modn(num.words[0]))\n        };\n      }\n\n      return {\n        div: this.divn(num.words[0]),\n        mod: new BN(this.modn(num.words[0]))\n      };\n    }\n\n    return this._wordDiv(num, mode);\n  };\n\n  // Find `this` / `num`\n  BN.prototype.div = function div (num) {\n    return this.divmod(num, 'div', false).div;\n  };\n\n  // Find `this` % `num`\n  BN.prototype.mod = function mod (num) {\n    return this.divmod(num, 'mod', false).mod;\n  };\n\n  BN.prototype.umod = function umod (num) {\n    return this.divmod(num, 'mod', true).mod;\n  };\n\n  // Find Round(`this` / `num`)\n  BN.prototype.divRound = function divRound (num) {\n    var dm = this.divmod(num);\n\n    // Fast case - exact division\n    if (dm.mod.isZero()) return dm.div;\n\n    var mod = dm.div.negative !== 0 ? dm.mod.isub(num) : dm.mod;\n\n    var half = num.ushrn(1);\n    var r2 = num.andln(1);\n    var cmp = mod.cmp(half);\n\n    // Round down\n    if (cmp < 0 || r2 === 1 && cmp === 0) return dm.div;\n\n    // Round up\n    return dm.div.negative !== 0 ? dm.div.isubn(1) : dm.div.iaddn(1);\n  };\n\n  BN.prototype.modn = function modn (num) {\n    assert(num <= 0x3ffffff);\n    var p = (1 << 26) % num;\n\n    var acc = 0;\n    for (var i = this.length - 1; i >= 0; i--) {\n      acc = (p * acc + (this.words[i] | 0)) % num;\n    }\n\n    return acc;\n  };\n\n  // In-place division by number\n  BN.prototype.idivn = function idivn (num) {\n    assert(num <= 0x3ffffff);\n\n    var carry = 0;\n    for (var i = this.length - 1; i >= 0; i--) {\n      var w = (this.words[i] | 0) + carry * 0x4000000;\n      this.words[i] = (w / num) | 0;\n      carry = w % num;\n    }\n\n    return this.strip();\n  };\n\n  BN.prototype.divn = function divn (num) {\n    return this.clone().idivn(num);\n  };\n\n  BN.prototype.egcd = function egcd (p) {\n    assert(p.negative === 0);\n    assert(!p.isZero());\n\n    var x = this;\n    var y = p.clone();\n\n    if (x.negative !== 0) {\n      x = x.umod(p);\n    } else {\n      x = x.clone();\n    }\n\n    // A * x + B * y = x\n    var A = new BN(1);\n    var B = new BN(0);\n\n    // C * x + D * y = y\n    var C = new BN(0);\n    var D = new BN(1);\n\n    var g = 0;\n\n    while (x.isEven() && y.isEven()) {\n      x.iushrn(1);\n      y.iushrn(1);\n      ++g;\n    }\n\n    var yp = y.clone();\n    var xp = x.clone();\n\n    while (!x.isZero()) {\n      for (var i = 0, im = 1; (x.words[0] & im) === 0 && i < 26; ++i, im <<= 1);\n      if (i > 0) {\n        x.iushrn(i);\n        while (i-- > 0) {\n          if (A.isOdd() || B.isOdd()) {\n            A.iadd(yp);\n            B.isub(xp);\n          }\n\n          A.iushrn(1);\n          B.iushrn(1);\n        }\n      }\n\n      for (var j = 0, jm = 1; (y.words[0] & jm) === 0 && j < 26; ++j, jm <<= 1);\n      if (j > 0) {\n        y.iushrn(j);\n        while (j-- > 0) {\n          if (C.isOdd() || D.isOdd()) {\n            C.iadd(yp);\n            D.isub(xp);\n          }\n\n          C.iushrn(1);\n          D.iushrn(1);\n        }\n      }\n\n      if (x.cmp(y) >= 0) {\n        x.isub(y);\n        A.isub(C);\n        B.isub(D);\n      } else {\n        y.isub(x);\n        C.isub(A);\n        D.isub(B);\n      }\n    }\n\n    return {\n      a: C,\n      b: D,\n      gcd: y.iushln(g)\n    };\n  };\n\n  // This is reduced incarnation of the binary EEA\n  // above, designated to invert members of the\n  // _prime_ fields F(p) at a maximal speed\n  BN.prototype._invmp = function _invmp (p) {\n    assert(p.negative === 0);\n    assert(!p.isZero());\n\n    var a = this;\n    var b = p.clone();\n\n    if (a.negative !== 0) {\n      a = a.umod(p);\n    } else {\n      a = a.clone();\n    }\n\n    var x1 = new BN(1);\n    var x2 = new BN(0);\n\n    var delta = b.clone();\n\n    while (a.cmpn(1) > 0 && b.cmpn(1) > 0) {\n      for (var i = 0, im = 1; (a.words[0] & im) === 0 && i < 26; ++i, im <<= 1);\n      if (i > 0) {\n        a.iushrn(i);\n        while (i-- > 0) {\n          if (x1.isOdd()) {\n            x1.iadd(delta);\n          }\n\n          x1.iushrn(1);\n        }\n      }\n\n      for (var j = 0, jm = 1; (b.words[0] & jm) === 0 && j < 26; ++j, jm <<= 1);\n      if (j > 0) {\n        b.iushrn(j);\n        while (j-- > 0) {\n          if (x2.isOdd()) {\n            x2.iadd(delta);\n          }\n\n          x2.iushrn(1);\n        }\n      }\n\n      if (a.cmp(b) >= 0) {\n        a.isub(b);\n        x1.isub(x2);\n      } else {\n        b.isub(a);\n        x2.isub(x1);\n      }\n    }\n\n    var res;\n    if (a.cmpn(1) === 0) {\n      res = x1;\n    } else {\n      res = x2;\n    }\n\n    if (res.cmpn(0) < 0) {\n      res.iadd(p);\n    }\n\n    return res;\n  };\n\n  BN.prototype.gcd = function gcd (num) {\n    if (this.isZero()) return num.abs();\n    if (num.isZero()) return this.abs();\n\n    var a = this.clone();\n    var b = num.clone();\n    a.negative = 0;\n    b.negative = 0;\n\n    // Remove common factor of two\n    for (var shift = 0; a.isEven() && b.isEven(); shift++) {\n      a.iushrn(1);\n      b.iushrn(1);\n    }\n\n    do {\n      while (a.isEven()) {\n        a.iushrn(1);\n      }\n      while (b.isEven()) {\n        b.iushrn(1);\n      }\n\n      var r = a.cmp(b);\n      if (r < 0) {\n        // Swap `a` and `b` to make `a` always bigger than `b`\n        var t = a;\n        a = b;\n        b = t;\n      } else if (r === 0 || b.cmpn(1) === 0) {\n        break;\n      }\n\n      a.isub(b);\n    } while (true);\n\n    return b.iushln(shift);\n  };\n\n  // Invert number in the field F(num)\n  BN.prototype.invm = function invm (num) {\n    return this.egcd(num).a.umod(num);\n  };\n\n  BN.prototype.isEven = function isEven () {\n    return (this.words[0] & 1) === 0;\n  };\n\n  BN.prototype.isOdd = function isOdd () {\n    return (this.words[0] & 1) === 1;\n  };\n\n  // And first word and num\n  BN.prototype.andln = function andln (num) {\n    return this.words[0] & num;\n  };\n\n  // Increment at the bit position in-line\n  BN.prototype.bincn = function bincn (bit) {\n    assert(typeof bit === 'number');\n    var r = bit % 26;\n    var s = (bit - r) / 26;\n    var q = 1 << r;\n\n    // Fast case: bit is much higher than all existing words\n    if (this.length <= s) {\n      this._expand(s + 1);\n      this.words[s] |= q;\n      return this;\n    }\n\n    // Add bit and propagate, if needed\n    var carry = q;\n    for (var i = s; carry !== 0 && i < this.length; i++) {\n      var w = this.words[i] | 0;\n      w += carry;\n      carry = w >>> 26;\n      w &= 0x3ffffff;\n      this.words[i] = w;\n    }\n    if (carry !== 0) {\n      this.words[i] = carry;\n      this.length++;\n    }\n    return this;\n  };\n\n  BN.prototype.isZero = function isZero () {\n    return this.length === 1 && this.words[0] === 0;\n  };\n\n  BN.prototype.cmpn = function cmpn (num) {\n    var negative = num < 0;\n\n    if (this.negative !== 0 && !negative) return -1;\n    if (this.negative === 0 && negative) return 1;\n\n    this.strip();\n\n    var res;\n    if (this.length > 1) {\n      res = 1;\n    } else {\n      if (negative) {\n        num = -num;\n      }\n\n      assert(num <= 0x3ffffff, 'Number is too big');\n\n      var w = this.words[0] | 0;\n      res = w === num ? 0 : w < num ? -1 : 1;\n    }\n    if (this.negative !== 0) return -res | 0;\n    return res;\n  };\n\n  // Compare two numbers and return:\n  // 1 - if `this` > `num`\n  // 0 - if `this` == `num`\n  // -1 - if `this` < `num`\n  BN.prototype.cmp = function cmp (num) {\n    if (this.negative !== 0 && num.negative === 0) return -1;\n    if (this.negative === 0 && num.negative !== 0) return 1;\n\n    var res = this.ucmp(num);\n    if (this.negative !== 0) return -res | 0;\n    return res;\n  };\n\n  // Unsigned comparison\n  BN.prototype.ucmp = function ucmp (num) {\n    // At this point both numbers have the same sign\n    if (this.length > num.length) return 1;\n    if (this.length < num.length) return -1;\n\n    var res = 0;\n    for (var i = this.length - 1; i >= 0; i--) {\n      var a = this.words[i] | 0;\n      var b = num.words[i] | 0;\n\n      if (a === b) continue;\n      if (a < b) {\n        res = -1;\n      } else if (a > b) {\n        res = 1;\n      }\n      break;\n    }\n    return res;\n  };\n\n  BN.prototype.gtn = function gtn (num) {\n    return this.cmpn(num) === 1;\n  };\n\n  BN.prototype.gt = function gt (num) {\n    return this.cmp(num) === 1;\n  };\n\n  BN.prototype.gten = function gten (num) {\n    return this.cmpn(num) >= 0;\n  };\n\n  BN.prototype.gte = function gte (num) {\n    return this.cmp(num) >= 0;\n  };\n\n  BN.prototype.ltn = function ltn (num) {\n    return this.cmpn(num) === -1;\n  };\n\n  BN.prototype.lt = function lt (num) {\n    return this.cmp(num) === -1;\n  };\n\n  BN.prototype.lten = function lten (num) {\n    return this.cmpn(num) <= 0;\n  };\n\n  BN.prototype.lte = function lte (num) {\n    return this.cmp(num) <= 0;\n  };\n\n  BN.prototype.eqn = function eqn (num) {\n    return this.cmpn(num) === 0;\n  };\n\n  BN.prototype.eq = function eq (num) {\n    return this.cmp(num) === 0;\n  };\n\n  //\n  // A reduce context, could be using montgomery or something better, depending\n  // on the `m` itself.\n  //\n  BN.red = function red (num) {\n    return new Red(num);\n  };\n\n  BN.prototype.toRed = function toRed (ctx) {\n    assert(!this.red, 'Already a number in reduction context');\n    assert(this.negative === 0, 'red works only with positives');\n    return ctx.convertTo(this)._forceRed(ctx);\n  };\n\n  BN.prototype.fromRed = function fromRed () {\n    assert(this.red, 'fromRed works only with numbers in reduction context');\n    return this.red.convertFrom(this);\n  };\n\n  BN.prototype._forceRed = function _forceRed (ctx) {\n    this.red = ctx;\n    return this;\n  };\n\n  BN.prototype.forceRed = function forceRed (ctx) {\n    assert(!this.red, 'Already a number in reduction context');\n    return this._forceRed(ctx);\n  };\n\n  BN.prototype.redAdd = function redAdd (num) {\n    assert(this.red, 'redAdd works only with red numbers');\n    return this.red.add(this, num);\n  };\n\n  BN.prototype.redIAdd = function redIAdd (num) {\n    assert(this.red, 'redIAdd works only with red numbers');\n    return this.red.iadd(this, num);\n  };\n\n  BN.prototype.redSub = function redSub (num) {\n    assert(this.red, 'redSub works only with red numbers');\n    return this.red.sub(this, num);\n  };\n\n  BN.prototype.redISub = function redISub (num) {\n    assert(this.red, 'redISub works only with red numbers');\n    return this.red.isub(this, num);\n  };\n\n  BN.prototype.redShl = function redShl (num) {\n    assert(this.red, 'redShl works only with red numbers');\n    return this.red.shl(this, num);\n  };\n\n  BN.prototype.redMul = function redMul (num) {\n    assert(this.red, 'redMul works only with red numbers');\n    this.red._verify2(this, num);\n    return this.red.mul(this, num);\n  };\n\n  BN.prototype.redIMul = function redIMul (num) {\n    assert(this.red, 'redMul works only with red numbers');\n    this.red._verify2(this, num);\n    return this.red.imul(this, num);\n  };\n\n  BN.prototype.redSqr = function redSqr () {\n    assert(this.red, 'redSqr works only with red numbers');\n    this.red._verify1(this);\n    return this.red.sqr(this);\n  };\n\n  BN.prototype.redISqr = function redISqr () {\n    assert(this.red, 'redISqr works only with red numbers');\n    this.red._verify1(this);\n    return this.red.isqr(this);\n  };\n\n  // Square root over p\n  BN.prototype.redSqrt = function redSqrt () {\n    assert(this.red, 'redSqrt works only with red numbers');\n    this.red._verify1(this);\n    return this.red.sqrt(this);\n  };\n\n  BN.prototype.redInvm = function redInvm () {\n    assert(this.red, 'redInvm works only with red numbers');\n    this.red._verify1(this);\n    return this.red.invm(this);\n  };\n\n  // Return negative clone of `this` % `red modulo`\n  BN.prototype.redNeg = function redNeg () {\n    assert(this.red, 'redNeg works only with red numbers');\n    this.red._verify1(this);\n    return this.red.neg(this);\n  };\n\n  BN.prototype.redPow = function redPow (num) {\n    assert(this.red && !num.red, 'redPow(normalNum)');\n    this.red._verify1(this);\n    return this.red.pow(this, num);\n  };\n\n  // Prime numbers with efficient reduction\n  var primes = {\n    k256: null,\n    p224: null,\n    p192: null,\n    p25519: null\n  };\n\n  // Pseudo-Mersenne prime\n  function MPrime (name, p) {\n    // P = 2 ^ N - K\n    this.name = name;\n    this.p = new BN(p, 16);\n    this.n = this.p.bitLength();\n    this.k = new BN(1).iushln(this.n).isub(this.p);\n\n    this.tmp = this._tmp();\n  }\n\n  MPrime.prototype._tmp = function _tmp () {\n    var tmp = new BN(null);\n    tmp.words = new Array(Math.ceil(this.n / 13));\n    return tmp;\n  };\n\n  MPrime.prototype.ireduce = function ireduce (num) {\n    // Assumes that `num` is less than `P^2`\n    // num = HI * (2 ^ N - K) + HI * K + LO = HI * K + LO (mod P)\n    var r = num;\n    var rlen;\n\n    do {\n      this.split(r, this.tmp);\n      r = this.imulK(r);\n      r = r.iadd(this.tmp);\n      rlen = r.bitLength();\n    } while (rlen > this.n);\n\n    var cmp = rlen < this.n ? -1 : r.ucmp(this.p);\n    if (cmp === 0) {\n      r.words[0] = 0;\n      r.length = 1;\n    } else if (cmp > 0) {\n      r.isub(this.p);\n    } else {\n      r.strip();\n    }\n\n    return r;\n  };\n\n  MPrime.prototype.split = function split (input, out) {\n    input.iushrn(this.n, 0, out);\n  };\n\n  MPrime.prototype.imulK = function imulK (num) {\n    return num.imul(this.k);\n  };\n\n  function K256 () {\n    MPrime.call(\n      this,\n      'k256',\n      'ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff fffffffe fffffc2f');\n  }\n  inherits(K256, MPrime);\n\n  K256.prototype.split = function split (input, output) {\n    // 256 = 9 * 26 + 22\n    var mask = 0x3fffff;\n\n    var outLen = Math.min(input.length, 9);\n    for (var i = 0; i < outLen; i++) {\n      output.words[i] = input.words[i];\n    }\n    output.length = outLen;\n\n    if (input.length <= 9) {\n      input.words[0] = 0;\n      input.length = 1;\n      return;\n    }\n\n    // Shift by 9 limbs\n    var prev = input.words[9];\n    output.words[output.length++] = prev & mask;\n\n    for (i = 10; i < input.length; i++) {\n      var next = input.words[i] | 0;\n      input.words[i - 10] = ((next & mask) << 4) | (prev >>> 22);\n      prev = next;\n    }\n    prev >>>= 22;\n    input.words[i - 10] = prev;\n    if (prev === 0 && input.length > 10) {\n      input.length -= 10;\n    } else {\n      input.length -= 9;\n    }\n  };\n\n  K256.prototype.imulK = function imulK (num) {\n    // K = 0x1000003d1 = [ 0x40, 0x3d1 ]\n    num.words[num.length] = 0;\n    num.words[num.length + 1] = 0;\n    num.length += 2;\n\n    // bounded at: 0x40 * 0x3ffffff + 0x3d0 = 0x100000390\n    var lo = 0;\n    for (var i = 0; i < num.length; i++) {\n      var w = num.words[i] | 0;\n      lo += w * 0x3d1;\n      num.words[i] = lo & 0x3ffffff;\n      lo = w * 0x40 + ((lo / 0x4000000) | 0);\n    }\n\n    // Fast length reduction\n    if (num.words[num.length - 1] === 0) {\n      num.length--;\n      if (num.words[num.length - 1] === 0) {\n        num.length--;\n      }\n    }\n    return num;\n  };\n\n  function P224 () {\n    MPrime.call(\n      this,\n      'p224',\n      'ffffffff ffffffff ffffffff ffffffff 00000000 00000000 00000001');\n  }\n  inherits(P224, MPrime);\n\n  function P192 () {\n    MPrime.call(\n      this,\n      'p192',\n      'ffffffff ffffffff ffffffff fffffffe ffffffff ffffffff');\n  }\n  inherits(P192, MPrime);\n\n  function P25519 () {\n    // 2 ^ 255 - 19\n    MPrime.call(\n      this,\n      '25519',\n      '7fffffffffffffff ffffffffffffffff ffffffffffffffff ffffffffffffffed');\n  }\n  inherits(P25519, MPrime);\n\n  P25519.prototype.imulK = function imulK (num) {\n    // K = 0x13\n    var carry = 0;\n    for (var i = 0; i < num.length; i++) {\n      var hi = (num.words[i] | 0) * 0x13 + carry;\n      var lo = hi & 0x3ffffff;\n      hi >>>= 26;\n\n      num.words[i] = lo;\n      carry = hi;\n    }\n    if (carry !== 0) {\n      num.words[num.length++] = carry;\n    }\n    return num;\n  };\n\n  // Exported mostly for testing purposes, use plain name instead\n  BN._prime = function prime (name) {\n    // Cached version of prime\n    if (primes[name]) return primes[name];\n\n    var prime;\n    if (name === 'k256') {\n      prime = new K256();\n    } else if (name === 'p224') {\n      prime = new P224();\n    } else if (name === 'p192') {\n      prime = new P192();\n    } else if (name === 'p25519') {\n      prime = new P25519();\n    } else {\n      throw new Error('Unknown prime ' + name);\n    }\n    primes[name] = prime;\n\n    return prime;\n  };\n\n  //\n  // Base reduction engine\n  //\n  function Red (m) {\n    if (typeof m === 'string') {\n      var prime = BN._prime(m);\n      this.m = prime.p;\n      this.prime = prime;\n    } else {\n      assert(m.gtn(1), 'modulus must be greater than 1');\n      this.m = m;\n      this.prime = null;\n    }\n  }\n\n  Red.prototype._verify1 = function _verify1 (a) {\n    assert(a.negative === 0, 'red works only with positives');\n    assert(a.red, 'red works only with red numbers');\n  };\n\n  Red.prototype._verify2 = function _verify2 (a, b) {\n    assert((a.negative | b.negative) === 0, 'red works only with positives');\n    assert(a.red && a.red === b.red,\n      'red works only with red numbers');\n  };\n\n  Red.prototype.imod = function imod (a) {\n    if (this.prime) return this.prime.ireduce(a)._forceRed(this);\n    return a.umod(this.m)._forceRed(this);\n  };\n\n  Red.prototype.neg = function neg (a) {\n    if (a.isZero()) {\n      return a.clone();\n    }\n\n    return this.m.sub(a)._forceRed(this);\n  };\n\n  Red.prototype.add = function add (a, b) {\n    this._verify2(a, b);\n\n    var res = a.add(b);\n    if (res.cmp(this.m) >= 0) {\n      res.isub(this.m);\n    }\n    return res._forceRed(this);\n  };\n\n  Red.prototype.iadd = function iadd (a, b) {\n    this._verify2(a, b);\n\n    var res = a.iadd(b);\n    if (res.cmp(this.m) >= 0) {\n      res.isub(this.m);\n    }\n    return res;\n  };\n\n  Red.prototype.sub = function sub (a, b) {\n    this._verify2(a, b);\n\n    var res = a.sub(b);\n    if (res.cmpn(0) < 0) {\n      res.iadd(this.m);\n    }\n    return res._forceRed(this);\n  };\n\n  Red.prototype.isub = function isub (a, b) {\n    this._verify2(a, b);\n\n    var res = a.isub(b);\n    if (res.cmpn(0) < 0) {\n      res.iadd(this.m);\n    }\n    return res;\n  };\n\n  Red.prototype.shl = function shl (a, num) {\n    this._verify1(a);\n    return this.imod(a.ushln(num));\n  };\n\n  Red.prototype.imul = function imul (a, b) {\n    this._verify2(a, b);\n    return this.imod(a.imul(b));\n  };\n\n  Red.prototype.mul = function mul (a, b) {\n    this._verify2(a, b);\n    return this.imod(a.mul(b));\n  };\n\n  Red.prototype.isqr = function isqr (a) {\n    return this.imul(a, a.clone());\n  };\n\n  Red.prototype.sqr = function sqr (a) {\n    return this.mul(a, a);\n  };\n\n  Red.prototype.sqrt = function sqrt (a) {\n    if (a.isZero()) return a.clone();\n\n    var mod3 = this.m.andln(3);\n    assert(mod3 % 2 === 1);\n\n    // Fast case\n    if (mod3 === 3) {\n      var pow = this.m.add(new BN(1)).iushrn(2);\n      return this.pow(a, pow);\n    }\n\n    // Tonelli-Shanks algorithm (Totally unoptimized and slow)\n    //\n    // Find Q and S, that Q * 2 ^ S = (P - 1)\n    var q = this.m.subn(1);\n    var s = 0;\n    while (!q.isZero() && q.andln(1) === 0) {\n      s++;\n      q.iushrn(1);\n    }\n    assert(!q.isZero());\n\n    var one = new BN(1).toRed(this);\n    var nOne = one.redNeg();\n\n    // Find quadratic non-residue\n    // NOTE: Max is such because of generalized Riemann hypothesis.\n    var lpow = this.m.subn(1).iushrn(1);\n    var z = this.m.bitLength();\n    z = new BN(2 * z * z).toRed(this);\n\n    while (this.pow(z, lpow).cmp(nOne) !== 0) {\n      z.redIAdd(nOne);\n    }\n\n    var c = this.pow(z, q);\n    var r = this.pow(a, q.addn(1).iushrn(1));\n    var t = this.pow(a, q);\n    var m = s;\n    while (t.cmp(one) !== 0) {\n      var tmp = t;\n      for (var i = 0; tmp.cmp(one) !== 0; i++) {\n        tmp = tmp.redSqr();\n      }\n      assert(i < m);\n      var b = this.pow(c, new BN(1).iushln(m - i - 1));\n\n      r = r.redMul(b);\n      c = b.redSqr();\n      t = t.redMul(c);\n      m = i;\n    }\n\n    return r;\n  };\n\n  Red.prototype.invm = function invm (a) {\n    var inv = a._invmp(this.m);\n    if (inv.negative !== 0) {\n      inv.negative = 0;\n      return this.imod(inv).redNeg();\n    } else {\n      return this.imod(inv);\n    }\n  };\n\n  Red.prototype.pow = function pow (a, num) {\n    if (num.isZero()) return new BN(1);\n    if (num.cmpn(1) === 0) return a.clone();\n\n    var windowSize = 4;\n    var wnd = new Array(1 << windowSize);\n    wnd[0] = new BN(1).toRed(this);\n    wnd[1] = a;\n    for (var i = 2; i < wnd.length; i++) {\n      wnd[i] = this.mul(wnd[i - 1], a);\n    }\n\n    var res = wnd[0];\n    var current = 0;\n    var currentLen = 0;\n    var start = num.bitLength() % 26;\n    if (start === 0) {\n      start = 26;\n    }\n\n    for (i = num.length - 1; i >= 0; i--) {\n      var word = num.words[i];\n      for (var j = start - 1; j >= 0; j--) {\n        var bit = (word >> j) & 1;\n        if (res !== wnd[0]) {\n          res = this.sqr(res);\n        }\n\n        if (bit === 0 && current === 0) {\n          currentLen = 0;\n          continue;\n        }\n\n        current <<= 1;\n        current |= bit;\n        currentLen++;\n        if (currentLen !== windowSize && (i !== 0 || j !== 0)) continue;\n\n        res = this.mul(res, wnd[current]);\n        currentLen = 0;\n        current = 0;\n      }\n      start = 26;\n    }\n\n    return res;\n  };\n\n  Red.prototype.convertTo = function convertTo (num) {\n    var r = num.umod(this.m);\n\n    return r === num ? r.clone() : r;\n  };\n\n  Red.prototype.convertFrom = function convertFrom (num) {\n    var res = num.clone();\n    res.red = null;\n    return res;\n  };\n\n  //\n  // Montgomery method engine\n  //\n\n  BN.mont = function mont (num) {\n    return new Mont(num);\n  };\n\n  function Mont (m) {\n    Red.call(this, m);\n\n    this.shift = this.m.bitLength();\n    if (this.shift % 26 !== 0) {\n      this.shift += 26 - (this.shift % 26);\n    }\n\n    this.r = new BN(1).iushln(this.shift);\n    this.r2 = this.imod(this.r.sqr());\n    this.rinv = this.r._invmp(this.m);\n\n    this.minv = this.rinv.mul(this.r).isubn(1).div(this.m);\n    this.minv = this.minv.umod(this.r);\n    this.minv = this.r.sub(this.minv);\n  }\n  inherits(Mont, Red);\n\n  Mont.prototype.convertTo = function convertTo (num) {\n    return this.imod(num.ushln(this.shift));\n  };\n\n  Mont.prototype.convertFrom = function convertFrom (num) {\n    var r = this.imod(num.mul(this.rinv));\n    r.red = null;\n    return r;\n  };\n\n  Mont.prototype.imul = function imul (a, b) {\n    if (a.isZero() || b.isZero()) {\n      a.words[0] = 0;\n      a.length = 1;\n      return a;\n    }\n\n    var t = a.imul(b);\n    var c = t.maskn(this.shift).mul(this.minv).imaskn(this.shift).mul(this.m);\n    var u = t.isub(c).iushrn(this.shift);\n    var res = u;\n\n    if (u.cmp(this.m) >= 0) {\n      res = u.isub(this.m);\n    } else if (u.cmpn(0) < 0) {\n      res = u.iadd(this.m);\n    }\n\n    return res._forceRed(this);\n  };\n\n  Mont.prototype.mul = function mul (a, b) {\n    if (a.isZero() || b.isZero()) return new BN(0)._forceRed(this);\n\n    var t = a.mul(b);\n    var c = t.maskn(this.shift).mul(this.minv).imaskn(this.shift).mul(this.m);\n    var u = t.isub(c).iushrn(this.shift);\n    var res = u;\n    if (u.cmp(this.m) >= 0) {\n      res = u.isub(this.m);\n    } else if (u.cmpn(0) < 0) {\n      res = u.iadd(this.m);\n    }\n\n    return res._forceRed(this);\n  };\n\n  Mont.prototype.invm = function invm (a) {\n    // (AR)^-1 * R^2 = (A^-1 * R^-1) * R^2 = A^-1 * R\n    var res = this.imod(a._invmp(this.m).mul(this.r2));\n    return res._forceRed(this);\n  };\n})(typeof module === 'undefined' || module, this);\n","var getPrototypeOf = require(\"./getPrototypeOf\");\n\nvar setPrototypeOf = require(\"./setPrototypeOf\");\n\nvar isNativeFunction = require(\"./isNativeFunction\");\n\nvar construct = require(\"./construct\");\n\nfunction _wrapNativeSuper(Class) {\n  var _cache = typeof Map === \"function\" ? new Map() : undefined;\n\n  module.exports = _wrapNativeSuper = function _wrapNativeSuper(Class) {\n    if (Class === null || !isNativeFunction(Class)) return Class;\n\n    if (typeof Class !== \"function\") {\n      throw new TypeError(\"Super expression must either be null or a function\");\n    }\n\n    if (typeof _cache !== \"undefined\") {\n      if (_cache.has(Class)) return _cache.get(Class);\n\n      _cache.set(Class, Wrapper);\n    }\n\n    function Wrapper() {\n      return construct(Class, arguments, getPrototypeOf(this).constructor);\n    }\n\n    Wrapper.prototype = Object.create(Class.prototype, {\n      constructor: {\n        value: Wrapper,\n        enumerable: false,\n        writable: true,\n        configurable: true\n      }\n    });\n    return setPrototypeOf(Wrapper, Class);\n  };\n\n  return _wrapNativeSuper(Class);\n}\n\nmodule.exports = _wrapNativeSuper;","function _isNativeFunction(fn) {\n  return Function.toString.call(fn).indexOf(\"[native code]\") !== -1;\n}\n\nmodule.exports = _isNativeFunction;","'use strict';\n\nexports.decode = exports.parse = require('./decode');\nexports.encode = exports.stringify = require('./encode');\n","// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n'use strict';\n\n// If obj.hasOwnProperty has been overridden, then calling\n// obj.hasOwnProperty(prop) will break.\n// See: https://github.com/joyent/node/issues/1707\nfunction hasOwnProperty(obj, prop) {\n  return Object.prototype.hasOwnProperty.call(obj, prop);\n}\n\nmodule.exports = function(qs, sep, eq, options) {\n  sep = sep || '&';\n  eq = eq || '=';\n  var obj = {};\n\n  if (typeof qs !== 'string' || qs.length === 0) {\n    return obj;\n  }\n\n  var regexp = /\\+/g;\n  qs = qs.split(sep);\n\n  var maxKeys = 1000;\n  if (options && typeof options.maxKeys === 'number') {\n    maxKeys = options.maxKeys;\n  }\n\n  var len = qs.length;\n  // maxKeys <= 0 means that we should not limit keys count\n  if (maxKeys > 0 && len > maxKeys) {\n    len = maxKeys;\n  }\n\n  for (var i = 0; i < len; ++i) {\n    var x = qs[i].replace(regexp, '%20'),\n        idx = x.indexOf(eq),\n        kstr, vstr, k, v;\n\n    if (idx >= 0) {\n      kstr = x.substr(0, idx);\n      vstr = x.substr(idx + 1);\n    } else {\n      kstr = x;\n      vstr = '';\n    }\n\n    k = decodeURIComponent(kstr);\n    v = decodeURIComponent(vstr);\n\n    if (!hasOwnProperty(obj, k)) {\n      obj[k] = v;\n    } else if (isArray(obj[k])) {\n      obj[k].push(v);\n    } else {\n      obj[k] = [obj[k], v];\n    }\n  }\n\n  return obj;\n};\n\nvar isArray = Array.isArray || function (xs) {\n  return Object.prototype.toString.call(xs) === '[object Array]';\n};\n","// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n'use strict';\n\nvar stringifyPrimitive = function(v) {\n  switch (typeof v) {\n    case 'string':\n      return v;\n\n    case 'boolean':\n      return v ? 'true' : 'false';\n\n    case 'number':\n      return isFinite(v) ? v : '';\n\n    default:\n      return '';\n  }\n};\n\nmodule.exports = function(obj, sep, eq, name) {\n  sep = sep || '&';\n  eq = eq || '=';\n  if (obj === null) {\n    obj = undefined;\n  }\n\n  if (typeof obj === 'object') {\n    return map(objectKeys(obj), function(k) {\n      var ks = encodeURIComponent(stringifyPrimitive(k)) + eq;\n      if (isArray(obj[k])) {\n        return map(obj[k], function(v) {\n          return ks + encodeURIComponent(stringifyPrimitive(v));\n        }).join(sep);\n      } else {\n        return ks + encodeURIComponent(stringifyPrimitive(obj[k]));\n      }\n    }).join(sep);\n\n  }\n\n  if (!name) return '';\n  return encodeURIComponent(stringifyPrimitive(name)) + eq +\n         encodeURIComponent(stringifyPrimitive(obj));\n};\n\nvar isArray = Array.isArray || function (xs) {\n  return Object.prototype.toString.call(xs) === '[object Array]';\n};\n\nfunction map (xs, f) {\n  if (xs.map) return xs.map(f);\n  var res = [];\n  for (var i = 0; i < xs.length; i++) {\n    res.push(f(xs[i], i));\n  }\n  return res;\n}\n\nvar objectKeys = Object.keys || function (obj) {\n  var res = [];\n  for (var key in obj) {\n    if (Object.prototype.hasOwnProperty.call(obj, key)) res.push(key);\n  }\n  return res;\n};\n","var BN = require('bn.js');\nvar stripHexPrefix = require('strip-hex-prefix');\n\n/**\n * Returns a BN object, converts a number value to a BN\n * @param {String|Number|Object} `arg` input a string number, hex string number, number, BigNumber or BN object\n * @return {Object} `output` BN object of the number\n * @throws if the argument is not an array, object that isn't a bignumber, not a string number or number\n */\nmodule.exports = function numberToBN(arg) {\n  if (typeof arg === 'string' || typeof arg === 'number') {\n    var multiplier = new BN(1); // eslint-disable-line\n    var formattedString = String(arg).toLowerCase().trim();\n    var isHexPrefixed = formattedString.substr(0, 2) === '0x' || formattedString.substr(0, 3) === '-0x';\n    var stringArg = stripHexPrefix(formattedString); // eslint-disable-line\n    if (stringArg.substr(0, 1) === '-') {\n      stringArg = stripHexPrefix(stringArg.slice(1));\n      multiplier = new BN(-1, 10);\n    }\n    stringArg = stringArg === '' ? '0' : stringArg;\n\n    if ((!stringArg.match(/^-?[0-9]+$/) && stringArg.match(/^[0-9A-Fa-f]+$/))\n      || stringArg.match(/^[a-fA-F]+$/)\n      || (isHexPrefixed === true && stringArg.match(/^[0-9A-Fa-f]+$/))) {\n      return new BN(stringArg, 16).mul(multiplier);\n    }\n\n    if ((stringArg.match(/^-?[0-9]+$/) || stringArg === '') && isHexPrefixed === false) {\n      return new BN(stringArg, 10).mul(multiplier);\n    }\n  } else if (typeof arg === 'object' && arg.toString && (!arg.pop && !arg.push)) {\n    if (arg.toString(10).match(/^-?[0-9]+$/) && (arg.mul || arg.dividedToIntegerBy)) {\n      return new BN(arg.toString(10), 10);\n    }\n  }\n\n  throw new Error('[number-to-bn] while converting number ' + JSON.stringify(arg) + ' to BN.js instance, error: invalid number value. Value must be an integer, hex string, BN or BigNumber instance. Note, decimals are not supported.');\n}\n"],"sourceRoot":""}